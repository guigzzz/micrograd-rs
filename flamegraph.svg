<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1189.00"> </text><svg id="frames" x="10" width="1180" total_samples="621"><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="0.0000%" y="821" width="0.1610%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="0.0000%" y="805" width="0.1610%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="0.0000%" y="789" width="0.1610%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.32%)</title><rect x="0.0000%" y="837" width="0.3221%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="847.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.16%)</title><rect x="0.1610%" y="821" width="0.1610%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.4110%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.16%)</title><rect x="0.1610%" y="805" width="0.1610%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.4110%" y="815.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="0.1610%" y="789" width="0.1610%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.4110%" y="799.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="0.1610%" y="773" width="0.1610%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.4110%" y="783.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="0.1610%" y="757" width="0.1610%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.4110%" y="767.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="0.3221%" y="757" width="0.4831%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="3"/><text x="0.5721%" y="767.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="0.3221%" y="741" width="0.4831%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="3"/><text x="0.5721%" y="751.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="0.3221%" y="725" width="0.4831%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="3"/><text x="0.5721%" y="735.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="0.8052%" y="725" width="0.1610%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="1"/><text x="1.0552%" y="735.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="0.8052%" y="709" width="0.1610%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="1"/><text x="1.0552%" y="719.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="0.8052%" y="693" width="0.1610%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="1.0552%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.16%)</title><rect x="0.9662%" y="549" width="0.1610%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="1.2162%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="0.9662%" y="533" width="0.1610%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="1.2162%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="0.9662%" y="517" width="0.1610%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="1.2162%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="0.9662%" y="501" width="0.1610%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="1.2162%" y="511.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.16%)</title><rect x="1.1272%" y="549" width="0.1610%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="1"/><text x="1.3772%" y="559.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.16%)</title><rect x="1.1272%" y="533" width="0.1610%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="1.3772%" y="543.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.16%)</title><rect x="1.1272%" y="517" width="0.1610%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="1.3772%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="1.1272%" y="501" width="0.1610%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="1.3772%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="1.1272%" y="485" width="0.1610%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="1.3772%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="1.1272%" y="469" width="0.1610%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="1.3772%" y="479.50"></text></g><g><title>&lt;[T] as rand::seq::SliceRandom&gt;::shuffle (9 samples, 1.45%)</title><rect x="0.0000%" y="853" width="1.4493%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="9"/><text x="0.2500%" y="863.50"></text></g><g><title>rand::seq::gen_index (7 samples, 1.13%)</title><rect x="0.3221%" y="837" width="1.1272%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="7"/><text x="0.5721%" y="847.50"></text></g><g><title>rand::rng::Rng::gen_range (7 samples, 1.13%)</title><rect x="0.3221%" y="821" width="1.1272%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="7"/><text x="0.5721%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distributions::uniform::SampleRange&lt;T&gt;&gt;::sample_single (7 samples, 1.13%)</title><rect x="0.3221%" y="805" width="1.1272%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="7"/><text x="0.5721%" y="815.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single (7 samples, 1.13%)</title><rect x="0.3221%" y="789" width="1.1272%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="7"/><text x="0.5721%" y="799.50"></text></g><g><title>&lt;rand::distributions::uniform::UniformInt&lt;u32&gt; as rand::distributions::uniform::UniformSampler&gt;::sample_single_inclusive (7 samples, 1.13%)</title><rect x="0.3221%" y="773" width="1.1272%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="7"/><text x="0.5721%" y="783.50"></text></g><g><title>rand::rng::Rng::gen (4 samples, 0.64%)</title><rect x="0.8052%" y="757" width="0.6441%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="4"/><text x="1.0552%" y="767.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u32&gt; for rand::distributions::Standard&gt;::sample (4 samples, 0.64%)</title><rect x="0.8052%" y="741" width="0.6441%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="4"/><text x="1.0552%" y="751.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (3 samples, 0.48%)</title><rect x="0.9662%" y="725" width="0.4831%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="3"/><text x="1.2162%" y="735.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (3 samples, 0.48%)</title><rect x="0.9662%" y="709" width="0.4831%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="3"/><text x="1.2162%" y="719.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (3 samples, 0.48%)</title><rect x="0.9662%" y="693" width="0.4831%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="3"/><text x="1.2162%" y="703.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (3 samples, 0.48%)</title><rect x="0.9662%" y="677" width="0.4831%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="3"/><text x="1.2162%" y="687.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (3 samples, 0.48%)</title><rect x="0.9662%" y="661" width="0.4831%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="3"/><text x="1.2162%" y="671.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (3 samples, 0.48%)</title><rect x="0.9662%" y="645" width="0.4831%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="3"/><text x="1.2162%" y="655.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (3 samples, 0.48%)</title><rect x="0.9662%" y="629" width="0.4831%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="3"/><text x="1.2162%" y="639.50"></text></g><g><title>rand_chacha::guts::refill_wide (3 samples, 0.48%)</title><rect x="0.9662%" y="613" width="0.4831%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="3"/><text x="1.2162%" y="623.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (3 samples, 0.48%)</title><rect x="0.9662%" y="597" width="0.4831%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="3"/><text x="1.2162%" y="607.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (3 samples, 0.48%)</title><rect x="0.9662%" y="581" width="0.4831%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="3"/><text x="1.2162%" y="591.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (3 samples, 0.48%)</title><rect x="0.9662%" y="565" width="0.4831%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="3"/><text x="1.2162%" y="575.50"></text></g><g><title>rand_chacha::guts::undiagonalize (1 samples, 0.16%)</title><rect x="1.2882%" y="549" width="0.1610%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="1"/><text x="1.5382%" y="559.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (1 samples, 0.16%)</title><rect x="1.2882%" y="533" width="0.1610%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="1"/><text x="1.5382%" y="543.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (1 samples, 0.16%)</title><rect x="1.2882%" y="517" width="0.1610%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="1"/><text x="1.5382%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.16%)</title><rect x="1.2882%" y="501" width="0.1610%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="1"/><text x="1.5382%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.16%)</title><rect x="1.2882%" y="485" width="0.1610%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="1"/><text x="1.5382%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="1.2882%" y="469" width="0.1610%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="1"/><text x="1.5382%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="1.2882%" y="453" width="0.1610%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="1"/><text x="1.5382%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="1.2882%" y="437" width="0.1610%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="1"/><text x="1.5382%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="1.4493%" y="853" width="0.1610%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="1"/><text x="1.6993%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.16%)</title><rect x="1.4493%" y="837" width="0.1610%" height="15" fill="rgb(231,138,38)" fg:x="9" fg:w="1"/><text x="1.6993%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.16%)</title><rect x="1.4493%" y="821" width="0.1610%" height="15" fill="rgb(231,145,46)" fg:x="9" fg:w="1"/><text x="1.6993%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.16%)</title><rect x="1.4493%" y="805" width="0.1610%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="1"/><text x="1.6993%" y="815.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.16%)</title><rect x="1.4493%" y="789" width="0.1610%" height="15" fill="rgb(217,147,25)" fg:x="9" fg:w="1"/><text x="1.6993%" y="799.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (1 samples, 0.16%)</title><rect x="1.4493%" y="773" width="0.1610%" height="15" fill="rgb(247,81,37)" fg:x="9" fg:w="1"/><text x="1.6993%" y="783.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="1.4493%" y="757" width="0.1610%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="1"/><text x="1.6993%" y="767.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="1.4493%" y="741" width="0.1610%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="1"/><text x="1.6993%" y="751.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="1.4493%" y="725" width="0.1610%" height="15" fill="rgb(248,47,43)" fg:x="9" fg:w="1"/><text x="1.6993%" y="735.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="1.6103%" y="853" width="0.1610%" height="15" fill="rgb(221,10,30)" fg:x="10" fg:w="1"/><text x="1.8603%" y="863.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="1.6103%" y="837" width="0.1610%" height="15" fill="rgb(210,229,1)" fg:x="10" fg:w="1"/><text x="1.8603%" y="847.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="1.6103%" y="821" width="0.1610%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="1"/><text x="1.8603%" y="831.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend::extend (1 samples, 0.16%)</title><rect x="1.7713%" y="821" width="0.1610%" height="15" fill="rgb(234,67,33)" fg:x="11" fg:w="1"/><text x="2.0213%" y="831.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="1.7713%" y="805" width="0.1610%" height="15" fill="rgb(247,98,35)" fg:x="11" fg:w="1"/><text x="2.0213%" y="815.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="1.7713%" y="789" width="0.1610%" height="15" fill="rgb(247,138,52)" fg:x="11" fg:w="1"/><text x="2.0213%" y="799.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="1.7713%" y="773" width="0.1610%" height="15" fill="rgb(213,79,30)" fg:x="11" fg:w="1"/><text x="2.0213%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend_reserve (1 samples, 0.16%)</title><rect x="1.9324%" y="821" width="0.1610%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="1"/><text x="2.1824%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="1.9324%" y="805" width="0.1610%" height="15" fill="rgb(230,62,27)" fg:x="12" fg:w="1"/><text x="2.1824%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="1.9324%" y="789" width="0.1610%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="1"/><text x="2.1824%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.16%)</title><rect x="1.9324%" y="773" width="0.1610%" height="15" fill="rgb(244,35,45)" fg:x="12" fg:w="1"/><text x="2.1824%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="1.9324%" y="757" width="0.1610%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="1"/><text x="2.1824%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.16%)</title><rect x="1.9324%" y="741" width="0.1610%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="1"/><text x="2.1824%" y="751.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.16%)</title><rect x="1.9324%" y="725" width="0.1610%" height="15" fill="rgb(233,84,52)" fg:x="12" fg:w="1"/><text x="2.1824%" y="735.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="1.9324%" y="709" width="0.1610%" height="15" fill="rgb(207,117,47)" fg:x="12" fg:w="1"/><text x="2.1824%" y="719.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="1.9324%" y="693" width="0.1610%" height="15" fill="rgb(249,43,39)" fg:x="12" fg:w="1"/><text x="2.1824%" y="703.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="1.9324%" y="677" width="0.1610%" height="15" fill="rgb(209,38,44)" fg:x="12" fg:w="1"/><text x="2.1824%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="2.0934%" y="789" width="0.1610%" height="15" fill="rgb(236,212,23)" fg:x="13" fg:w="1"/><text x="2.3434%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.16%)</title><rect x="2.0934%" y="773" width="0.1610%" height="15" fill="rgb(242,79,21)" fg:x="13" fg:w="1"/><text x="2.3434%" y="783.50"></text></g><g><title>core::ptr::null_mut (1 samples, 0.16%)</title><rect x="2.0934%" y="757" width="0.1610%" height="15" fill="rgb(211,96,35)" fg:x="13" fg:w="1"/><text x="2.3434%" y="767.50"></text></g><g><title>core::ptr::invalid_mut (1 samples, 0.16%)</title><rect x="2.0934%" y="741" width="0.1610%" height="15" fill="rgb(253,215,40)" fg:x="13" fg:w="1"/><text x="2.3434%" y="751.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="2.0934%" y="725" width="0.1610%" height="15" fill="rgb(211,81,21)" fg:x="13" fg:w="1"/><text x="2.3434%" y="735.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="2.0934%" y="709" width="0.1610%" height="15" fill="rgb(208,190,38)" fg:x="13" fg:w="1"/><text x="2.3434%" y="719.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="2.0934%" y="693" width="0.1610%" height="15" fill="rgb(235,213,38)" fg:x="13" fg:w="1"/><text x="2.3434%" y="703.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend::extend::{{closure}} (1 samples, 0.16%)</title><rect x="2.2544%" y="773" width="0.1610%" height="15" fill="rgb(237,122,38)" fg:x="14" fg:w="1"/><text x="2.5044%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend_one (1 samples, 0.16%)</title><rect x="2.2544%" y="757" width="0.1610%" height="15" fill="rgb(244,218,35)" fg:x="14" fg:w="1"/><text x="2.5044%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="2.2544%" y="741" width="0.1610%" height="15" fill="rgb(240,68,47)" fg:x="14" fg:w="1"/><text x="2.5044%" y="751.50"></text></g><g><title>core::ptr::write (1 samples, 0.16%)</title><rect x="2.2544%" y="725" width="0.1610%" height="15" fill="rgb(210,16,53)" fg:x="14" fg:w="1"/><text x="2.5044%" y="735.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="2.2544%" y="709" width="0.1610%" height="15" fill="rgb(235,124,12)" fg:x="14" fg:w="1"/><text x="2.5044%" y="719.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="2.2544%" y="693" width="0.1610%" height="15" fill="rgb(224,169,11)" fg:x="14" fg:w="1"/><text x="2.5044%" y="703.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="2.2544%" y="677" width="0.1610%" height="15" fill="rgb(250,166,2)" fg:x="14" fg:w="1"/><text x="2.5044%" y="687.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="2.4155%" y="645" width="0.1610%" height="15" fill="rgb(242,216,29)" fg:x="15" fg:w="1"/><text x="2.6655%" y="655.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="2.4155%" y="629" width="0.1610%" height="15" fill="rgb(230,116,27)" fg:x="15" fg:w="1"/><text x="2.6655%" y="639.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="2.4155%" y="613" width="0.1610%" height="15" fill="rgb(228,99,48)" fg:x="15" fg:w="1"/><text x="2.6655%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.16%)</title><rect x="2.5765%" y="629" width="0.1610%" height="15" fill="rgb(253,11,6)" fg:x="16" fg:w="1"/><text x="2.8265%" y="639.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="2.5765%" y="613" width="0.1610%" height="15" fill="rgb(247,143,39)" fg:x="16" fg:w="1"/><text x="2.8265%" y="623.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="2.5765%" y="597" width="0.1610%" height="15" fill="rgb(236,97,10)" fg:x="16" fg:w="1"/><text x="2.8265%" y="607.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="2.5765%" y="581" width="0.1610%" height="15" fill="rgb(233,208,19)" fg:x="16" fg:w="1"/><text x="2.8265%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.48%)</title><rect x="2.4155%" y="661" width="0.4831%" height="15" fill="rgb(216,164,2)" fg:x="15" fg:w="3"/><text x="2.6655%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2 samples, 0.32%)</title><rect x="2.5765%" y="645" width="0.3221%" height="15" fill="rgb(220,129,5)" fg:x="16" fg:w="2"/><text x="2.8265%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.16%)</title><rect x="2.7375%" y="629" width="0.1610%" height="15" fill="rgb(242,17,10)" fg:x="17" fg:w="1"/><text x="2.9875%" y="639.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="2.7375%" y="613" width="0.1610%" height="15" fill="rgb(242,107,0)" fg:x="17" fg:w="1"/><text x="2.9875%" y="623.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="2.7375%" y="597" width="0.1610%" height="15" fill="rgb(251,28,31)" fg:x="17" fg:w="1"/><text x="2.9875%" y="607.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="2.7375%" y="581" width="0.1610%" height="15" fill="rgb(233,223,10)" fg:x="17" fg:w="1"/><text x="2.9875%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.81%)</title><rect x="2.4155%" y="693" width="0.8052%" height="15" fill="rgb(215,21,27)" fg:x="15" fg:w="5"/><text x="2.6655%" y="703.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.81%)</title><rect x="2.4155%" y="677" width="0.8052%" height="15" fill="rgb(232,23,21)" fg:x="15" fg:w="5"/><text x="2.6655%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (2 samples, 0.32%)</title><rect x="2.8986%" y="661" width="0.3221%" height="15" fill="rgb(244,5,23)" fg:x="18" fg:w="2"/><text x="3.1486%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.32%)</title><rect x="2.8986%" y="645" width="0.3221%" height="15" fill="rgb(226,81,46)" fg:x="18" fg:w="2"/><text x="3.1486%" y="655.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="2.8986%" y="629" width="0.3221%" height="15" fill="rgb(247,70,30)" fg:x="18" fg:w="2"/><text x="3.1486%" y="639.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="2.8986%" y="613" width="0.3221%" height="15" fill="rgb(212,68,19)" fg:x="18" fg:w="2"/><text x="3.1486%" y="623.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="2.8986%" y="597" width="0.3221%" height="15" fill="rgb(240,187,13)" fg:x="18" fg:w="2"/><text x="3.1486%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::ValuesMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.13%)</title><rect x="2.4155%" y="709" width="1.1272%" height="15" fill="rgb(223,113,26)" fg:x="15" fg:w="7"/><text x="2.6655%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.32%)</title><rect x="3.2206%" y="693" width="0.3221%" height="15" fill="rgb(206,192,2)" fg:x="20" fg:w="2"/><text x="3.4706%" y="703.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="3.2206%" y="677" width="0.3221%" height="15" fill="rgb(241,108,4)" fg:x="20" fg:w="2"/><text x="3.4706%" y="687.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="3.2206%" y="661" width="0.3221%" height="15" fill="rgb(247,173,49)" fg:x="20" fg:w="2"/><text x="3.4706%" y="671.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="3.2206%" y="645" width="0.3221%" height="15" fill="rgb(224,114,35)" fg:x="20" fg:w="2"/><text x="3.4706%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 1.29%)</title><rect x="2.4155%" y="741" width="1.2882%" height="15" fill="rgb(245,159,27)" fg:x="15" fg:w="8"/><text x="2.6655%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 1.29%)</title><rect x="2.4155%" y="725" width="1.2882%" height="15" fill="rgb(245,172,44)" fg:x="15" fg:w="8"/><text x="2.6655%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.16%)</title><rect x="3.5427%" y="709" width="0.1610%" height="15" fill="rgb(236,23,11)" fg:x="22" fg:w="1"/><text x="3.7927%" y="719.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_weights::{{closure}} (1 samples, 0.16%)</title><rect x="3.5427%" y="693" width="0.1610%" height="15" fill="rgb(205,117,38)" fg:x="22" fg:w="1"/><text x="3.7927%" y="703.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="3.5427%" y="677" width="0.1610%" height="15" fill="rgb(237,72,25)" fg:x="22" fg:w="1"/><text x="3.7927%" y="687.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="3.5427%" y="661" width="0.1610%" height="15" fill="rgb(244,70,9)" fg:x="22" fg:w="1"/><text x="3.7927%" y="671.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="3.5427%" y="645" width="0.1610%" height="15" fill="rgb(217,125,39)" fg:x="22" fg:w="1"/><text x="3.7927%" y="655.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_weights (9 samples, 1.45%)</title><rect x="2.4155%" y="757" width="1.4493%" height="15" fill="rgb(235,36,10)" fg:x="15" fg:w="9"/><text x="2.6655%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values_mut (1 samples, 0.16%)</title><rect x="3.7037%" y="741" width="0.1610%" height="15" fill="rgb(251,123,47)" fg:x="23" fg:w="1"/><text x="3.9537%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter_mut (1 samples, 0.16%)</title><rect x="3.7037%" y="725" width="0.1610%" height="15" fill="rgb(221,13,13)" fg:x="23" fg:w="1"/><text x="3.9537%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter_mut (1 samples, 0.16%)</title><rect x="3.7037%" y="709" width="0.1610%" height="15" fill="rgb(238,131,9)" fg:x="23" fg:w="1"/><text x="3.9537%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.16%)</title><rect x="3.7037%" y="693" width="0.1610%" height="15" fill="rgb(211,50,8)" fg:x="23" fg:w="1"/><text x="3.9537%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.16%)</title><rect x="3.7037%" y="677" width="0.1610%" height="15" fill="rgb(245,182,24)" fg:x="23" fg:w="1"/><text x="3.9537%" y="687.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="3.7037%" y="661" width="0.1610%" height="15" fill="rgb(242,14,37)" fg:x="23" fg:w="1"/><text x="3.9537%" y="671.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="3.7037%" y="645" width="0.1610%" height="15" fill="rgb(246,228,12)" fg:x="23" fg:w="1"/><text x="3.9537%" y="655.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="3.7037%" y="629" width="0.1610%" height="15" fill="rgb(213,55,15)" fg:x="23" fg:w="1"/><text x="3.9537%" y="639.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="3.8647%" y="709" width="0.1610%" height="15" fill="rgb(209,9,3)" fg:x="24" fg:w="1"/><text x="4.1147%" y="719.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="3.8647%" y="693" width="0.1610%" height="15" fill="rgb(230,59,30)" fg:x="24" fg:w="1"/><text x="4.1147%" y="703.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="3.8647%" y="677" width="0.1610%" height="15" fill="rgb(209,121,21)" fg:x="24" fg:w="1"/><text x="4.1147%" y="687.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="4.0258%" y="645" width="0.1610%" height="15" fill="rgb(220,109,13)" fg:x="25" fg:w="1"/><text x="4.2758%" y="655.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="4.0258%" y="629" width="0.1610%" height="15" fill="rgb(232,18,1)" fg:x="25" fg:w="1"/><text x="4.2758%" y="639.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="4.0258%" y="613" width="0.1610%" height="15" fill="rgb(215,41,42)" fg:x="25" fg:w="1"/><text x="4.2758%" y="623.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (5 samples, 0.81%)</title><rect x="4.1868%" y="629" width="0.8052%" height="15" fill="rgb(224,123,36)" fg:x="26" fg:w="5"/><text x="4.4368%" y="639.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (5 samples, 0.81%)</title><rect x="4.1868%" y="613" width="0.8052%" height="15" fill="rgb(240,125,3)" fg:x="26" fg:w="5"/><text x="4.4368%" y="623.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (5 samples, 0.81%)</title><rect x="4.1868%" y="597" width="0.8052%" height="15" fill="rgb(205,98,50)" fg:x="26" fg:w="5"/><text x="4.4368%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.13%)</title><rect x="4.0258%" y="693" width="1.1272%" height="15" fill="rgb(205,185,37)" fg:x="25" fg:w="7"/><text x="4.2758%" y="703.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.13%)</title><rect x="4.0258%" y="677" width="1.1272%" height="15" fill="rgb(238,207,15)" fg:x="25" fg:w="7"/><text x="4.2758%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.13%)</title><rect x="4.0258%" y="661" width="1.1272%" height="15" fill="rgb(213,199,42)" fg:x="25" fg:w="7"/><text x="4.2758%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (6 samples, 0.97%)</title><rect x="4.1868%" y="645" width="0.9662%" height="15" fill="rgb(235,201,11)" fg:x="26" fg:w="6"/><text x="4.4368%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.16%)</title><rect x="4.9919%" y="629" width="0.1610%" height="15" fill="rgb(207,46,11)" fg:x="31" fg:w="1"/><text x="5.2419%" y="639.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="4.9919%" y="613" width="0.1610%" height="15" fill="rgb(241,35,35)" fg:x="31" fg:w="1"/><text x="5.2419%" y="623.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="4.9919%" y="597" width="0.1610%" height="15" fill="rgb(243,32,47)" fg:x="31" fg:w="1"/><text x="5.2419%" y="607.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="4.9919%" y="581" width="0.1610%" height="15" fill="rgb(247,202,23)" fg:x="31" fg:w="1"/><text x="5.2419%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 1.45%)</title><rect x="3.8647%" y="741" width="1.4493%" height="15" fill="rgb(219,102,11)" fg:x="24" fg:w="9"/><text x="4.1147%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 1.45%)</title><rect x="3.8647%" y="725" width="1.4493%" height="15" fill="rgb(243,110,44)" fg:x="24" fg:w="9"/><text x="4.1147%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::ValuesMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 1.29%)</title><rect x="4.0258%" y="709" width="1.2882%" height="15" fill="rgb(222,74,54)" fg:x="25" fg:w="8"/><text x="4.2758%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.16%)</title><rect x="5.1530%" y="693" width="0.1610%" height="15" fill="rgb(216,99,12)" fg:x="32" fg:w="1"/><text x="5.4030%" y="703.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="5.1530%" y="677" width="0.1610%" height="15" fill="rgb(226,22,26)" fg:x="32" fg:w="1"/><text x="5.4030%" y="687.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="5.1530%" y="661" width="0.1610%" height="15" fill="rgb(217,163,10)" fg:x="32" fg:w="1"/><text x="5.4030%" y="671.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="5.1530%" y="645" width="0.1610%" height="15" fill="rgb(213,25,53)" fg:x="32" fg:w="1"/><text x="5.4030%" y="655.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="5.3140%" y="725" width="0.1610%" height="15" fill="rgb(252,105,26)" fg:x="33" fg:w="1"/><text x="5.5640%" y="735.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="5.3140%" y="709" width="0.1610%" height="15" fill="rgb(220,39,43)" fg:x="33" fg:w="1"/><text x="5.5640%" y="719.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="5.3140%" y="693" width="0.1610%" height="15" fill="rgb(229,68,48)" fg:x="33" fg:w="1"/><text x="5.5640%" y="703.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="5.4750%" y="677" width="0.1610%" height="15" fill="rgb(252,8,32)" fg:x="34" fg:w="1"/><text x="5.7250%" y="687.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="5.4750%" y="661" width="0.1610%" height="15" fill="rgb(223,20,43)" fg:x="34" fg:w="1"/><text x="5.7250%" y="671.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="5.4750%" y="645" width="0.1610%" height="15" fill="rgb(229,81,49)" fg:x="34" fg:w="1"/><text x="5.7250%" y="655.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::zero_grads (12 samples, 1.93%)</title><rect x="3.8647%" y="757" width="1.9324%" height="15" fill="rgb(236,28,36)" fg:x="24" fg:w="12"/><text x="4.1147%" y="767.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values_mut (3 samples, 0.48%)</title><rect x="5.3140%" y="741" width="0.4831%" height="15" fill="rgb(249,185,26)" fg:x="33" fg:w="3"/><text x="5.5640%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter_mut (2 samples, 0.32%)</title><rect x="5.4750%" y="725" width="0.3221%" height="15" fill="rgb(249,174,33)" fg:x="34" fg:w="2"/><text x="5.7250%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter_mut (2 samples, 0.32%)</title><rect x="5.4750%" y="709" width="0.3221%" height="15" fill="rgb(233,201,37)" fg:x="34" fg:w="2"/><text x="5.7250%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.32%)</title><rect x="5.4750%" y="693" width="0.3221%" height="15" fill="rgb(221,78,26)" fg:x="34" fg:w="2"/><text x="5.7250%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="5.6361%" y="677" width="0.1610%" height="15" fill="rgb(250,127,30)" fg:x="35" fg:w="1"/><text x="5.8861%" y="687.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="5.6361%" y="661" width="0.1610%" height="15" fill="rgb(230,49,44)" fg:x="35" fg:w="1"/><text x="5.8861%" y="671.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="5.6361%" y="645" width="0.1610%" height="15" fill="rgb(229,67,23)" fg:x="35" fg:w="1"/><text x="5.8861%" y="655.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="5.6361%" y="629" width="0.1610%" height="15" fill="rgb(249,83,47)" fg:x="35" fg:w="1"/><text x="5.8861%" y="639.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="5.7971%" y="597" width="0.1610%" height="15" fill="rgb(215,43,3)" fg:x="36" fg:w="1"/><text x="6.0471%" y="607.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="5.7971%" y="581" width="0.1610%" height="15" fill="rgb(238,154,13)" fg:x="36" fg:w="1"/><text x="6.0471%" y="591.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="5.7971%" y="565" width="0.1610%" height="15" fill="rgb(219,56,2)" fg:x="36" fg:w="1"/><text x="6.0471%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="5.9581%" y="565" width="0.1610%" height="15" fill="rgb(233,0,4)" fg:x="37" fg:w="1"/><text x="6.2081%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="5.9581%" y="549" width="0.1610%" height="15" fill="rgb(235,30,7)" fg:x="37" fg:w="1"/><text x="6.2081%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="5.9581%" y="533" width="0.1610%" height="15" fill="rgb(250,79,13)" fg:x="37" fg:w="1"/><text x="6.2081%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="6.1192%" y="501" width="0.1610%" height="15" fill="rgb(211,146,34)" fg:x="38" fg:w="1"/><text x="6.3692%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="6.1192%" y="485" width="0.1610%" height="15" fill="rgb(228,22,38)" fg:x="38" fg:w="1"/><text x="6.3692%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="6.1192%" y="469" width="0.1610%" height="15" fill="rgb(235,168,5)" fg:x="38" fg:w="1"/><text x="6.3692%" y="479.50"></text></g><g><title>&lt;&amp;micrograd_rs::engine::Node as core::convert::Into&lt;core::option::Option&lt;micrograd_rs::engine::GraphBuilderNode&gt;&gt;&gt;::into (1 samples, 0.16%)</title><rect x="6.2802%" y="421" width="0.1610%" height="15" fill="rgb(221,155,16)" fg:x="39" fg:w="1"/><text x="6.5302%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="6.2802%" y="405" width="0.1610%" height="15" fill="rgb(215,215,53)" fg:x="39" fg:w="1"/><text x="6.5302%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="6.2802%" y="389" width="0.1610%" height="15" fill="rgb(223,4,10)" fg:x="39" fg:w="1"/><text x="6.5302%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="6.2802%" y="373" width="0.1610%" height="15" fill="rgb(234,103,6)" fg:x="39" fg:w="1"/><text x="6.5302%" y="383.50"></text></g><g><title>&lt;&amp;micrograd_rs::engine::Node as core::convert::Into&lt;core::option::Option&lt;micrograd_rs::engine::GraphBuilderNode&gt;&gt;&gt;::into (1 samples, 0.16%)</title><rect x="6.4412%" y="373" width="0.1610%" height="15" fill="rgb(227,97,0)" fg:x="40" fg:w="1"/><text x="6.6912%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="6.4412%" y="357" width="0.1610%" height="15" fill="rgb(234,150,53)" fg:x="40" fg:w="1"/><text x="6.6912%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="6.4412%" y="341" width="0.1610%" height="15" fill="rgb(228,201,54)" fg:x="40" fg:w="1"/><text x="6.6912%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="6.4412%" y="325" width="0.1610%" height="15" fill="rgb(222,22,37)" fg:x="40" fg:w="1"/><text x="6.6912%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="6.6023%" y="213" width="0.3221%" height="15" fill="rgb(237,53,32)" fg:x="41" fg:w="2"/><text x="6.8523%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="6.6023%" y="197" width="0.3221%" height="15" fill="rgb(233,25,53)" fg:x="41" fg:w="2"/><text x="6.8523%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="6.6023%" y="181" width="0.3221%" height="15" fill="rgb(210,40,34)" fg:x="41" fg:w="2"/><text x="6.8523%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="6.6023%" y="165" width="0.3221%" height="15" fill="rgb(241,220,44)" fg:x="41" fg:w="2"/><text x="6.8523%" y="175.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="6.6023%" y="149" width="0.3221%" height="15" fill="rgb(235,28,35)" fg:x="41" fg:w="2"/><text x="6.8523%" y="159.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="6.6023%" y="133" width="0.3221%" height="15" fill="rgb(210,56,17)" fg:x="41" fg:w="2"/><text x="6.8523%" y="143.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="6.6023%" y="245" width="0.4831%" height="15" fill="rgb(224,130,29)" fg:x="41" fg:w="3"/><text x="6.8523%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="6.6023%" y="229" width="0.4831%" height="15" fill="rgb(235,212,8)" fg:x="41" fg:w="3"/><text x="6.8523%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="6.9243%" y="213" width="0.1610%" height="15" fill="rgb(223,33,50)" fg:x="43" fg:w="1"/><text x="7.1743%" y="223.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="6.9243%" y="197" width="0.1610%" height="15" fill="rgb(219,149,13)" fg:x="43" fg:w="1"/><text x="7.1743%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="6.9243%" y="181" width="0.1610%" height="15" fill="rgb(250,156,29)" fg:x="43" fg:w="1"/><text x="7.1743%" y="191.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="6.9243%" y="165" width="0.1610%" height="15" fill="rgb(216,193,19)" fg:x="43" fg:w="1"/><text x="7.1743%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="6.9243%" y="149" width="0.1610%" height="15" fill="rgb(216,135,14)" fg:x="43" fg:w="1"/><text x="7.1743%" y="159.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="6.9243%" y="133" width="0.1610%" height="15" fill="rgb(241,47,5)" fg:x="43" fg:w="1"/><text x="7.1743%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="6.9243%" y="117" width="0.1610%" height="15" fill="rgb(233,42,35)" fg:x="43" fg:w="1"/><text x="7.1743%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="6.9243%" y="101" width="0.1610%" height="15" fill="rgb(231,13,6)" fg:x="43" fg:w="1"/><text x="7.1743%" y="111.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="6.9243%" y="85" width="0.1610%" height="15" fill="rgb(207,181,40)" fg:x="43" fg:w="1"/><text x="7.1743%" y="95.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="6.9243%" y="69" width="0.1610%" height="15" fill="rgb(254,173,49)" fg:x="43" fg:w="1"/><text x="7.1743%" y="79.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="6.9243%" y="53" width="0.1610%" height="15" fill="rgb(221,1,38)" fg:x="43" fg:w="1"/><text x="7.1743%" y="63.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::grad_for_id (5 samples, 0.81%)</title><rect x="6.6023%" y="325" width="0.8052%" height="15" fill="rgb(206,124,46)" fg:x="41" fg:w="5"/><text x="6.8523%" y="335.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (5 samples, 0.81%)</title><rect x="6.6023%" y="309" width="0.8052%" height="15" fill="rgb(249,21,11)" fg:x="41" fg:w="5"/><text x="6.8523%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.81%)</title><rect x="6.6023%" y="293" width="0.8052%" height="15" fill="rgb(222,201,40)" fg:x="41" fg:w="5"/><text x="6.8523%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.81%)</title><rect x="6.6023%" y="277" width="0.8052%" height="15" fill="rgb(235,61,29)" fg:x="41" fg:w="5"/><text x="6.8523%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.81%)</title><rect x="6.6023%" y="261" width="0.8052%" height="15" fill="rgb(219,207,3)" fg:x="41" fg:w="5"/><text x="6.8523%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.32%)</title><rect x="7.0853%" y="245" width="0.3221%" height="15" fill="rgb(222,56,46)" fg:x="44" fg:w="2"/><text x="7.3353%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="7.0853%" y="229" width="0.3221%" height="15" fill="rgb(239,76,54)" fg:x="44" fg:w="2"/><text x="7.3353%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="7.0853%" y="213" width="0.3221%" height="15" fill="rgb(231,124,27)" fg:x="44" fg:w="2"/><text x="7.3353%" y="223.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="7.0853%" y="197" width="0.3221%" height="15" fill="rgb(249,195,6)" fg:x="44" fg:w="2"/><text x="7.3353%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.32%)</title><rect x="7.0853%" y="181" width="0.3221%" height="15" fill="rgb(237,174,47)" fg:x="44" fg:w="2"/><text x="7.3353%" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.32%)</title><rect x="7.0853%" y="165" width="0.3221%" height="15" fill="rgb(206,201,31)" fg:x="44" fg:w="2"/><text x="7.3353%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="7.0853%" y="149" width="0.3221%" height="15" fill="rgb(231,57,52)" fg:x="44" fg:w="2"/><text x="7.3353%" y="159.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="7.0853%" y="133" width="0.3221%" height="15" fill="rgb(248,177,22)" fg:x="44" fg:w="2"/><text x="7.3353%" y="143.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="7.0853%" y="117" width="0.3221%" height="15" fill="rgb(215,211,37)" fg:x="44" fg:w="2"/><text x="7.3353%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="7.4074%" y="309" width="0.1610%" height="15" fill="rgb(241,128,51)" fg:x="46" fg:w="1"/><text x="7.6574%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="7.4074%" y="293" width="0.1610%" height="15" fill="rgb(227,165,31)" fg:x="46" fg:w="1"/><text x="7.6574%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="7.4074%" y="277" width="0.1610%" height="15" fill="rgb(228,167,24)" fg:x="46" fg:w="1"/><text x="7.6574%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="7.4074%" y="261" width="0.1610%" height="15" fill="rgb(228,143,12)" fg:x="46" fg:w="1"/><text x="7.6574%" y="271.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.16%)</title><rect x="7.5684%" y="101" width="0.1610%" height="15" fill="rgb(249,149,8)" fg:x="47" fg:w="1"/><text x="7.8184%" y="111.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="7.5684%" y="85" width="0.1610%" height="15" fill="rgb(243,35,44)" fg:x="47" fg:w="1"/><text x="7.8184%" y="95.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="7.5684%" y="69" width="0.1610%" height="15" fill="rgb(246,89,9)" fg:x="47" fg:w="1"/><text x="7.8184%" y="79.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="7.5684%" y="53" width="0.1610%" height="15" fill="rgb(233,213,13)" fg:x="47" fg:w="1"/><text x="7.8184%" y="63.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="7.5684%" y="245" width="0.3221%" height="15" fill="rgb(233,141,41)" fg:x="47" fg:w="2"/><text x="7.8184%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="7.5684%" y="229" width="0.3221%" height="15" fill="rgb(239,167,4)" fg:x="47" fg:w="2"/><text x="7.8184%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.32%)</title><rect x="7.5684%" y="213" width="0.3221%" height="15" fill="rgb(209,217,16)" fg:x="47" fg:w="2"/><text x="7.8184%" y="223.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (2 samples, 0.32%)</title><rect x="7.5684%" y="197" width="0.3221%" height="15" fill="rgb(219,88,35)" fg:x="47" fg:w="2"/><text x="7.8184%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.32%)</title><rect x="7.5684%" y="181" width="0.3221%" height="15" fill="rgb(220,193,23)" fg:x="47" fg:w="2"/><text x="7.8184%" y="191.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.32%)</title><rect x="7.5684%" y="165" width="0.3221%" height="15" fill="rgb(230,90,52)" fg:x="47" fg:w="2"/><text x="7.8184%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="7.5684%" y="149" width="0.3221%" height="15" fill="rgb(252,106,19)" fg:x="47" fg:w="2"/><text x="7.8184%" y="159.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="7.5684%" y="133" width="0.3221%" height="15" fill="rgb(206,74,20)" fg:x="47" fg:w="2"/><text x="7.8184%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="7.5684%" y="117" width="0.3221%" height="15" fill="rgb(230,138,44)" fg:x="47" fg:w="2"/><text x="7.8184%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.16%)</title><rect x="7.7295%" y="101" width="0.1610%" height="15" fill="rgb(235,182,43)" fg:x="48" fg:w="1"/><text x="7.9795%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.16%)</title><rect x="7.7295%" y="85" width="0.1610%" height="15" fill="rgb(242,16,51)" fg:x="48" fg:w="1"/><text x="7.9795%" y="95.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="7.7295%" y="69" width="0.1610%" height="15" fill="rgb(248,9,4)" fg:x="48" fg:w="1"/><text x="7.9795%" y="79.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="7.7295%" y="53" width="0.1610%" height="15" fill="rgb(210,31,22)" fg:x="48" fg:w="1"/><text x="7.9795%" y="63.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="7.7295%" y="37" width="0.1610%" height="15" fill="rgb(239,54,39)" fg:x="48" fg:w="1"/><text x="7.9795%" y="47.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="7.8905%" y="197" width="0.4831%" height="15" fill="rgb(230,99,41)" fg:x="49" fg:w="3"/><text x="8.1405%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="7.8905%" y="181" width="0.4831%" height="15" fill="rgb(253,106,12)" fg:x="49" fg:w="3"/><text x="8.1405%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="7.8905%" y="165" width="0.4831%" height="15" fill="rgb(213,46,41)" fg:x="49" fg:w="3"/><text x="8.1405%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="8.3736%" y="197" width="0.1610%" height="15" fill="rgb(215,133,35)" fg:x="52" fg:w="1"/><text x="8.6236%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="8.3736%" y="181" width="0.1610%" height="15" fill="rgb(213,28,5)" fg:x="52" fg:w="1"/><text x="8.6236%" y="191.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="8.3736%" y="165" width="0.1610%" height="15" fill="rgb(215,77,49)" fg:x="52" fg:w="1"/><text x="8.6236%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="8.3736%" y="149" width="0.1610%" height="15" fill="rgb(248,100,22)" fg:x="52" fg:w="1"/><text x="8.6236%" y="159.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="8.3736%" y="133" width="0.1610%" height="15" fill="rgb(208,67,9)" fg:x="52" fg:w="1"/><text x="8.6236%" y="143.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="8.3736%" y="117" width="0.1610%" height="15" fill="rgb(219,133,21)" fg:x="52" fg:w="1"/><text x="8.6236%" y="127.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (8 samples, 1.29%)</title><rect x="7.5684%" y="309" width="1.2882%" height="15" fill="rgb(246,46,29)" fg:x="47" fg:w="8"/><text x="7.8184%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 1.29%)</title><rect x="7.5684%" y="293" width="1.2882%" height="15" fill="rgb(246,185,52)" fg:x="47" fg:w="8"/><text x="7.8184%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 1.29%)</title><rect x="7.5684%" y="277" width="1.2882%" height="15" fill="rgb(252,136,11)" fg:x="47" fg:w="8"/><text x="7.8184%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 1.29%)</title><rect x="7.5684%" y="261" width="1.2882%" height="15" fill="rgb(219,138,53)" fg:x="47" fg:w="8"/><text x="7.8184%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.97%)</title><rect x="7.8905%" y="245" width="0.9662%" height="15" fill="rgb(211,51,23)" fg:x="49" fg:w="6"/><text x="8.1405%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.97%)</title><rect x="7.8905%" y="229" width="0.9662%" height="15" fill="rgb(247,221,28)" fg:x="49" fg:w="6"/><text x="8.1405%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.97%)</title><rect x="7.8905%" y="213" width="0.9662%" height="15" fill="rgb(251,222,45)" fg:x="49" fg:w="6"/><text x="8.1405%" y="223.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="8.5346%" y="197" width="0.3221%" height="15" fill="rgb(217,162,53)" fg:x="53" fg:w="2"/><text x="8.7846%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.32%)</title><rect x="8.5346%" y="181" width="0.3221%" height="15" fill="rgb(229,93,14)" fg:x="53" fg:w="2"/><text x="8.7846%" y="191.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (2 samples, 0.32%)</title><rect x="8.5346%" y="165" width="0.3221%" height="15" fill="rgb(209,67,49)" fg:x="53" fg:w="2"/><text x="8.7846%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="8.5346%" y="149" width="0.3221%" height="15" fill="rgb(213,87,29)" fg:x="53" fg:w="2"/><text x="8.7846%" y="159.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="8.5346%" y="133" width="0.3221%" height="15" fill="rgb(205,151,52)" fg:x="53" fg:w="2"/><text x="8.7846%" y="143.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="8.5346%" y="117" width="0.3221%" height="15" fill="rgb(253,215,39)" fg:x="53" fg:w="2"/><text x="8.7846%" y="127.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="8.8567%" y="245" width="0.1610%" height="15" fill="rgb(221,220,41)" fg:x="55" fg:w="1"/><text x="9.1067%" y="255.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="8.8567%" y="229" width="0.1610%" height="15" fill="rgb(218,133,21)" fg:x="55" fg:w="1"/><text x="9.1067%" y="239.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="8.8567%" y="213" width="0.1610%" height="15" fill="rgb(221,193,43)" fg:x="55" fg:w="1"/><text x="9.1067%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.32%)</title><rect x="9.0177%" y="181" width="0.3221%" height="15" fill="rgb(240,128,52)" fg:x="56" fg:w="2"/><text x="9.2677%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="9.0177%" y="165" width="0.3221%" height="15" fill="rgb(253,114,12)" fg:x="56" fg:w="2"/><text x="9.2677%" y="175.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="9.0177%" y="149" width="0.3221%" height="15" fill="rgb(215,223,47)" fg:x="56" fg:w="2"/><text x="9.2677%" y="159.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="9.0177%" y="133" width="0.3221%" height="15" fill="rgb(248,225,23)" fg:x="56" fg:w="2"/><text x="9.2677%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="9.3398%" y="181" width="0.1610%" height="15" fill="rgb(250,108,0)" fg:x="58" fg:w="1"/><text x="9.5898%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="9.3398%" y="165" width="0.1610%" height="15" fill="rgb(228,208,7)" fg:x="58" fg:w="1"/><text x="9.5898%" y="175.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="9.3398%" y="149" width="0.1610%" height="15" fill="rgb(244,45,10)" fg:x="58" fg:w="1"/><text x="9.5898%" y="159.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="9.3398%" y="133" width="0.1610%" height="15" fill="rgb(207,125,25)" fg:x="58" fg:w="1"/><text x="9.5898%" y="143.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="9.0177%" y="229" width="0.6441%" height="15" fill="rgb(210,195,18)" fg:x="56" fg:w="4"/><text x="9.2677%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="9.0177%" y="213" width="0.6441%" height="15" fill="rgb(249,80,12)" fg:x="56" fg:w="4"/><text x="9.2677%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="9.0177%" y="197" width="0.6441%" height="15" fill="rgb(221,65,9)" fg:x="56" fg:w="4"/><text x="9.2677%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="9.5008%" y="181" width="0.1610%" height="15" fill="rgb(235,49,36)" fg:x="59" fg:w="1"/><text x="9.7508%" y="191.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="9.5008%" y="165" width="0.1610%" height="15" fill="rgb(225,32,20)" fg:x="59" fg:w="1"/><text x="9.7508%" y="175.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="9.5008%" y="149" width="0.1610%" height="15" fill="rgb(215,141,46)" fg:x="59" fg:w="1"/><text x="9.7508%" y="159.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.97%)</title><rect x="8.8567%" y="261" width="0.9662%" height="15" fill="rgb(250,160,47)" fg:x="55" fg:w="6"/><text x="9.1067%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.81%)</title><rect x="9.0177%" y="245" width="0.8052%" height="15" fill="rgb(216,222,40)" fg:x="56" fg:w="5"/><text x="9.2677%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.16%)</title><rect x="9.6618%" y="229" width="0.1610%" height="15" fill="rgb(234,217,39)" fg:x="60" fg:w="1"/><text x="9.9118%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="9.6618%" y="213" width="0.1610%" height="15" fill="rgb(207,178,40)" fg:x="60" fg:w="1"/><text x="9.9118%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="9.6618%" y="197" width="0.1610%" height="15" fill="rgb(221,136,13)" fg:x="60" fg:w="1"/><text x="9.9118%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="9.6618%" y="181" width="0.1610%" height="15" fill="rgb(249,199,10)" fg:x="60" fg:w="1"/><text x="9.9118%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="9.8229%" y="229" width="0.1610%" height="15" fill="rgb(249,222,13)" fg:x="61" fg:w="1"/><text x="10.0729%" y="239.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="9.8229%" y="213" width="0.1610%" height="15" fill="rgb(244,185,38)" fg:x="61" fg:w="1"/><text x="10.0729%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="9.8229%" y="197" width="0.1610%" height="15" fill="rgb(236,202,9)" fg:x="61" fg:w="1"/><text x="10.0729%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="9.8229%" y="181" width="0.1610%" height="15" fill="rgb(250,229,37)" fg:x="61" fg:w="1"/><text x="10.0729%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="9.8229%" y="165" width="0.1610%" height="15" fill="rgb(206,174,23)" fg:x="61" fg:w="1"/><text x="10.0729%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (4 samples, 0.64%)</title><rect x="9.9839%" y="213" width="0.6441%" height="15" fill="rgb(211,33,43)" fg:x="62" fg:w="4"/><text x="10.2339%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 0.64%)</title><rect x="9.9839%" y="197" width="0.6441%" height="15" fill="rgb(245,58,50)" fg:x="62" fg:w="4"/><text x="10.2339%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 0.64%)</title><rect x="9.9839%" y="181" width="0.6441%" height="15" fill="rgb(244,68,36)" fg:x="62" fg:w="4"/><text x="10.2339%" y="191.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="10.6280%" y="213" width="0.1610%" height="15" fill="rgb(232,229,15)" fg:x="66" fg:w="1"/><text x="10.8780%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.16%)</title><rect x="10.6280%" y="197" width="0.1610%" height="15" fill="rgb(254,30,23)" fg:x="66" fg:w="1"/><text x="10.8780%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_undefined_si128 (1 samples, 0.16%)</title><rect x="10.6280%" y="181" width="0.1610%" height="15" fill="rgb(235,160,14)" fg:x="66" fg:w="1"/><text x="10.8780%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="10.6280%" y="165" width="0.1610%" height="15" fill="rgb(212,155,44)" fg:x="66" fg:w="1"/><text x="10.8780%" y="175.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="10.6280%" y="149" width="0.1610%" height="15" fill="rgb(226,2,50)" fg:x="66" fg:w="1"/><text x="10.8780%" y="159.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="10.6280%" y="133" width="0.1610%" height="15" fill="rgb(234,177,6)" fg:x="66" fg:w="1"/><text x="10.8780%" y="143.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="10.7890%" y="197" width="0.1610%" height="15" fill="rgb(217,24,9)" fg:x="67" fg:w="1"/><text x="11.0390%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="10.7890%" y="181" width="0.1610%" height="15" fill="rgb(220,13,46)" fg:x="67" fg:w="1"/><text x="11.0390%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="10.7890%" y="165" width="0.1610%" height="15" fill="rgb(239,221,27)" fg:x="67" fg:w="1"/><text x="11.0390%" y="175.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (23 samples, 3.70%)</title><rect x="7.4074%" y="325" width="3.7037%" height="15" fill="rgb(222,198,25)" fg:x="46" fg:w="23"/><text x="7.6574%" y="335.50">micr..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 2.25%)</title><rect x="8.8567%" y="309" width="2.2544%" height="15" fill="rgb(211,99,13)" fg:x="55" fg:w="14"/><text x="9.1067%" y="319.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 2.25%)</title><rect x="8.8567%" y="293" width="2.2544%" height="15" fill="rgb(232,111,31)" fg:x="55" fg:w="14"/><text x="9.1067%" y="303.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 2.25%)</title><rect x="8.8567%" y="277" width="2.2544%" height="15" fill="rgb(245,82,37)" fg:x="55" fg:w="14"/><text x="9.1067%" y="287.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 1.29%)</title><rect x="9.8229%" y="261" width="1.2882%" height="15" fill="rgb(227,149,46)" fg:x="61" fg:w="8"/><text x="10.0729%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 1.29%)</title><rect x="9.8229%" y="245" width="1.2882%" height="15" fill="rgb(218,36,50)" fg:x="61" fg:w="8"/><text x="10.0729%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 1.13%)</title><rect x="9.9839%" y="229" width="1.1272%" height="15" fill="rgb(226,80,48)" fg:x="62" fg:w="7"/><text x="10.2339%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="10.7890%" y="213" width="0.3221%" height="15" fill="rgb(238,224,15)" fg:x="67" fg:w="2"/><text x="11.0390%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="10.9501%" y="197" width="0.1610%" height="15" fill="rgb(241,136,10)" fg:x="68" fg:w="1"/><text x="11.2001%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="10.9501%" y="181" width="0.1610%" height="15" fill="rgb(208,32,45)" fg:x="68" fg:w="1"/><text x="11.2001%" y="191.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="10.9501%" y="165" width="0.1610%" height="15" fill="rgb(207,135,9)" fg:x="68" fg:w="1"/><text x="11.2001%" y="175.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="10.9501%" y="149" width="0.1610%" height="15" fill="rgb(206,86,44)" fg:x="68" fg:w="1"/><text x="11.2001%" y="159.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="11.1111%" y="261" width="0.1610%" height="15" fill="rgb(245,177,15)" fg:x="69" fg:w="1"/><text x="11.3611%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="11.1111%" y="245" width="0.1610%" height="15" fill="rgb(206,64,50)" fg:x="69" fg:w="1"/><text x="11.3611%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="11.1111%" y="229" width="0.1610%" height="15" fill="rgb(234,36,40)" fg:x="69" fg:w="1"/><text x="11.3611%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="11.2721%" y="229" width="0.3221%" height="15" fill="rgb(213,64,8)" fg:x="70" fg:w="2"/><text x="11.5221%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="11.2721%" y="213" width="0.3221%" height="15" fill="rgb(210,75,36)" fg:x="70" fg:w="2"/><text x="11.5221%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="11.2721%" y="197" width="0.3221%" height="15" fill="rgb(229,88,21)" fg:x="70" fg:w="2"/><text x="11.5221%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="11.2721%" y="181" width="0.3221%" height="15" fill="rgb(252,204,47)" fg:x="70" fg:w="2"/><text x="11.5221%" y="191.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="11.2721%" y="165" width="0.3221%" height="15" fill="rgb(208,77,27)" fg:x="70" fg:w="2"/><text x="11.5221%" y="175.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="11.2721%" y="149" width="0.3221%" height="15" fill="rgb(221,76,26)" fg:x="70" fg:w="2"/><text x="11.5221%" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="11.2721%" y="245" width="0.4831%" height="15" fill="rgb(225,139,18)" fg:x="70" fg:w="3"/><text x="11.5221%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="11.5942%" y="229" width="0.1610%" height="15" fill="rgb(230,137,11)" fg:x="72" fg:w="1"/><text x="11.8442%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="11.5942%" y="213" width="0.1610%" height="15" fill="rgb(212,28,1)" fg:x="72" fg:w="1"/><text x="11.8442%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="11.5942%" y="197" width="0.1610%" height="15" fill="rgb(248,164,17)" fg:x="72" fg:w="1"/><text x="11.8442%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="11.7552%" y="197" width="0.1610%" height="15" fill="rgb(222,171,42)" fg:x="73" fg:w="1"/><text x="12.0052%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="11.7552%" y="181" width="0.1610%" height="15" fill="rgb(243,84,45)" fg:x="73" fg:w="1"/><text x="12.0052%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="11.7552%" y="165" width="0.1610%" height="15" fill="rgb(252,49,23)" fg:x="73" fg:w="1"/><text x="12.0052%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="11.9163%" y="133" width="0.1610%" height="15" fill="rgb(215,19,7)" fg:x="74" fg:w="1"/><text x="12.1663%" y="143.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="11.9163%" y="117" width="0.1610%" height="15" fill="rgb(238,81,41)" fg:x="74" fg:w="1"/><text x="12.1663%" y="127.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="11.9163%" y="101" width="0.1610%" height="15" fill="rgb(210,199,37)" fg:x="74" fg:w="1"/><text x="12.1663%" y="111.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="11.9163%" y="85" width="0.1610%" height="15" fill="rgb(244,192,49)" fg:x="74" fg:w="1"/><text x="12.1663%" y="95.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 1.13%)</title><rect x="11.1111%" y="277" width="1.1272%" height="15" fill="rgb(226,211,11)" fg:x="69" fg:w="7"/><text x="11.3611%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.97%)</title><rect x="11.2721%" y="261" width="0.9662%" height="15" fill="rgb(236,162,54)" fg:x="70" fg:w="6"/><text x="11.5221%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.48%)</title><rect x="11.7552%" y="245" width="0.4831%" height="15" fill="rgb(220,229,9)" fg:x="73" fg:w="3"/><text x="12.0052%" y="255.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (3 samples, 0.48%)</title><rect x="11.7552%" y="229" width="0.4831%" height="15" fill="rgb(250,87,22)" fg:x="73" fg:w="3"/><text x="12.0052%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.48%)</title><rect x="11.7552%" y="213" width="0.4831%" height="15" fill="rgb(239,43,17)" fg:x="73" fg:w="3"/><text x="12.0052%" y="223.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.32%)</title><rect x="11.9163%" y="197" width="0.3221%" height="15" fill="rgb(231,177,25)" fg:x="74" fg:w="2"/><text x="12.1663%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="11.9163%" y="181" width="0.3221%" height="15" fill="rgb(219,179,1)" fg:x="74" fg:w="2"/><text x="12.1663%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="11.9163%" y="165" width="0.3221%" height="15" fill="rgb(238,219,53)" fg:x="74" fg:w="2"/><text x="12.1663%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="11.9163%" y="149" width="0.3221%" height="15" fill="rgb(232,167,36)" fg:x="74" fg:w="2"/><text x="12.1663%" y="159.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="12.0773%" y="133" width="0.1610%" height="15" fill="rgb(244,19,51)" fg:x="75" fg:w="1"/><text x="12.3273%" y="143.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="12.0773%" y="117" width="0.1610%" height="15" fill="rgb(224,6,22)" fg:x="75" fg:w="1"/><text x="12.3273%" y="127.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="12.0773%" y="101" width="0.1610%" height="15" fill="rgb(224,145,5)" fg:x="75" fg:w="1"/><text x="12.3273%" y="111.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="12.2383%" y="213" width="0.3221%" height="15" fill="rgb(234,130,49)" fg:x="76" fg:w="2"/><text x="12.4883%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="12.2383%" y="197" width="0.3221%" height="15" fill="rgb(254,6,2)" fg:x="76" fg:w="2"/><text x="12.4883%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="12.2383%" y="181" width="0.3221%" height="15" fill="rgb(208,96,46)" fg:x="76" fg:w="2"/><text x="12.4883%" y="191.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.48%)</title><rect x="12.2383%" y="229" width="0.4831%" height="15" fill="rgb(239,3,39)" fg:x="76" fg:w="3"/><text x="12.4883%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.16%)</title><rect x="12.5604%" y="213" width="0.1610%" height="15" fill="rgb(233,210,1)" fg:x="78" fg:w="1"/><text x="12.8104%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="12.5604%" y="197" width="0.1610%" height="15" fill="rgb(244,137,37)" fg:x="78" fg:w="1"/><text x="12.8104%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="12.5604%" y="181" width="0.1610%" height="15" fill="rgb(240,136,2)" fg:x="78" fg:w="1"/><text x="12.8104%" y="191.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="12.5604%" y="165" width="0.1610%" height="15" fill="rgb(239,18,37)" fg:x="78" fg:w="1"/><text x="12.8104%" y="175.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="12.5604%" y="149" width="0.1610%" height="15" fill="rgb(218,185,22)" fg:x="78" fg:w="1"/><text x="12.8104%" y="159.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards (39 samples, 6.28%)</title><rect x="6.6023%" y="341" width="6.2802%" height="15" fill="rgb(225,218,4)" fg:x="41" fg:w="39"/><text x="6.8523%" y="351.50">microgra..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 1.77%)</title><rect x="11.1111%" y="325" width="1.7713%" height="15" fill="rgb(230,182,32)" fg:x="69" fg:w="11"/><text x="11.3611%" y="335.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 1.77%)</title><rect x="11.1111%" y="309" width="1.7713%" height="15" fill="rgb(242,56,43)" fg:x="69" fg:w="11"/><text x="11.3611%" y="319.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 1.77%)</title><rect x="11.1111%" y="293" width="1.7713%" height="15" fill="rgb(233,99,24)" fg:x="69" fg:w="11"/><text x="11.3611%" y="303.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.64%)</title><rect x="12.2383%" y="277" width="0.6441%" height="15" fill="rgb(234,209,42)" fg:x="76" fg:w="4"/><text x="12.4883%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.64%)</title><rect x="12.2383%" y="261" width="0.6441%" height="15" fill="rgb(227,7,12)" fg:x="76" fg:w="4"/><text x="12.4883%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.64%)</title><rect x="12.2383%" y="245" width="0.6441%" height="15" fill="rgb(245,203,43)" fg:x="76" fg:w="4"/><text x="12.4883%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="12.7214%" y="229" width="0.1610%" height="15" fill="rgb(238,205,33)" fg:x="79" fg:w="1"/><text x="12.9714%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="12.7214%" y="213" width="0.1610%" height="15" fill="rgb(231,56,7)" fg:x="79" fg:w="1"/><text x="12.9714%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="12.7214%" y="197" width="0.1610%" height="15" fill="rgb(244,186,29)" fg:x="79" fg:w="1"/><text x="12.9714%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="12.7214%" y="181" width="0.1610%" height="15" fill="rgb(234,111,31)" fg:x="79" fg:w="1"/><text x="12.9714%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="12.8824%" y="325" width="0.1610%" height="15" fill="rgb(241,149,10)" fg:x="80" fg:w="1"/><text x="13.1324%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="12.8824%" y="309" width="0.1610%" height="15" fill="rgb(249,206,44)" fg:x="80" fg:w="1"/><text x="13.1324%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="12.8824%" y="293" width="0.1610%" height="15" fill="rgb(251,153,30)" fg:x="80" fg:w="1"/><text x="13.1324%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="13.0435%" y="245" width="0.1610%" height="15" fill="rgb(239,152,38)" fg:x="81" fg:w="1"/><text x="13.2935%" y="255.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="13.0435%" y="229" width="0.1610%" height="15" fill="rgb(249,139,47)" fg:x="81" fg:w="1"/><text x="13.2935%" y="239.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="13.0435%" y="213" width="0.1610%" height="15" fill="rgb(244,64,35)" fg:x="81" fg:w="1"/><text x="13.2935%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="13.2045%" y="229" width="0.4831%" height="15" fill="rgb(216,46,15)" fg:x="82" fg:w="3"/><text x="13.4545%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="13.2045%" y="213" width="0.4831%" height="15" fill="rgb(250,74,19)" fg:x="82" fg:w="3"/><text x="13.4545%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="13.2045%" y="197" width="0.4831%" height="15" fill="rgb(249,42,33)" fg:x="82" fg:w="3"/><text x="13.4545%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.48%)</title><rect x="13.2045%" y="181" width="0.4831%" height="15" fill="rgb(242,149,17)" fg:x="82" fg:w="3"/><text x="13.4545%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="13.2045%" y="165" width="0.4831%" height="15" fill="rgb(244,29,21)" fg:x="82" fg:w="3"/><text x="13.4545%" y="175.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="13.2045%" y="149" width="0.4831%" height="15" fill="rgb(220,130,37)" fg:x="82" fg:w="3"/><text x="13.4545%" y="159.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="13.2045%" y="133" width="0.4831%" height="15" fill="rgb(211,67,2)" fg:x="82" fg:w="3"/><text x="13.4545%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="13.6876%" y="117" width="0.1610%" height="15" fill="rgb(235,68,52)" fg:x="85" fg:w="1"/><text x="13.9376%" y="127.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="13.6876%" y="101" width="0.1610%" height="15" fill="rgb(246,142,3)" fg:x="85" fg:w="1"/><text x="13.9376%" y="111.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="13.6876%" y="85" width="0.1610%" height="15" fill="rgb(241,25,7)" fg:x="85" fg:w="1"/><text x="13.9376%" y="95.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="13.6876%" y="69" width="0.1610%" height="15" fill="rgb(242,119,39)" fg:x="85" fg:w="1"/><text x="13.9376%" y="79.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.97%)</title><rect x="13.0435%" y="261" width="0.9662%" height="15" fill="rgb(241,98,45)" fg:x="81" fg:w="6"/><text x="13.2935%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.81%)</title><rect x="13.2045%" y="245" width="0.8052%" height="15" fill="rgb(254,28,30)" fg:x="82" fg:w="5"/><text x="13.4545%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.32%)</title><rect x="13.6876%" y="229" width="0.3221%" height="15" fill="rgb(241,142,54)" fg:x="85" fg:w="2"/><text x="13.9376%" y="239.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (2 samples, 0.32%)</title><rect x="13.6876%" y="213" width="0.3221%" height="15" fill="rgb(222,85,15)" fg:x="85" fg:w="2"/><text x="13.9376%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.32%)</title><rect x="13.6876%" y="197" width="0.3221%" height="15" fill="rgb(210,85,47)" fg:x="85" fg:w="2"/><text x="13.9376%" y="207.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.32%)</title><rect x="13.6876%" y="181" width="0.3221%" height="15" fill="rgb(224,206,25)" fg:x="85" fg:w="2"/><text x="13.9376%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="13.6876%" y="165" width="0.3221%" height="15" fill="rgb(243,201,19)" fg:x="85" fg:w="2"/><text x="13.9376%" y="175.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="13.6876%" y="149" width="0.3221%" height="15" fill="rgb(236,59,4)" fg:x="85" fg:w="2"/><text x="13.9376%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="13.6876%" y="133" width="0.3221%" height="15" fill="rgb(254,179,45)" fg:x="85" fg:w="2"/><text x="13.9376%" y="143.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="13.8486%" y="117" width="0.1610%" height="15" fill="rgb(226,14,10)" fg:x="86" fg:w="1"/><text x="14.0986%" y="127.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="13.8486%" y="101" width="0.1610%" height="15" fill="rgb(244,27,41)" fg:x="86" fg:w="1"/><text x="14.0986%" y="111.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="13.8486%" y="85" width="0.1610%" height="15" fill="rgb(235,35,32)" fg:x="86" fg:w="1"/><text x="14.0986%" y="95.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update (8 samples, 1.29%)</title><rect x="12.8824%" y="341" width="1.2882%" height="15" fill="rgb(218,68,31)" fg:x="80" fg:w="8"/><text x="13.1324%" y="351.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id_mut (7 samples, 1.13%)</title><rect x="13.0435%" y="325" width="1.1272%" height="15" fill="rgb(207,120,37)" fg:x="81" fg:w="7"/><text x="13.2935%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (7 samples, 1.13%)</title><rect x="13.0435%" y="309" width="1.1272%" height="15" fill="rgb(227,98,0)" fg:x="81" fg:w="7"/><text x="13.2935%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (7 samples, 1.13%)</title><rect x="13.0435%" y="293" width="1.1272%" height="15" fill="rgb(207,7,3)" fg:x="81" fg:w="7"/><text x="13.2935%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (7 samples, 1.13%)</title><rect x="13.0435%" y="277" width="1.1272%" height="15" fill="rgb(206,98,19)" fg:x="81" fg:w="7"/><text x="13.2935%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.16%)</title><rect x="14.0097%" y="261" width="0.1610%" height="15" fill="rgb(217,5,26)" fg:x="87" fg:w="1"/><text x="14.2597%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="14.0097%" y="245" width="0.1610%" height="15" fill="rgb(235,190,38)" fg:x="87" fg:w="1"/><text x="14.2597%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="14.0097%" y="229" width="0.1610%" height="15" fill="rgb(247,86,24)" fg:x="87" fg:w="1"/><text x="14.2597%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="14.0097%" y="213" width="0.1610%" height="15" fill="rgb(205,101,16)" fg:x="87" fg:w="1"/><text x="14.2597%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="14.0097%" y="197" width="0.1610%" height="15" fill="rgb(246,168,33)" fg:x="87" fg:w="1"/><text x="14.2597%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="14.0097%" y="181" width="0.1610%" height="15" fill="rgb(231,114,1)" fg:x="87" fg:w="1"/><text x="14.2597%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="14.1707%" y="325" width="0.1610%" height="15" fill="rgb(207,184,53)" fg:x="88" fg:w="1"/><text x="14.4207%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="14.1707%" y="309" width="0.1610%" height="15" fill="rgb(224,95,51)" fg:x="88" fg:w="1"/><text x="14.4207%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="14.1707%" y="293" width="0.1610%" height="15" fill="rgb(212,188,45)" fg:x="88" fg:w="1"/><text x="14.4207%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.32%)</title><rect x="14.3317%" y="181" width="0.3221%" height="15" fill="rgb(223,154,38)" fg:x="89" fg:w="2"/><text x="14.5817%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.32%)</title><rect x="14.3317%" y="165" width="0.3221%" height="15" fill="rgb(251,22,52)" fg:x="89" fg:w="2"/><text x="14.5817%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="14.3317%" y="149" width="0.3221%" height="15" fill="rgb(229,209,22)" fg:x="89" fg:w="2"/><text x="14.5817%" y="159.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="14.3317%" y="133" width="0.3221%" height="15" fill="rgb(234,138,34)" fg:x="89" fg:w="2"/><text x="14.5817%" y="143.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="14.3317%" y="117" width="0.3221%" height="15" fill="rgb(212,95,11)" fg:x="89" fg:w="2"/><text x="14.5817%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.81%)</title><rect x="14.3317%" y="229" width="0.8052%" height="15" fill="rgb(240,179,47)" fg:x="89" fg:w="5"/><text x="14.5817%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.81%)</title><rect x="14.3317%" y="213" width="0.8052%" height="15" fill="rgb(240,163,11)" fg:x="89" fg:w="5"/><text x="14.5817%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.81%)</title><rect x="14.3317%" y="197" width="0.8052%" height="15" fill="rgb(236,37,12)" fg:x="89" fg:w="5"/><text x="14.5817%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.48%)</title><rect x="14.6538%" y="181" width="0.4831%" height="15" fill="rgb(232,164,16)" fg:x="91" fg:w="3"/><text x="14.9038%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="14.6538%" y="165" width="0.4831%" height="15" fill="rgb(244,205,15)" fg:x="91" fg:w="3"/><text x="14.9038%" y="175.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="14.6538%" y="149" width="0.4831%" height="15" fill="rgb(223,117,47)" fg:x="91" fg:w="3"/><text x="14.9038%" y="159.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="14.6538%" y="133" width="0.4831%" height="15" fill="rgb(244,107,35)" fg:x="91" fg:w="3"/><text x="14.9038%" y="143.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.97%)</title><rect x="14.3317%" y="261" width="0.9662%" height="15" fill="rgb(205,140,8)" fg:x="89" fg:w="6"/><text x="14.5817%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.97%)</title><rect x="14.3317%" y="245" width="0.9662%" height="15" fill="rgb(228,84,46)" fg:x="89" fg:w="6"/><text x="14.5817%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="15.1369%" y="229" width="0.1610%" height="15" fill="rgb(254,188,9)" fg:x="94" fg:w="1"/><text x="15.3869%" y="239.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="15.1369%" y="213" width="0.1610%" height="15" fill="rgb(206,112,54)" fg:x="94" fg:w="1"/><text x="15.3869%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="15.1369%" y="197" width="0.1610%" height="15" fill="rgb(216,84,49)" fg:x="94" fg:w="1"/><text x="15.3869%" y="207.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="15.1369%" y="181" width="0.1610%" height="15" fill="rgb(214,194,35)" fg:x="94" fg:w="1"/><text x="15.3869%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="15.1369%" y="165" width="0.1610%" height="15" fill="rgb(249,28,3)" fg:x="94" fg:w="1"/><text x="15.3869%" y="175.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="15.1369%" y="149" width="0.1610%" height="15" fill="rgb(222,56,52)" fg:x="94" fg:w="1"/><text x="15.3869%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="15.1369%" y="133" width="0.1610%" height="15" fill="rgb(245,217,50)" fg:x="94" fg:w="1"/><text x="15.3869%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="15.1369%" y="117" width="0.1610%" height="15" fill="rgb(213,201,24)" fg:x="94" fg:w="1"/><text x="15.3869%" y="127.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="15.1369%" y="101" width="0.1610%" height="15" fill="rgb(248,116,28)" fg:x="94" fg:w="1"/><text x="15.3869%" y="111.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="15.1369%" y="85" width="0.1610%" height="15" fill="rgb(219,72,43)" fg:x="94" fg:w="1"/><text x="15.3869%" y="95.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="15.1369%" y="69" width="0.1610%" height="15" fill="rgb(209,138,14)" fg:x="94" fg:w="1"/><text x="15.3869%" y="79.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="15.2979%" y="213" width="0.3221%" height="15" fill="rgb(222,18,33)" fg:x="95" fg:w="2"/><text x="15.5479%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="15.2979%" y="197" width="0.3221%" height="15" fill="rgb(213,199,7)" fg:x="95" fg:w="2"/><text x="15.5479%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="15.2979%" y="181" width="0.3221%" height="15" fill="rgb(250,110,10)" fg:x="95" fg:w="2"/><text x="15.5479%" y="191.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="15.6200%" y="197" width="0.1610%" height="15" fill="rgb(248,123,6)" fg:x="97" fg:w="1"/><text x="15.8700%" y="207.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.16%)</title><rect x="15.6200%" y="181" width="0.1610%" height="15" fill="rgb(206,91,31)" fg:x="97" fg:w="1"/><text x="15.8700%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.16%)</title><rect x="15.6200%" y="165" width="0.1610%" height="15" fill="rgb(211,154,13)" fg:x="97" fg:w="1"/><text x="15.8700%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="15.6200%" y="149" width="0.1610%" height="15" fill="rgb(225,148,7)" fg:x="97" fg:w="1"/><text x="15.8700%" y="159.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="15.6200%" y="133" width="0.1610%" height="15" fill="rgb(220,160,43)" fg:x="97" fg:w="1"/><text x="15.8700%" y="143.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="15.6200%" y="117" width="0.1610%" height="15" fill="rgb(213,52,39)" fg:x="97" fg:w="1"/><text x="15.8700%" y="127.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="15.6200%" y="101" width="0.1610%" height="15" fill="rgb(243,137,7)" fg:x="97" fg:w="1"/><text x="15.8700%" y="111.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.32%)</title><rect x="15.6200%" y="213" width="0.3221%" height="15" fill="rgb(230,79,13)" fg:x="97" fg:w="2"/><text x="15.8700%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="15.7810%" y="197" width="0.1610%" height="15" fill="rgb(247,105,23)" fg:x="98" fg:w="1"/><text x="16.0310%" y="207.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="15.7810%" y="181" width="0.1610%" height="15" fill="rgb(223,179,41)" fg:x="98" fg:w="1"/><text x="16.0310%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="15.7810%" y="165" width="0.1610%" height="15" fill="rgb(218,9,34)" fg:x="98" fg:w="1"/><text x="16.0310%" y="175.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="15.7810%" y="149" width="0.1610%" height="15" fill="rgb(222,106,8)" fg:x="98" fg:w="1"/><text x="16.0310%" y="159.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="15.7810%" y="133" width="0.1610%" height="15" fill="rgb(211,220,0)" fg:x="98" fg:w="1"/><text x="16.0310%" y="143.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="15.9420%" y="213" width="0.1610%" height="15" fill="rgb(229,52,16)" fg:x="99" fg:w="1"/><text x="16.1920%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.16%)</title><rect x="15.9420%" y="197" width="0.1610%" height="15" fill="rgb(212,155,18)" fg:x="99" fg:w="1"/><text x="16.1920%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_undefined_si128 (1 samples, 0.16%)</title><rect x="15.9420%" y="181" width="0.1610%" height="15" fill="rgb(242,21,14)" fg:x="99" fg:w="1"/><text x="16.1920%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="15.9420%" y="165" width="0.1610%" height="15" fill="rgb(222,19,48)" fg:x="99" fg:w="1"/><text x="16.1920%" y="175.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="15.9420%" y="149" width="0.1610%" height="15" fill="rgb(232,45,27)" fg:x="99" fg:w="1"/><text x="16.1920%" y="159.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="15.9420%" y="133" width="0.1610%" height="15" fill="rgb(249,103,42)" fg:x="99" fg:w="1"/><text x="16.1920%" y="143.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (12 samples, 1.93%)</title><rect x="14.3317%" y="325" width="1.9324%" height="15" fill="rgb(246,81,33)" fg:x="89" fg:w="12"/><text x="14.5817%" y="335.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 1.93%)</title><rect x="14.3317%" y="309" width="1.9324%" height="15" fill="rgb(252,33,42)" fg:x="89" fg:w="12"/><text x="14.5817%" y="319.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 1.93%)</title><rect x="14.3317%" y="293" width="1.9324%" height="15" fill="rgb(209,212,41)" fg:x="89" fg:w="12"/><text x="14.5817%" y="303.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 1.93%)</title><rect x="14.3317%" y="277" width="1.9324%" height="15" fill="rgb(207,154,6)" fg:x="89" fg:w="12"/><text x="14.5817%" y="287.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.97%)</title><rect x="15.2979%" y="261" width="0.9662%" height="15" fill="rgb(223,64,47)" fg:x="95" fg:w="6"/><text x="15.5479%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.97%)</title><rect x="15.2979%" y="245" width="0.9662%" height="15" fill="rgb(211,161,38)" fg:x="95" fg:w="6"/><text x="15.5479%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.97%)</title><rect x="15.2979%" y="229" width="0.9662%" height="15" fill="rgb(219,138,40)" fg:x="95" fg:w="6"/><text x="15.5479%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="16.1031%" y="213" width="0.1610%" height="15" fill="rgb(241,228,46)" fg:x="100" fg:w="1"/><text x="16.3531%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="16.1031%" y="197" width="0.1610%" height="15" fill="rgb(223,209,38)" fg:x="100" fg:w="1"/><text x="16.3531%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="16.1031%" y="181" width="0.1610%" height="15" fill="rgb(236,164,45)" fg:x="100" fg:w="1"/><text x="16.3531%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="16.1031%" y="165" width="0.1610%" height="15" fill="rgb(231,15,5)" fg:x="100" fg:w="1"/><text x="16.3531%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="16.2641%" y="293" width="0.1610%" height="15" fill="rgb(252,35,15)" fg:x="101" fg:w="1"/><text x="16.5141%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="16.2641%" y="277" width="0.1610%" height="15" fill="rgb(248,181,18)" fg:x="101" fg:w="1"/><text x="16.5141%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="16.2641%" y="261" width="0.1610%" height="15" fill="rgb(233,39,42)" fg:x="101" fg:w="1"/><text x="16.5141%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="16.4251%" y="277" width="0.1610%" height="15" fill="rgb(238,110,33)" fg:x="102" fg:w="1"/><text x="16.6751%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="16.4251%" y="261" width="0.1610%" height="15" fill="rgb(233,195,10)" fg:x="102" fg:w="1"/><text x="16.6751%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="16.4251%" y="245" width="0.1610%" height="15" fill="rgb(254,105,3)" fg:x="102" fg:w="1"/><text x="16.6751%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="16.4251%" y="229" width="0.1610%" height="15" fill="rgb(221,225,9)" fg:x="102" fg:w="1"/><text x="16.6751%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="16.4251%" y="213" width="0.1610%" height="15" fill="rgb(224,227,45)" fg:x="102" fg:w="1"/><text x="16.6751%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="16.4251%" y="197" width="0.1610%" height="15" fill="rgb(229,198,43)" fg:x="102" fg:w="1"/><text x="16.6751%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="16.4251%" y="181" width="0.1610%" height="15" fill="rgb(206,209,35)" fg:x="102" fg:w="1"/><text x="16.6751%" y="191.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="16.4251%" y="165" width="0.1610%" height="15" fill="rgb(245,195,53)" fg:x="102" fg:w="1"/><text x="16.6751%" y="175.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="16.4251%" y="149" width="0.1610%" height="15" fill="rgb(240,92,26)" fg:x="102" fg:w="1"/><text x="16.6751%" y="159.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.16%)</title><rect x="16.5862%" y="229" width="0.1610%" height="15" fill="rgb(207,40,23)" fg:x="103" fg:w="1"/><text x="16.8362%" y="239.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.16%)</title><rect x="16.5862%" y="213" width="0.1610%" height="15" fill="rgb(223,111,35)" fg:x="103" fg:w="1"/><text x="16.8362%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.16%)</title><rect x="16.5862%" y="197" width="0.1610%" height="15" fill="rgb(229,147,28)" fg:x="103" fg:w="1"/><text x="16.8362%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="16.5862%" y="181" width="0.1610%" height="15" fill="rgb(211,29,28)" fg:x="103" fg:w="1"/><text x="16.8362%" y="191.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="16.5862%" y="165" width="0.1610%" height="15" fill="rgb(228,72,33)" fg:x="103" fg:w="1"/><text x="16.8362%" y="175.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="16.5862%" y="149" width="0.1610%" height="15" fill="rgb(205,214,31)" fg:x="103" fg:w="1"/><text x="16.8362%" y="159.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.32%)</title><rect x="16.7472%" y="229" width="0.3221%" height="15" fill="rgb(224,111,15)" fg:x="104" fg:w="2"/><text x="16.9972%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="16.7472%" y="213" width="0.3221%" height="15" fill="rgb(253,21,26)" fg:x="104" fg:w="2"/><text x="16.9972%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="16.7472%" y="197" width="0.3221%" height="15" fill="rgb(245,139,43)" fg:x="104" fg:w="2"/><text x="16.9972%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="16.7472%" y="181" width="0.3221%" height="15" fill="rgb(252,170,7)" fg:x="104" fg:w="2"/><text x="16.9972%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (66 samples, 10.63%)</title><rect x="6.6023%" y="373" width="10.6280%" height="15" fill="rgb(231,118,14)" fg:x="41" fg:w="66"/><text x="6.8523%" y="383.50">core::option::Op..</text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards::{{closure}} (66 samples, 10.63%)</title><rect x="6.6023%" y="357" width="10.6280%" height="15" fill="rgb(238,83,0)" fg:x="41" fg:w="66"/><text x="6.8523%" y="367.50">micrograd_rs::en..</text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (19 samples, 3.06%)</title><rect x="14.1707%" y="341" width="3.0596%" height="15" fill="rgb(221,39,39)" fg:x="88" fg:w="19"/><text x="14.4207%" y="351.50">mic..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.97%)</title><rect x="16.2641%" y="325" width="0.9662%" height="15" fill="rgb(222,119,46)" fg:x="101" fg:w="6"/><text x="16.5141%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.97%)</title><rect x="16.2641%" y="309" width="0.9662%" height="15" fill="rgb(222,165,49)" fg:x="101" fg:w="6"/><text x="16.5141%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.81%)</title><rect x="16.4251%" y="293" width="0.8052%" height="15" fill="rgb(219,113,52)" fg:x="102" fg:w="5"/><text x="16.6751%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.64%)</title><rect x="16.5862%" y="277" width="0.6441%" height="15" fill="rgb(214,7,15)" fg:x="103" fg:w="4"/><text x="16.8362%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.64%)</title><rect x="16.5862%" y="261" width="0.6441%" height="15" fill="rgb(235,32,4)" fg:x="103" fg:w="4"/><text x="16.8362%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.64%)</title><rect x="16.5862%" y="245" width="0.6441%" height="15" fill="rgb(238,90,54)" fg:x="103" fg:w="4"/><text x="16.8362%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="17.0692%" y="229" width="0.1610%" height="15" fill="rgb(213,208,19)" fg:x="106" fg:w="1"/><text x="17.3192%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="17.0692%" y="213" width="0.1610%" height="15" fill="rgb(233,156,4)" fg:x="106" fg:w="1"/><text x="17.3192%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="17.0692%" y="197" width="0.1610%" height="15" fill="rgb(207,194,5)" fg:x="106" fg:w="1"/><text x="17.3192%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="17.0692%" y="181" width="0.1610%" height="15" fill="rgb(206,111,30)" fg:x="106" fg:w="1"/><text x="17.3192%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="17.2303%" y="213" width="0.1610%" height="15" fill="rgb(243,70,54)" fg:x="107" fg:w="1"/><text x="17.4803%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="17.2303%" y="197" width="0.1610%" height="15" fill="rgb(242,28,8)" fg:x="107" fg:w="1"/><text x="17.4803%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="17.2303%" y="181" width="0.1610%" height="15" fill="rgb(219,106,18)" fg:x="107" fg:w="1"/><text x="17.4803%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="17.2303%" y="165" width="0.1610%" height="15" fill="rgb(244,222,10)" fg:x="107" fg:w="1"/><text x="17.4803%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.48%)</title><rect x="17.3913%" y="213" width="0.4831%" height="15" fill="rgb(236,179,52)" fg:x="108" fg:w="3"/><text x="17.6413%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="17.3913%" y="197" width="0.4831%" height="15" fill="rgb(213,23,39)" fg:x="108" fg:w="3"/><text x="17.6413%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="17.3913%" y="181" width="0.4831%" height="15" fill="rgb(238,48,10)" fg:x="108" fg:w="3"/><text x="17.6413%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="17.3913%" y="165" width="0.4831%" height="15" fill="rgb(251,196,23)" fg:x="108" fg:w="3"/><text x="17.6413%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.81%)</title><rect x="17.2303%" y="261" width="0.8052%" height="15" fill="rgb(250,152,24)" fg:x="107" fg:w="5"/><text x="17.4803%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.81%)</title><rect x="17.2303%" y="245" width="0.8052%" height="15" fill="rgb(209,150,17)" fg:x="107" fg:w="5"/><text x="17.4803%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.81%)</title><rect x="17.2303%" y="229" width="0.8052%" height="15" fill="rgb(234,202,34)" fg:x="107" fg:w="5"/><text x="17.4803%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="17.8744%" y="213" width="0.1610%" height="15" fill="rgb(253,148,53)" fg:x="111" fg:w="1"/><text x="18.1244%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="17.8744%" y="197" width="0.1610%" height="15" fill="rgb(218,129,16)" fg:x="111" fg:w="1"/><text x="18.1244%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="17.8744%" y="181" width="0.1610%" height="15" fill="rgb(216,85,19)" fg:x="111" fg:w="1"/><text x="18.1244%" y="191.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.97%)</title><rect x="17.2303%" y="293" width="0.9662%" height="15" fill="rgb(235,228,7)" fg:x="107" fg:w="6"/><text x="17.4803%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.97%)</title><rect x="17.2303%" y="277" width="0.9662%" height="15" fill="rgb(245,175,0)" fg:x="107" fg:w="6"/><text x="17.4803%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="18.0354%" y="261" width="0.1610%" height="15" fill="rgb(208,168,36)" fg:x="112" fg:w="1"/><text x="18.2854%" y="271.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="18.0354%" y="245" width="0.1610%" height="15" fill="rgb(246,171,24)" fg:x="112" fg:w="1"/><text x="18.2854%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="18.0354%" y="229" width="0.1610%" height="15" fill="rgb(215,142,24)" fg:x="112" fg:w="1"/><text x="18.2854%" y="239.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="18.0354%" y="213" width="0.1610%" height="15" fill="rgb(250,187,7)" fg:x="112" fg:w="1"/><text x="18.2854%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="18.0354%" y="197" width="0.1610%" height="15" fill="rgb(228,66,33)" fg:x="112" fg:w="1"/><text x="18.2854%" y="207.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="18.0354%" y="181" width="0.1610%" height="15" fill="rgb(234,215,21)" fg:x="112" fg:w="1"/><text x="18.2854%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="18.0354%" y="165" width="0.1610%" height="15" fill="rgb(222,191,20)" fg:x="112" fg:w="1"/><text x="18.2854%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="18.0354%" y="149" width="0.1610%" height="15" fill="rgb(245,79,54)" fg:x="112" fg:w="1"/><text x="18.2854%" y="159.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="18.0354%" y="133" width="0.1610%" height="15" fill="rgb(240,10,37)" fg:x="112" fg:w="1"/><text x="18.2854%" y="143.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="18.0354%" y="117" width="0.1610%" height="15" fill="rgb(214,192,32)" fg:x="112" fg:w="1"/><text x="18.2854%" y="127.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="18.1965%" y="277" width="0.1610%" height="15" fill="rgb(209,36,54)" fg:x="113" fg:w="1"/><text x="18.4465%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="18.1965%" y="261" width="0.1610%" height="15" fill="rgb(220,10,11)" fg:x="113" fg:w="1"/><text x="18.4465%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="18.1965%" y="245" width="0.1610%" height="15" fill="rgb(221,106,17)" fg:x="113" fg:w="1"/><text x="18.4465%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="18.1965%" y="229" width="0.1610%" height="15" fill="rgb(251,142,44)" fg:x="113" fg:w="1"/><text x="18.4465%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="18.3575%" y="245" width="0.1610%" height="15" fill="rgb(238,13,15)" fg:x="114" fg:w="1"/><text x="18.6075%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="18.3575%" y="229" width="0.1610%" height="15" fill="rgb(208,107,27)" fg:x="114" fg:w="1"/><text x="18.6075%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="18.3575%" y="213" width="0.1610%" height="15" fill="rgb(205,136,37)" fg:x="114" fg:w="1"/><text x="18.6075%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="18.3575%" y="197" width="0.1610%" height="15" fill="rgb(250,205,27)" fg:x="114" fg:w="1"/><text x="18.6075%" y="207.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::grad_for_id (9 samples, 1.45%)</title><rect x="17.2303%" y="373" width="1.4493%" height="15" fill="rgb(210,80,43)" fg:x="107" fg:w="9"/><text x="17.4803%" y="383.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (9 samples, 1.45%)</title><rect x="17.2303%" y="357" width="1.4493%" height="15" fill="rgb(247,160,36)" fg:x="107" fg:w="9"/><text x="17.4803%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 1.45%)</title><rect x="17.2303%" y="341" width="1.4493%" height="15" fill="rgb(234,13,49)" fg:x="107" fg:w="9"/><text x="17.4803%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 1.45%)</title><rect x="17.2303%" y="325" width="1.4493%" height="15" fill="rgb(234,122,0)" fg:x="107" fg:w="9"/><text x="17.4803%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 1.45%)</title><rect x="17.2303%" y="309" width="1.4493%" height="15" fill="rgb(207,146,38)" fg:x="107" fg:w="9"/><text x="17.4803%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.48%)</title><rect x="18.1965%" y="293" width="0.4831%" height="15" fill="rgb(207,177,25)" fg:x="113" fg:w="3"/><text x="18.4465%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="18.3575%" y="277" width="0.3221%" height="15" fill="rgb(211,178,42)" fg:x="114" fg:w="2"/><text x="18.6075%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="18.3575%" y="261" width="0.3221%" height="15" fill="rgb(230,69,54)" fg:x="114" fg:w="2"/><text x="18.6075%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="18.5185%" y="245" width="0.1610%" height="15" fill="rgb(214,135,41)" fg:x="115" fg:w="1"/><text x="18.7685%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="18.5185%" y="229" width="0.1610%" height="15" fill="rgb(237,67,25)" fg:x="115" fg:w="1"/><text x="18.7685%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="18.5185%" y="213" width="0.1610%" height="15" fill="rgb(222,189,50)" fg:x="115" fg:w="1"/><text x="18.7685%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="18.5185%" y="197" width="0.1610%" height="15" fill="rgb(245,148,34)" fg:x="115" fg:w="1"/><text x="18.7685%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="18.5185%" y="181" width="0.1610%" height="15" fill="rgb(222,29,6)" fg:x="115" fg:w="1"/><text x="18.7685%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="18.6795%" y="213" width="0.1610%" height="15" fill="rgb(221,189,43)" fg:x="116" fg:w="1"/><text x="18.9295%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="18.6795%" y="197" width="0.1610%" height="15" fill="rgb(207,36,27)" fg:x="116" fg:w="1"/><text x="18.9295%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="18.6795%" y="181" width="0.1610%" height="15" fill="rgb(217,90,24)" fg:x="116" fg:w="1"/><text x="18.9295%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="18.6795%" y="165" width="0.1610%" height="15" fill="rgb(224,66,35)" fg:x="116" fg:w="1"/><text x="18.9295%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="18.6795%" y="261" width="0.3221%" height="15" fill="rgb(221,13,50)" fg:x="116" fg:w="2"/><text x="18.9295%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="18.6795%" y="245" width="0.3221%" height="15" fill="rgb(236,68,49)" fg:x="116" fg:w="2"/><text x="18.9295%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="18.6795%" y="229" width="0.3221%" height="15" fill="rgb(229,146,28)" fg:x="116" fg:w="2"/><text x="18.9295%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="18.8406%" y="213" width="0.1610%" height="15" fill="rgb(225,31,38)" fg:x="117" fg:w="1"/><text x="19.0906%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.16%)</title><rect x="18.8406%" y="197" width="0.1610%" height="15" fill="rgb(250,208,3)" fg:x="117" fg:w="1"/><text x="19.0906%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="18.8406%" y="181" width="0.1610%" height="15" fill="rgb(246,54,23)" fg:x="117" fg:w="1"/><text x="19.0906%" y="191.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="18.8406%" y="165" width="0.1610%" height="15" fill="rgb(243,76,11)" fg:x="117" fg:w="1"/><text x="19.0906%" y="175.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="18.8406%" y="149" width="0.1610%" height="15" fill="rgb(245,21,50)" fg:x="117" fg:w="1"/><text x="19.0906%" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.16%)</title><rect x="19.0016%" y="261" width="0.1610%" height="15" fill="rgb(228,9,43)" fg:x="118" fg:w="1"/><text x="19.2516%" y="271.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.16%)</title><rect x="19.0016%" y="245" width="0.1610%" height="15" fill="rgb(208,100,47)" fg:x="118" fg:w="1"/><text x="19.2516%" y="255.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.16%)</title><rect x="19.0016%" y="229" width="0.1610%" height="15" fill="rgb(232,26,8)" fg:x="118" fg:w="1"/><text x="19.2516%" y="239.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.16%)</title><rect x="19.0016%" y="213" width="0.1610%" height="15" fill="rgb(216,166,38)" fg:x="118" fg:w="1"/><text x="19.2516%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="19.0016%" y="197" width="0.1610%" height="15" fill="rgb(251,202,51)" fg:x="118" fg:w="1"/><text x="19.2516%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="19.0016%" y="181" width="0.1610%" height="15" fill="rgb(254,216,34)" fg:x="118" fg:w="1"/><text x="19.2516%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="19.0016%" y="165" width="0.1610%" height="15" fill="rgb(251,32,27)" fg:x="118" fg:w="1"/><text x="19.2516%" y="175.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.64%)</title><rect x="18.6795%" y="293" width="0.6441%" height="15" fill="rgb(208,127,28)" fg:x="116" fg:w="4"/><text x="18.9295%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.64%)</title><rect x="18.6795%" y="277" width="0.6441%" height="15" fill="rgb(224,137,22)" fg:x="116" fg:w="4"/><text x="18.9295%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="19.1626%" y="261" width="0.1610%" height="15" fill="rgb(254,70,32)" fg:x="119" fg:w="1"/><text x="19.4126%" y="271.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="19.1626%" y="245" width="0.1610%" height="15" fill="rgb(229,75,37)" fg:x="119" fg:w="1"/><text x="19.4126%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="19.1626%" y="229" width="0.1610%" height="15" fill="rgb(252,64,23)" fg:x="119" fg:w="1"/><text x="19.4126%" y="239.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="19.1626%" y="213" width="0.1610%" height="15" fill="rgb(232,162,48)" fg:x="119" fg:w="1"/><text x="19.4126%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="19.1626%" y="197" width="0.1610%" height="15" fill="rgb(246,160,12)" fg:x="119" fg:w="1"/><text x="19.4126%" y="207.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="19.1626%" y="181" width="0.1610%" height="15" fill="rgb(247,166,0)" fg:x="119" fg:w="1"/><text x="19.4126%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="19.1626%" y="165" width="0.1610%" height="15" fill="rgb(249,219,21)" fg:x="119" fg:w="1"/><text x="19.4126%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="19.1626%" y="149" width="0.1610%" height="15" fill="rgb(205,209,3)" fg:x="119" fg:w="1"/><text x="19.4126%" y="159.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="19.1626%" y="133" width="0.1610%" height="15" fill="rgb(243,44,1)" fg:x="119" fg:w="1"/><text x="19.4126%" y="143.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="19.1626%" y="117" width="0.1610%" height="15" fill="rgb(206,159,16)" fg:x="119" fg:w="1"/><text x="19.4126%" y="127.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="19.1626%" y="101" width="0.1610%" height="15" fill="rgb(244,77,30)" fg:x="119" fg:w="1"/><text x="19.4126%" y="111.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.64%)</title><rect x="19.3237%" y="245" width="0.6441%" height="15" fill="rgb(218,69,12)" fg:x="120" fg:w="4"/><text x="19.5737%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (4 samples, 0.64%)</title><rect x="19.3237%" y="229" width="0.6441%" height="15" fill="rgb(212,87,7)" fg:x="120" fg:w="4"/><text x="19.5737%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 0.64%)</title><rect x="19.3237%" y="213" width="0.6441%" height="15" fill="rgb(245,114,25)" fg:x="120" fg:w="4"/><text x="19.5737%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 0.64%)</title><rect x="19.3237%" y="197" width="0.6441%" height="15" fill="rgb(210,61,42)" fg:x="120" fg:w="4"/><text x="19.5737%" y="207.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.32%)</title><rect x="19.9678%" y="245" width="0.3221%" height="15" fill="rgb(211,52,33)" fg:x="124" fg:w="2"/><text x="20.2178%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="19.9678%" y="229" width="0.3221%" height="15" fill="rgb(234,58,33)" fg:x="124" fg:w="2"/><text x="20.2178%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="19.9678%" y="213" width="0.3221%" height="15" fill="rgb(220,115,36)" fg:x="124" fg:w="2"/><text x="20.2178%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="19.9678%" y="197" width="0.3221%" height="15" fill="rgb(243,153,54)" fg:x="124" fg:w="2"/><text x="20.2178%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="20.2899%" y="229" width="0.1610%" height="15" fill="rgb(251,47,18)" fg:x="126" fg:w="1"/><text x="20.5399%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="20.2899%" y="213" width="0.1610%" height="15" fill="rgb(242,102,42)" fg:x="126" fg:w="1"/><text x="20.5399%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="20.2899%" y="197" width="0.1610%" height="15" fill="rgb(234,31,38)" fg:x="126" fg:w="1"/><text x="20.5399%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="20.2899%" y="181" width="0.1610%" height="15" fill="rgb(221,117,51)" fg:x="126" fg:w="1"/><text x="20.5399%" y="191.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (14 samples, 2.25%)</title><rect x="18.6795%" y="373" width="2.2544%" height="15" fill="rgb(212,20,18)" fg:x="116" fg:w="14"/><text x="18.9295%" y="383.50">m..</text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (14 samples, 2.25%)</title><rect x="18.6795%" y="357" width="2.2544%" height="15" fill="rgb(245,133,36)" fg:x="116" fg:w="14"/><text x="18.9295%" y="367.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 2.25%)</title><rect x="18.6795%" y="341" width="2.2544%" height="15" fill="rgb(212,6,19)" fg:x="116" fg:w="14"/><text x="18.9295%" y="351.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 2.25%)</title><rect x="18.6795%" y="325" width="2.2544%" height="15" fill="rgb(218,1,36)" fg:x="116" fg:w="14"/><text x="18.9295%" y="335.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 2.25%)</title><rect x="18.6795%" y="309" width="2.2544%" height="15" fill="rgb(246,84,54)" fg:x="116" fg:w="14"/><text x="18.9295%" y="319.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 1.61%)</title><rect x="19.3237%" y="293" width="1.6103%" height="15" fill="rgb(242,110,6)" fg:x="120" fg:w="10"/><text x="19.5737%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 1.61%)</title><rect x="19.3237%" y="277" width="1.6103%" height="15" fill="rgb(214,47,5)" fg:x="120" fg:w="10"/><text x="19.5737%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 1.61%)</title><rect x="19.3237%" y="261" width="1.6103%" height="15" fill="rgb(218,159,25)" fg:x="120" fg:w="10"/><text x="19.5737%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.64%)</title><rect x="20.2899%" y="245" width="0.6441%" height="15" fill="rgb(215,211,28)" fg:x="126" fg:w="4"/><text x="20.5399%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.48%)</title><rect x="20.4509%" y="229" width="0.4831%" height="15" fill="rgb(238,59,32)" fg:x="127" fg:w="3"/><text x="20.7009%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.48%)</title><rect x="20.4509%" y="213" width="0.4831%" height="15" fill="rgb(226,82,3)" fg:x="127" fg:w="3"/><text x="20.7009%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="20.4509%" y="197" width="0.4831%" height="15" fill="rgb(240,164,32)" fg:x="127" fg:w="3"/><text x="20.7009%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="20.4509%" y="181" width="0.4831%" height="15" fill="rgb(232,46,7)" fg:x="127" fg:w="3"/><text x="20.7009%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="20.4509%" y="165" width="0.4831%" height="15" fill="rgb(229,129,53)" fg:x="127" fg:w="3"/><text x="20.7009%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="20.9340%" y="293" width="0.1610%" height="15" fill="rgb(234,188,29)" fg:x="130" fg:w="1"/><text x="21.1840%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="20.9340%" y="277" width="0.1610%" height="15" fill="rgb(246,141,4)" fg:x="130" fg:w="1"/><text x="21.1840%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="20.9340%" y="261" width="0.1610%" height="15" fill="rgb(229,23,39)" fg:x="130" fg:w="1"/><text x="21.1840%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="21.0950%" y="293" width="0.1610%" height="15" fill="rgb(206,12,3)" fg:x="131" fg:w="1"/><text x="21.3450%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="21.0950%" y="277" width="0.1610%" height="15" fill="rgb(252,226,20)" fg:x="131" fg:w="1"/><text x="21.3450%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="21.0950%" y="261" width="0.1610%" height="15" fill="rgb(216,123,35)" fg:x="131" fg:w="1"/><text x="21.3450%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="21.0950%" y="245" width="0.1610%" height="15" fill="rgb(212,68,40)" fg:x="131" fg:w="1"/><text x="21.3450%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="21.0950%" y="229" width="0.1610%" height="15" fill="rgb(254,125,32)" fg:x="131" fg:w="1"/><text x="21.3450%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="21.0950%" y="213" width="0.1610%" height="15" fill="rgb(253,97,22)" fg:x="131" fg:w="1"/><text x="21.3450%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="21.0950%" y="197" width="0.1610%" height="15" fill="rgb(241,101,14)" fg:x="131" fg:w="1"/><text x="21.3450%" y="207.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="21.2560%" y="213" width="0.3221%" height="15" fill="rgb(238,103,29)" fg:x="132" fg:w="2"/><text x="21.5060%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="21.2560%" y="197" width="0.3221%" height="15" fill="rgb(233,195,47)" fg:x="132" fg:w="2"/><text x="21.5060%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.32%)</title><rect x="21.2560%" y="181" width="0.3221%" height="15" fill="rgb(246,218,30)" fg:x="132" fg:w="2"/><text x="21.5060%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="21.2560%" y="165" width="0.3221%" height="15" fill="rgb(219,145,47)" fg:x="132" fg:w="2"/><text x="21.5060%" y="175.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="21.2560%" y="149" width="0.3221%" height="15" fill="rgb(243,12,26)" fg:x="132" fg:w="2"/><text x="21.5060%" y="159.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="21.2560%" y="133" width="0.3221%" height="15" fill="rgb(214,87,16)" fg:x="132" fg:w="2"/><text x="21.5060%" y="143.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.81%)</title><rect x="20.9340%" y="325" width="0.8052%" height="15" fill="rgb(208,99,42)" fg:x="130" fg:w="5"/><text x="21.1840%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.81%)</title><rect x="20.9340%" y="309" width="0.8052%" height="15" fill="rgb(253,99,2)" fg:x="130" fg:w="5"/><text x="21.1840%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.48%)</title><rect x="21.2560%" y="293" width="0.4831%" height="15" fill="rgb(220,168,23)" fg:x="132" fg:w="3"/><text x="21.5060%" y="303.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (3 samples, 0.48%)</title><rect x="21.2560%" y="277" width="0.4831%" height="15" fill="rgb(242,38,24)" fg:x="132" fg:w="3"/><text x="21.5060%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.48%)</title><rect x="21.2560%" y="261" width="0.4831%" height="15" fill="rgb(225,182,9)" fg:x="132" fg:w="3"/><text x="21.5060%" y="271.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.48%)</title><rect x="21.2560%" y="245" width="0.4831%" height="15" fill="rgb(243,178,37)" fg:x="132" fg:w="3"/><text x="21.5060%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.48%)</title><rect x="21.2560%" y="229" width="0.4831%" height="15" fill="rgb(232,139,19)" fg:x="132" fg:w="3"/><text x="21.5060%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="21.5781%" y="213" width="0.1610%" height="15" fill="rgb(225,201,24)" fg:x="134" fg:w="1"/><text x="21.8281%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="21.5781%" y="197" width="0.1610%" height="15" fill="rgb(221,47,46)" fg:x="134" fg:w="1"/><text x="21.8281%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="21.5781%" y="181" width="0.1610%" height="15" fill="rgb(249,23,13)" fg:x="134" fg:w="1"/><text x="21.8281%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="21.7391%" y="277" width="0.1610%" height="15" fill="rgb(219,9,5)" fg:x="135" fg:w="1"/><text x="21.9891%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="21.7391%" y="261" width="0.1610%" height="15" fill="rgb(254,171,16)" fg:x="135" fg:w="1"/><text x="21.9891%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="21.7391%" y="245" width="0.1610%" height="15" fill="rgb(230,171,20)" fg:x="135" fg:w="1"/><text x="21.9891%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="21.7391%" y="229" width="0.1610%" height="15" fill="rgb(210,71,41)" fg:x="135" fg:w="1"/><text x="21.9891%" y="239.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards (98 samples, 15.78%)</title><rect x="6.4412%" y="389" width="15.7810%" height="15" fill="rgb(206,173,20)" fg:x="40" fg:w="98"/><text x="6.6912%" y="399.50">micrograd_rs::engine::Ru..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 1.29%)</title><rect x="20.9340%" y="373" width="1.2882%" height="15" fill="rgb(233,88,34)" fg:x="130" fg:w="8"/><text x="21.1840%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 1.29%)</title><rect x="20.9340%" y="357" width="1.2882%" height="15" fill="rgb(223,209,46)" fg:x="130" fg:w="8"/><text x="21.1840%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 1.29%)</title><rect x="20.9340%" y="341" width="1.2882%" height="15" fill="rgb(250,43,18)" fg:x="130" fg:w="8"/><text x="21.1840%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.48%)</title><rect x="21.7391%" y="325" width="0.4831%" height="15" fill="rgb(208,13,10)" fg:x="135" fg:w="3"/><text x="21.9891%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="21.7391%" y="309" width="0.4831%" height="15" fill="rgb(212,200,36)" fg:x="135" fg:w="3"/><text x="21.9891%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="21.7391%" y="293" width="0.4831%" height="15" fill="rgb(225,90,30)" fg:x="135" fg:w="3"/><text x="21.9891%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="21.9002%" y="277" width="0.3221%" height="15" fill="rgb(236,182,39)" fg:x="136" fg:w="2"/><text x="22.1502%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.32%)</title><rect x="21.9002%" y="261" width="0.3221%" height="15" fill="rgb(212,144,35)" fg:x="136" fg:w="2"/><text x="22.1502%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.32%)</title><rect x="21.9002%" y="245" width="0.3221%" height="15" fill="rgb(228,63,44)" fg:x="136" fg:w="2"/><text x="22.1502%" y="255.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.32%)</title><rect x="21.9002%" y="229" width="0.3221%" height="15" fill="rgb(228,109,6)" fg:x="136" fg:w="2"/><text x="22.1502%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="21.9002%" y="213" width="0.3221%" height="15" fill="rgb(238,117,24)" fg:x="136" fg:w="2"/><text x="22.1502%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="21.9002%" y="197" width="0.3221%" height="15" fill="rgb(242,26,26)" fg:x="136" fg:w="2"/><text x="22.1502%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="21.9002%" y="181" width="0.3221%" height="15" fill="rgb(221,92,48)" fg:x="136" fg:w="2"/><text x="22.1502%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="22.2222%" y="357" width="0.1610%" height="15" fill="rgb(209,209,32)" fg:x="138" fg:w="1"/><text x="22.4722%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="22.2222%" y="341" width="0.1610%" height="15" fill="rgb(221,70,22)" fg:x="138" fg:w="1"/><text x="22.4722%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="22.2222%" y="325" width="0.1610%" height="15" fill="rgb(248,145,5)" fg:x="138" fg:w="1"/><text x="22.4722%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="22.2222%" y="309" width="0.1610%" height="15" fill="rgb(226,116,26)" fg:x="138" fg:w="1"/><text x="22.4722%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.32%)</title><rect x="22.3833%" y="229" width="0.3221%" height="15" fill="rgb(244,5,17)" fg:x="139" fg:w="2"/><text x="22.6333%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.32%)</title><rect x="22.3833%" y="213" width="0.3221%" height="15" fill="rgb(252,159,33)" fg:x="139" fg:w="2"/><text x="22.6333%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="22.3833%" y="197" width="0.3221%" height="15" fill="rgb(206,71,0)" fg:x="139" fg:w="2"/><text x="22.6333%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="22.3833%" y="181" width="0.3221%" height="15" fill="rgb(233,118,54)" fg:x="139" fg:w="2"/><text x="22.6333%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="22.3833%" y="165" width="0.3221%" height="15" fill="rgb(234,83,48)" fg:x="139" fg:w="2"/><text x="22.6333%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="22.3833%" y="277" width="0.6441%" height="15" fill="rgb(228,3,54)" fg:x="139" fg:w="4"/><text x="22.6333%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="22.3833%" y="261" width="0.6441%" height="15" fill="rgb(226,155,13)" fg:x="139" fg:w="4"/><text x="22.6333%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="22.3833%" y="245" width="0.6441%" height="15" fill="rgb(241,28,37)" fg:x="139" fg:w="4"/><text x="22.6333%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="22.7053%" y="229" width="0.3221%" height="15" fill="rgb(233,93,10)" fg:x="141" fg:w="2"/><text x="22.9553%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="22.7053%" y="213" width="0.3221%" height="15" fill="rgb(225,113,19)" fg:x="141" fg:w="2"/><text x="22.9553%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="22.7053%" y="197" width="0.3221%" height="15" fill="rgb(241,2,18)" fg:x="141" fg:w="2"/><text x="22.9553%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="22.7053%" y="181" width="0.3221%" height="15" fill="rgb(228,207,21)" fg:x="141" fg:w="2"/><text x="22.9553%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="23.0274%" y="197" width="0.3221%" height="15" fill="rgb(213,211,35)" fg:x="143" fg:w="2"/><text x="23.2774%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="23.0274%" y="181" width="0.3221%" height="15" fill="rgb(209,83,10)" fg:x="143" fg:w="2"/><text x="23.2774%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.32%)</title><rect x="23.0274%" y="165" width="0.3221%" height="15" fill="rgb(209,164,1)" fg:x="143" fg:w="2"/><text x="23.2774%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="23.0274%" y="149" width="0.3221%" height="15" fill="rgb(213,184,43)" fg:x="143" fg:w="2"/><text x="23.2774%" y="159.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="23.0274%" y="133" width="0.3221%" height="15" fill="rgb(231,61,34)" fg:x="143" fg:w="2"/><text x="23.2774%" y="143.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="23.0274%" y="117" width="0.3221%" height="15" fill="rgb(235,75,3)" fg:x="143" fg:w="2"/><text x="23.2774%" y="127.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 1.13%)</title><rect x="22.3833%" y="309" width="1.1272%" height="15" fill="rgb(220,106,47)" fg:x="139" fg:w="7"/><text x="22.6333%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 1.13%)</title><rect x="22.3833%" y="293" width="1.1272%" height="15" fill="rgb(210,196,33)" fg:x="139" fg:w="7"/><text x="22.6333%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.48%)</title><rect x="23.0274%" y="277" width="0.4831%" height="15" fill="rgb(229,154,42)" fg:x="143" fg:w="3"/><text x="23.2774%" y="287.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (3 samples, 0.48%)</title><rect x="23.0274%" y="261" width="0.4831%" height="15" fill="rgb(228,114,26)" fg:x="143" fg:w="3"/><text x="23.2774%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.48%)</title><rect x="23.0274%" y="245" width="0.4831%" height="15" fill="rgb(208,144,1)" fg:x="143" fg:w="3"/><text x="23.2774%" y="255.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.48%)</title><rect x="23.0274%" y="229" width="0.4831%" height="15" fill="rgb(239,112,37)" fg:x="143" fg:w="3"/><text x="23.2774%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.48%)</title><rect x="23.0274%" y="213" width="0.4831%" height="15" fill="rgb(210,96,50)" fg:x="143" fg:w="3"/><text x="23.2774%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="23.3494%" y="197" width="0.1610%" height="15" fill="rgb(222,178,2)" fg:x="145" fg:w="1"/><text x="23.5994%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="23.3494%" y="181" width="0.1610%" height="15" fill="rgb(226,74,18)" fg:x="145" fg:w="1"/><text x="23.5994%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="23.3494%" y="165" width="0.1610%" height="15" fill="rgb(225,67,54)" fg:x="145" fg:w="1"/><text x="23.5994%" y="175.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (1 samples, 0.16%)</title><rect x="23.5105%" y="293" width="0.1610%" height="15" fill="rgb(251,92,32)" fg:x="146" fg:w="1"/><text x="23.7605%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="23.5105%" y="277" width="0.1610%" height="15" fill="rgb(228,149,22)" fg:x="146" fg:w="1"/><text x="23.7605%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="23.5105%" y="261" width="0.1610%" height="15" fill="rgb(243,54,13)" fg:x="146" fg:w="1"/><text x="23.7605%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="23.5105%" y="245" width="0.1610%" height="15" fill="rgb(243,180,28)" fg:x="146" fg:w="1"/><text x="23.7605%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="23.6715%" y="261" width="0.1610%" height="15" fill="rgb(208,167,24)" fg:x="147" fg:w="1"/><text x="23.9215%" y="271.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.16%)</title><rect x="23.6715%" y="245" width="0.1610%" height="15" fill="rgb(245,73,45)" fg:x="147" fg:w="1"/><text x="23.9215%" y="255.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.16%)</title><rect x="23.6715%" y="229" width="0.1610%" height="15" fill="rgb(237,203,48)" fg:x="147" fg:w="1"/><text x="23.9215%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="23.6715%" y="213" width="0.1610%" height="15" fill="rgb(211,197,16)" fg:x="147" fg:w="1"/><text x="23.9215%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="23.6715%" y="197" width="0.1610%" height="15" fill="rgb(243,99,51)" fg:x="147" fg:w="1"/><text x="23.9215%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="23.6715%" y="181" width="0.1610%" height="15" fill="rgb(215,123,29)" fg:x="147" fg:w="1"/><text x="23.9215%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="23.8325%" y="261" width="0.4831%" height="15" fill="rgb(239,186,37)" fg:x="148" fg:w="3"/><text x="24.0825%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="23.8325%" y="245" width="0.4831%" height="15" fill="rgb(252,136,39)" fg:x="148" fg:w="3"/><text x="24.0825%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="23.8325%" y="229" width="0.4831%" height="15" fill="rgb(223,213,32)" fg:x="148" fg:w="3"/><text x="24.0825%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="24.3156%" y="261" width="0.1610%" height="15" fill="rgb(233,115,5)" fg:x="151" fg:w="1"/><text x="24.5656%" y="271.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="24.3156%" y="245" width="0.1610%" height="15" fill="rgb(207,226,44)" fg:x="151" fg:w="1"/><text x="24.5656%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.16%)</title><rect x="24.3156%" y="229" width="0.1610%" height="15" fill="rgb(208,126,0)" fg:x="151" fg:w="1"/><text x="24.5656%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="24.3156%" y="213" width="0.1610%" height="15" fill="rgb(244,66,21)" fg:x="151" fg:w="1"/><text x="24.5656%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="24.3156%" y="197" width="0.1610%" height="15" fill="rgb(222,97,12)" fg:x="151" fg:w="1"/><text x="24.5656%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="24.3156%" y="181" width="0.1610%" height="15" fill="rgb(219,213,19)" fg:x="151" fg:w="1"/><text x="24.5656%" y="191.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update (18 samples, 2.90%)</title><rect x="22.2222%" y="389" width="2.8986%" height="15" fill="rgb(252,169,30)" fg:x="138" fg:w="18"/><text x="22.4722%" y="399.50">mi..</text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id_mut (18 samples, 2.90%)</title><rect x="22.2222%" y="373" width="2.8986%" height="15" fill="rgb(206,32,51)" fg:x="138" fg:w="18"/><text x="22.4722%" y="383.50">mi..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (17 samples, 2.74%)</title><rect x="22.3833%" y="357" width="2.7375%" height="15" fill="rgb(250,172,42)" fg:x="139" fg:w="17"/><text x="22.6333%" y="367.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (17 samples, 2.74%)</title><rect x="22.3833%" y="341" width="2.7375%" height="15" fill="rgb(209,34,43)" fg:x="139" fg:w="17"/><text x="22.6333%" y="351.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (17 samples, 2.74%)</title><rect x="22.3833%" y="325" width="2.7375%" height="15" fill="rgb(223,11,35)" fg:x="139" fg:w="17"/><text x="22.6333%" y="335.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 1.61%)</title><rect x="23.5105%" y="309" width="1.6103%" height="15" fill="rgb(251,219,26)" fg:x="146" fg:w="10"/><text x="23.7605%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 1.45%)</title><rect x="23.6715%" y="293" width="1.4493%" height="15" fill="rgb(231,119,3)" fg:x="147" fg:w="9"/><text x="23.9215%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 1.45%)</title><rect x="23.6715%" y="277" width="1.4493%" height="15" fill="rgb(216,97,11)" fg:x="147" fg:w="9"/><text x="23.9215%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.64%)</title><rect x="24.4767%" y="261" width="0.6441%" height="15" fill="rgb(223,59,9)" fg:x="152" fg:w="4"/><text x="24.7267%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.64%)</title><rect x="24.4767%" y="245" width="0.6441%" height="15" fill="rgb(233,93,31)" fg:x="152" fg:w="4"/><text x="24.7267%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.64%)</title><rect x="24.4767%" y="229" width="0.6441%" height="15" fill="rgb(239,81,33)" fg:x="152" fg:w="4"/><text x="24.7267%" y="239.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.64%)</title><rect x="24.4767%" y="213" width="0.6441%" height="15" fill="rgb(213,120,34)" fg:x="152" fg:w="4"/><text x="24.7267%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (4 samples, 0.64%)</title><rect x="24.4767%" y="197" width="0.6441%" height="15" fill="rgb(243,49,53)" fg:x="152" fg:w="4"/><text x="24.7267%" y="207.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 0.64%)</title><rect x="24.4767%" y="181" width="0.6441%" height="15" fill="rgb(247,216,33)" fg:x="152" fg:w="4"/><text x="24.7267%" y="191.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 0.64%)</title><rect x="24.4767%" y="165" width="0.6441%" height="15" fill="rgb(226,26,14)" fg:x="152" fg:w="4"/><text x="24.7267%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.16%)</title><rect x="25.1208%" y="277" width="0.1610%" height="15" fill="rgb(215,49,53)" fg:x="156" fg:w="1"/><text x="25.3708%" y="287.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.16%)</title><rect x="25.1208%" y="261" width="0.1610%" height="15" fill="rgb(245,162,40)" fg:x="156" fg:w="1"/><text x="25.3708%" y="271.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.16%)</title><rect x="25.1208%" y="245" width="0.1610%" height="15" fill="rgb(229,68,17)" fg:x="156" fg:w="1"/><text x="25.3708%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="25.1208%" y="229" width="0.1610%" height="15" fill="rgb(213,182,10)" fg:x="156" fg:w="1"/><text x="25.3708%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="25.1208%" y="213" width="0.1610%" height="15" fill="rgb(245,125,30)" fg:x="156" fg:w="1"/><text x="25.3708%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="25.1208%" y="197" width="0.1610%" height="15" fill="rgb(232,202,2)" fg:x="156" fg:w="1"/><text x="25.3708%" y="207.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="25.1208%" y="309" width="0.3221%" height="15" fill="rgb(237,140,51)" fg:x="156" fg:w="2"/><text x="25.3708%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="25.1208%" y="293" width="0.3221%" height="15" fill="rgb(236,157,25)" fg:x="156" fg:w="2"/><text x="25.3708%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="25.2818%" y="277" width="0.1610%" height="15" fill="rgb(219,209,0)" fg:x="157" fg:w="1"/><text x="25.5318%" y="287.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="25.2818%" y="261" width="0.1610%" height="15" fill="rgb(240,116,54)" fg:x="157" fg:w="1"/><text x="25.5318%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="25.2818%" y="245" width="0.1610%" height="15" fill="rgb(216,10,36)" fg:x="157" fg:w="1"/><text x="25.5318%" y="255.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="25.2818%" y="229" width="0.1610%" height="15" fill="rgb(222,72,44)" fg:x="157" fg:w="1"/><text x="25.5318%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="25.2818%" y="213" width="0.1610%" height="15" fill="rgb(232,159,9)" fg:x="157" fg:w="1"/><text x="25.5318%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="25.2818%" y="197" width="0.1610%" height="15" fill="rgb(210,39,32)" fg:x="157" fg:w="1"/><text x="25.5318%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="25.2818%" y="181" width="0.1610%" height="15" fill="rgb(216,194,45)" fg:x="157" fg:w="1"/><text x="25.5318%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="25.2818%" y="165" width="0.1610%" height="15" fill="rgb(218,18,35)" fg:x="157" fg:w="1"/><text x="25.5318%" y="175.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="25.2818%" y="149" width="0.1610%" height="15" fill="rgb(207,83,51)" fg:x="157" fg:w="1"/><text x="25.5318%" y="159.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="25.2818%" y="133" width="0.1610%" height="15" fill="rgb(225,63,43)" fg:x="157" fg:w="1"/><text x="25.5318%" y="143.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="25.2818%" y="117" width="0.1610%" height="15" fill="rgb(207,57,36)" fg:x="157" fg:w="1"/><text x="25.5318%" y="127.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="25.4428%" y="277" width="0.1610%" height="15" fill="rgb(216,99,33)" fg:x="158" fg:w="1"/><text x="25.6928%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="25.4428%" y="261" width="0.1610%" height="15" fill="rgb(225,42,16)" fg:x="158" fg:w="1"/><text x="25.6928%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.16%)</title><rect x="25.4428%" y="245" width="0.1610%" height="15" fill="rgb(220,201,45)" fg:x="158" fg:w="1"/><text x="25.6928%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="25.4428%" y="229" width="0.1610%" height="15" fill="rgb(225,33,4)" fg:x="158" fg:w="1"/><text x="25.6928%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="25.4428%" y="213" width="0.1610%" height="15" fill="rgb(224,33,50)" fg:x="158" fg:w="1"/><text x="25.6928%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="25.4428%" y="197" width="0.1610%" height="15" fill="rgb(246,198,51)" fg:x="158" fg:w="1"/><text x="25.6928%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="25.4428%" y="181" width="0.1610%" height="15" fill="rgb(205,22,4)" fg:x="158" fg:w="1"/><text x="25.6928%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="25.6039%" y="261" width="0.1610%" height="15" fill="rgb(206,3,8)" fg:x="159" fg:w="1"/><text x="25.8539%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="25.6039%" y="245" width="0.1610%" height="15" fill="rgb(251,23,15)" fg:x="159" fg:w="1"/><text x="25.8539%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="25.6039%" y="229" width="0.1610%" height="15" fill="rgb(252,88,28)" fg:x="159" fg:w="1"/><text x="25.8539%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="25.6039%" y="213" width="0.1610%" height="15" fill="rgb(212,127,14)" fg:x="159" fg:w="1"/><text x="25.8539%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="25.6039%" y="197" width="0.1610%" height="15" fill="rgb(247,145,37)" fg:x="159" fg:w="1"/><text x="25.8539%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="25.6039%" y="181" width="0.1610%" height="15" fill="rgb(209,117,53)" fg:x="159" fg:w="1"/><text x="25.8539%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="25.7649%" y="245" width="0.1610%" height="15" fill="rgb(212,90,42)" fg:x="160" fg:w="1"/><text x="26.0149%" y="255.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="25.7649%" y="229" width="0.1610%" height="15" fill="rgb(218,164,37)" fg:x="160" fg:w="1"/><text x="26.0149%" y="239.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="25.7649%" y="213" width="0.1610%" height="15" fill="rgb(246,65,34)" fg:x="160" fg:w="1"/><text x="26.0149%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (123 samples, 19.81%)</title><rect x="6.4412%" y="421" width="19.8068%" height="15" fill="rgb(231,100,33)" fg:x="40" fg:w="123"/><text x="6.6912%" y="431.50">core::option::Option&lt;T&gt;::map</text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards::{{closure}} (123 samples, 19.81%)</title><rect x="6.4412%" y="405" width="19.8068%" height="15" fill="rgb(228,126,14)" fg:x="40" fg:w="123"/><text x="6.6912%" y="415.50">micrograd_rs::engine::RunnableG..</text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (7 samples, 1.13%)</title><rect x="25.1208%" y="389" width="1.1272%" height="15" fill="rgb(215,173,21)" fg:x="156" fg:w="7"/><text x="25.3708%" y="399.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (7 samples, 1.13%)</title><rect x="25.1208%" y="373" width="1.1272%" height="15" fill="rgb(210,6,40)" fg:x="156" fg:w="7"/><text x="25.3708%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 1.13%)</title><rect x="25.1208%" y="357" width="1.1272%" height="15" fill="rgb(212,48,18)" fg:x="156" fg:w="7"/><text x="25.3708%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 1.13%)</title><rect x="25.1208%" y="341" width="1.1272%" height="15" fill="rgb(230,214,11)" fg:x="156" fg:w="7"/><text x="25.3708%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 1.13%)</title><rect x="25.1208%" y="325" width="1.1272%" height="15" fill="rgb(254,105,39)" fg:x="156" fg:w="7"/><text x="25.3708%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.81%)</title><rect x="25.4428%" y="309" width="0.8052%" height="15" fill="rgb(245,158,5)" fg:x="158" fg:w="5"/><text x="25.6928%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.81%)</title><rect x="25.4428%" y="293" width="0.8052%" height="15" fill="rgb(249,208,11)" fg:x="158" fg:w="5"/><text x="25.6928%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.64%)</title><rect x="25.6039%" y="277" width="0.6441%" height="15" fill="rgb(210,39,28)" fg:x="159" fg:w="4"/><text x="25.8539%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.48%)</title><rect x="25.7649%" y="261" width="0.4831%" height="15" fill="rgb(211,56,53)" fg:x="160" fg:w="3"/><text x="26.0149%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.32%)</title><rect x="25.9259%" y="245" width="0.3221%" height="15" fill="rgb(226,201,30)" fg:x="161" fg:w="2"/><text x="26.1759%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.32%)</title><rect x="25.9259%" y="229" width="0.3221%" height="15" fill="rgb(239,101,34)" fg:x="161" fg:w="2"/><text x="26.1759%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="25.9259%" y="213" width="0.3221%" height="15" fill="rgb(226,209,5)" fg:x="161" fg:w="2"/><text x="26.1759%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="25.9259%" y="197" width="0.3221%" height="15" fill="rgb(250,105,47)" fg:x="161" fg:w="2"/><text x="26.1759%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="25.9259%" y="181" width="0.3221%" height="15" fill="rgb(230,72,3)" fg:x="161" fg:w="2"/><text x="26.1759%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="26.2480%" y="309" width="0.3221%" height="15" fill="rgb(232,218,39)" fg:x="163" fg:w="2"/><text x="26.4980%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="26.2480%" y="293" width="0.3221%" height="15" fill="rgb(248,166,6)" fg:x="163" fg:w="2"/><text x="26.4980%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="26.2480%" y="277" width="0.3221%" height="15" fill="rgb(247,89,20)" fg:x="163" fg:w="2"/><text x="26.4980%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="26.2480%" y="261" width="0.3221%" height="15" fill="rgb(248,130,54)" fg:x="163" fg:w="2"/><text x="26.4980%" y="271.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="26.2480%" y="245" width="0.3221%" height="15" fill="rgb(234,196,4)" fg:x="163" fg:w="2"/><text x="26.4980%" y="255.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="26.2480%" y="229" width="0.3221%" height="15" fill="rgb(250,143,31)" fg:x="163" fg:w="2"/><text x="26.4980%" y="239.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="26.2480%" y="213" width="0.3221%" height="15" fill="rgb(211,110,34)" fg:x="163" fg:w="2"/><text x="26.4980%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="26.2480%" y="341" width="0.4831%" height="15" fill="rgb(215,124,48)" fg:x="163" fg:w="3"/><text x="26.4980%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="26.2480%" y="325" width="0.4831%" height="15" fill="rgb(216,46,13)" fg:x="163" fg:w="3"/><text x="26.4980%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="26.5700%" y="309" width="0.1610%" height="15" fill="rgb(205,184,25)" fg:x="165" fg:w="1"/><text x="26.8200%" y="319.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="26.5700%" y="293" width="0.1610%" height="15" fill="rgb(228,1,10)" fg:x="165" fg:w="1"/><text x="26.8200%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="26.5700%" y="277" width="0.1610%" height="15" fill="rgb(213,116,27)" fg:x="165" fg:w="1"/><text x="26.8200%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="26.5700%" y="261" width="0.1610%" height="15" fill="rgb(241,95,50)" fg:x="165" fg:w="1"/><text x="26.8200%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="26.5700%" y="245" width="0.1610%" height="15" fill="rgb(238,48,32)" fg:x="165" fg:w="1"/><text x="26.8200%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="26.5700%" y="229" width="0.1610%" height="15" fill="rgb(235,113,49)" fg:x="165" fg:w="1"/><text x="26.8200%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="26.5700%" y="213" width="0.1610%" height="15" fill="rgb(205,127,43)" fg:x="165" fg:w="1"/><text x="26.8200%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="26.5700%" y="197" width="0.1610%" height="15" fill="rgb(250,162,2)" fg:x="165" fg:w="1"/><text x="26.8200%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="26.5700%" y="181" width="0.1610%" height="15" fill="rgb(220,13,41)" fg:x="165" fg:w="1"/><text x="26.8200%" y="191.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="26.5700%" y="165" width="0.1610%" height="15" fill="rgb(249,221,25)" fg:x="165" fg:w="1"/><text x="26.8200%" y="175.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="26.5700%" y="149" width="0.1610%" height="15" fill="rgb(215,208,19)" fg:x="165" fg:w="1"/><text x="26.8200%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.32%)</title><rect x="26.7311%" y="293" width="0.3221%" height="15" fill="rgb(236,175,2)" fg:x="166" fg:w="2"/><text x="26.9811%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (2 samples, 0.32%)</title><rect x="26.7311%" y="277" width="0.3221%" height="15" fill="rgb(241,52,2)" fg:x="166" fg:w="2"/><text x="26.9811%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.32%)</title><rect x="26.7311%" y="261" width="0.3221%" height="15" fill="rgb(248,140,14)" fg:x="166" fg:w="2"/><text x="26.9811%" y="271.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="26.7311%" y="245" width="0.3221%" height="15" fill="rgb(253,22,42)" fg:x="166" fg:w="2"/><text x="26.9811%" y="255.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="26.7311%" y="229" width="0.3221%" height="15" fill="rgb(234,61,47)" fg:x="166" fg:w="2"/><text x="26.9811%" y="239.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="26.7311%" y="213" width="0.3221%" height="15" fill="rgb(208,226,15)" fg:x="166" fg:w="2"/><text x="26.9811%" y="223.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.32%)</title><rect x="27.0531%" y="293" width="0.3221%" height="15" fill="rgb(217,221,4)" fg:x="168" fg:w="2"/><text x="27.3031%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="27.0531%" y="277" width="0.3221%" height="15" fill="rgb(212,174,34)" fg:x="168" fg:w="2"/><text x="27.3031%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="27.0531%" y="261" width="0.3221%" height="15" fill="rgb(253,83,4)" fg:x="168" fg:w="2"/><text x="27.3031%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="27.0531%" y="245" width="0.3221%" height="15" fill="rgb(250,195,49)" fg:x="168" fg:w="2"/><text x="27.3031%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="27.3752%" y="277" width="0.1610%" height="15" fill="rgb(241,192,25)" fg:x="170" fg:w="1"/><text x="27.6252%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="27.3752%" y="261" width="0.1610%" height="15" fill="rgb(208,124,10)" fg:x="170" fg:w="1"/><text x="27.6252%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="27.3752%" y="245" width="0.1610%" height="15" fill="rgb(222,33,0)" fg:x="170" fg:w="1"/><text x="27.6252%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="27.3752%" y="229" width="0.1610%" height="15" fill="rgb(234,209,28)" fg:x="170" fg:w="1"/><text x="27.6252%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="27.5362%" y="277" width="0.1610%" height="15" fill="rgb(224,11,23)" fg:x="171" fg:w="1"/><text x="27.7862%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="27.5362%" y="261" width="0.1610%" height="15" fill="rgb(232,99,1)" fg:x="171" fg:w="1"/><text x="27.7862%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="27.5362%" y="245" width="0.1610%" height="15" fill="rgb(237,95,45)" fg:x="171" fg:w="1"/><text x="27.7862%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="27.5362%" y="229" width="0.1610%" height="15" fill="rgb(208,109,11)" fg:x="171" fg:w="1"/><text x="27.7862%" y="239.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::grad_for_id (10 samples, 1.61%)</title><rect x="26.2480%" y="421" width="1.6103%" height="15" fill="rgb(216,190,48)" fg:x="163" fg:w="10"/><text x="26.4980%" y="431.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (10 samples, 1.61%)</title><rect x="26.2480%" y="405" width="1.6103%" height="15" fill="rgb(251,171,36)" fg:x="163" fg:w="10"/><text x="26.4980%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 1.61%)</title><rect x="26.2480%" y="389" width="1.6103%" height="15" fill="rgb(230,62,22)" fg:x="163" fg:w="10"/><text x="26.4980%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 1.61%)</title><rect x="26.2480%" y="373" width="1.6103%" height="15" fill="rgb(225,114,35)" fg:x="163" fg:w="10"/><text x="26.4980%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 1.61%)</title><rect x="26.2480%" y="357" width="1.6103%" height="15" fill="rgb(215,118,42)" fg:x="163" fg:w="10"/><text x="26.4980%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 1.13%)</title><rect x="26.7311%" y="341" width="1.1272%" height="15" fill="rgb(243,119,21)" fg:x="166" fg:w="7"/><text x="26.9811%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 1.13%)</title><rect x="26.7311%" y="325" width="1.1272%" height="15" fill="rgb(252,177,53)" fg:x="166" fg:w="7"/><text x="26.9811%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 1.13%)</title><rect x="26.7311%" y="309" width="1.1272%" height="15" fill="rgb(237,209,29)" fg:x="166" fg:w="7"/><text x="26.9811%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.48%)</title><rect x="27.3752%" y="293" width="0.4831%" height="15" fill="rgb(212,65,23)" fg:x="170" fg:w="3"/><text x="27.6252%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="27.6973%" y="277" width="0.1610%" height="15" fill="rgb(230,222,46)" fg:x="172" fg:w="1"/><text x="27.9473%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="27.6973%" y="261" width="0.1610%" height="15" fill="rgb(215,135,32)" fg:x="172" fg:w="1"/><text x="27.9473%" y="271.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="27.6973%" y="245" width="0.1610%" height="15" fill="rgb(246,101,22)" fg:x="172" fg:w="1"/><text x="27.9473%" y="255.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="27.6973%" y="229" width="0.1610%" height="15" fill="rgb(206,107,13)" fg:x="172" fg:w="1"/><text x="27.9473%" y="239.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="27.6973%" y="213" width="0.1610%" height="15" fill="rgb(250,100,44)" fg:x="172" fg:w="1"/><text x="27.9473%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="27.8583%" y="389" width="0.1610%" height="15" fill="rgb(231,147,38)" fg:x="173" fg:w="1"/><text x="28.1083%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="27.8583%" y="373" width="0.1610%" height="15" fill="rgb(229,8,40)" fg:x="173" fg:w="1"/><text x="28.1083%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="27.8583%" y="357" width="0.1610%" height="15" fill="rgb(221,135,30)" fg:x="173" fg:w="1"/><text x="28.1083%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="27.8583%" y="341" width="0.1610%" height="15" fill="rgb(249,193,18)" fg:x="173" fg:w="1"/><text x="28.1083%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.32%)</title><rect x="28.0193%" y="309" width="0.3221%" height="15" fill="rgb(209,133,39)" fg:x="174" fg:w="2"/><text x="28.2693%" y="319.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.32%)</title><rect x="28.0193%" y="293" width="0.3221%" height="15" fill="rgb(232,100,14)" fg:x="174" fg:w="2"/><text x="28.2693%" y="303.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.32%)</title><rect x="28.0193%" y="277" width="0.3221%" height="15" fill="rgb(224,185,1)" fg:x="174" fg:w="2"/><text x="28.2693%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="28.0193%" y="261" width="0.3221%" height="15" fill="rgb(223,139,8)" fg:x="174" fg:w="2"/><text x="28.2693%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="28.0193%" y="245" width="0.3221%" height="15" fill="rgb(232,213,38)" fg:x="174" fg:w="2"/><text x="28.2693%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="28.0193%" y="229" width="0.3221%" height="15" fill="rgb(207,94,22)" fg:x="174" fg:w="2"/><text x="28.2693%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="28.0193%" y="341" width="0.4831%" height="15" fill="rgb(219,183,54)" fg:x="174" fg:w="3"/><text x="28.2693%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="28.0193%" y="325" width="0.4831%" height="15" fill="rgb(216,185,54)" fg:x="174" fg:w="3"/><text x="28.2693%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="28.3414%" y="309" width="0.1610%" height="15" fill="rgb(254,217,39)" fg:x="176" fg:w="1"/><text x="28.5914%" y="319.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="28.3414%" y="293" width="0.1610%" height="15" fill="rgb(240,178,23)" fg:x="176" fg:w="1"/><text x="28.5914%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="28.3414%" y="277" width="0.1610%" height="15" fill="rgb(218,11,47)" fg:x="176" fg:w="1"/><text x="28.5914%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="28.3414%" y="261" width="0.1610%" height="15" fill="rgb(218,51,51)" fg:x="176" fg:w="1"/><text x="28.5914%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="28.3414%" y="245" width="0.1610%" height="15" fill="rgb(238,126,27)" fg:x="176" fg:w="1"/><text x="28.5914%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="28.3414%" y="229" width="0.1610%" height="15" fill="rgb(249,202,22)" fg:x="176" fg:w="1"/><text x="28.5914%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="28.3414%" y="213" width="0.1610%" height="15" fill="rgb(254,195,49)" fg:x="176" fg:w="1"/><text x="28.5914%" y="223.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.16%)</title><rect x="28.3414%" y="197" width="0.1610%" height="15" fill="rgb(208,123,14)" fg:x="176" fg:w="1"/><text x="28.5914%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="28.3414%" y="181" width="0.1610%" height="15" fill="rgb(224,200,8)" fg:x="176" fg:w="1"/><text x="28.5914%" y="191.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="28.3414%" y="165" width="0.1610%" height="15" fill="rgb(217,61,36)" fg:x="176" fg:w="1"/><text x="28.5914%" y="175.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="28.3414%" y="149" width="0.1610%" height="15" fill="rgb(206,35,45)" fg:x="176" fg:w="1"/><text x="28.5914%" y="159.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="28.5024%" y="293" width="0.3221%" height="15" fill="rgb(217,65,33)" fg:x="177" fg:w="2"/><text x="28.7524%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="28.5024%" y="277" width="0.3221%" height="15" fill="rgb(222,158,48)" fg:x="177" fg:w="2"/><text x="28.7524%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="28.5024%" y="261" width="0.3221%" height="15" fill="rgb(254,2,54)" fg:x="177" fg:w="2"/><text x="28.7524%" y="271.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="28.8245%" y="277" width="0.3221%" height="15" fill="rgb(250,143,38)" fg:x="179" fg:w="2"/><text x="29.0745%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="28.8245%" y="261" width="0.3221%" height="15" fill="rgb(248,25,0)" fg:x="179" fg:w="2"/><text x="29.0745%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="28.8245%" y="245" width="0.3221%" height="15" fill="rgb(206,152,27)" fg:x="179" fg:w="2"/><text x="29.0745%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.48%)</title><rect x="28.8245%" y="293" width="0.4831%" height="15" fill="rgb(240,77,30)" fg:x="179" fg:w="3"/><text x="29.0745%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="29.1465%" y="277" width="0.1610%" height="15" fill="rgb(231,5,3)" fg:x="181" fg:w="1"/><text x="29.3965%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="29.1465%" y="261" width="0.1610%" height="15" fill="rgb(207,226,32)" fg:x="181" fg:w="1"/><text x="29.3965%" y="271.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="29.1465%" y="245" width="0.1610%" height="15" fill="rgb(222,207,47)" fg:x="181" fg:w="1"/><text x="29.3965%" y="255.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="29.1465%" y="229" width="0.1610%" height="15" fill="rgb(229,115,45)" fg:x="181" fg:w="1"/><text x="29.3965%" y="239.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="29.1465%" y="213" width="0.1610%" height="15" fill="rgb(224,191,6)" fg:x="181" fg:w="1"/><text x="29.3965%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="29.3076%" y="277" width="0.1610%" height="15" fill="rgb(230,227,24)" fg:x="182" fg:w="1"/><text x="29.5576%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="29.3076%" y="261" width="0.1610%" height="15" fill="rgb(228,80,19)" fg:x="182" fg:w="1"/><text x="29.5576%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="29.3076%" y="245" width="0.1610%" height="15" fill="rgb(247,229,0)" fg:x="182" fg:w="1"/><text x="29.5576%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="29.4686%" y="277" width="0.1610%" height="15" fill="rgb(237,194,15)" fg:x="183" fg:w="1"/><text x="29.7186%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="29.4686%" y="261" width="0.1610%" height="15" fill="rgb(219,203,20)" fg:x="183" fg:w="1"/><text x="29.7186%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="29.4686%" y="245" width="0.1610%" height="15" fill="rgb(234,128,8)" fg:x="183" fg:w="1"/><text x="29.7186%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="29.4686%" y="229" width="0.1610%" height="15" fill="rgb(248,202,8)" fg:x="183" fg:w="1"/><text x="29.7186%" y="239.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (12 samples, 1.93%)</title><rect x="27.8583%" y="421" width="1.9324%" height="15" fill="rgb(206,104,37)" fg:x="173" fg:w="12"/><text x="28.1083%" y="431.50">m..</text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (12 samples, 1.93%)</title><rect x="27.8583%" y="405" width="1.9324%" height="15" fill="rgb(223,8,27)" fg:x="173" fg:w="12"/><text x="28.1083%" y="415.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 1.77%)</title><rect x="28.0193%" y="389" width="1.7713%" height="15" fill="rgb(216,217,28)" fg:x="174" fg:w="11"/><text x="28.2693%" y="399.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 1.77%)</title><rect x="28.0193%" y="373" width="1.7713%" height="15" fill="rgb(249,199,1)" fg:x="174" fg:w="11"/><text x="28.2693%" y="383.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 1.77%)</title><rect x="28.0193%" y="357" width="1.7713%" height="15" fill="rgb(240,85,17)" fg:x="174" fg:w="11"/><text x="28.2693%" y="367.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 1.29%)</title><rect x="28.5024%" y="341" width="1.2882%" height="15" fill="rgb(206,108,45)" fg:x="177" fg:w="8"/><text x="28.7524%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 1.29%)</title><rect x="28.5024%" y="325" width="1.2882%" height="15" fill="rgb(245,210,41)" fg:x="177" fg:w="8"/><text x="28.7524%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 1.29%)</title><rect x="28.5024%" y="309" width="1.2882%" height="15" fill="rgb(206,13,37)" fg:x="177" fg:w="8"/><text x="28.7524%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.48%)</title><rect x="29.3076%" y="293" width="0.4831%" height="15" fill="rgb(250,61,18)" fg:x="182" fg:w="3"/><text x="29.5576%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="29.6296%" y="277" width="0.1610%" height="15" fill="rgb(235,172,48)" fg:x="184" fg:w="1"/><text x="29.8796%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="29.6296%" y="261" width="0.1610%" height="15" fill="rgb(249,201,17)" fg:x="184" fg:w="1"/><text x="29.8796%" y="271.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.16%)</title><rect x="29.6296%" y="245" width="0.1610%" height="15" fill="rgb(219,208,6)" fg:x="184" fg:w="1"/><text x="29.8796%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="29.6296%" y="229" width="0.1610%" height="15" fill="rgb(248,31,23)" fg:x="184" fg:w="1"/><text x="29.8796%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="29.6296%" y="213" width="0.1610%" height="15" fill="rgb(245,15,42)" fg:x="184" fg:w="1"/><text x="29.8796%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="29.6296%" y="197" width="0.1610%" height="15" fill="rgb(222,217,39)" fg:x="184" fg:w="1"/><text x="29.8796%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="29.7907%" y="341" width="0.3221%" height="15" fill="rgb(210,219,27)" fg:x="185" fg:w="2"/><text x="30.0407%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="29.7907%" y="325" width="0.3221%" height="15" fill="rgb(252,166,36)" fg:x="185" fg:w="2"/><text x="30.0407%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="29.7907%" y="309" width="0.3221%" height="15" fill="rgb(245,132,34)" fg:x="185" fg:w="2"/><text x="30.0407%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="29.7907%" y="293" width="0.3221%" height="15" fill="rgb(236,54,3)" fg:x="185" fg:w="2"/><text x="30.0407%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="29.7907%" y="277" width="0.3221%" height="15" fill="rgb(241,173,43)" fg:x="185" fg:w="2"/><text x="30.0407%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="29.7907%" y="261" width="0.3221%" height="15" fill="rgb(215,190,9)" fg:x="185" fg:w="2"/><text x="30.0407%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="29.7907%" y="245" width="0.3221%" height="15" fill="rgb(242,101,16)" fg:x="185" fg:w="2"/><text x="30.0407%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="30.1127%" y="229" width="0.1610%" height="15" fill="rgb(223,190,21)" fg:x="187" fg:w="1"/><text x="30.3627%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="30.1127%" y="213" width="0.1610%" height="15" fill="rgb(215,228,25)" fg:x="187" fg:w="1"/><text x="30.3627%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="30.1127%" y="197" width="0.1610%" height="15" fill="rgb(225,36,22)" fg:x="187" fg:w="1"/><text x="30.3627%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="30.1127%" y="181" width="0.1610%" height="15" fill="rgb(251,106,46)" fg:x="187" fg:w="1"/><text x="30.3627%" y="191.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.64%)</title><rect x="29.7907%" y="373" width="0.6441%" height="15" fill="rgb(208,90,1)" fg:x="185" fg:w="4"/><text x="30.0407%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.64%)</title><rect x="29.7907%" y="357" width="0.6441%" height="15" fill="rgb(243,10,4)" fg:x="185" fg:w="4"/><text x="30.0407%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.32%)</title><rect x="30.1127%" y="341" width="0.3221%" height="15" fill="rgb(212,137,27)" fg:x="187" fg:w="2"/><text x="30.3627%" y="351.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (2 samples, 0.32%)</title><rect x="30.1127%" y="325" width="0.3221%" height="15" fill="rgb(231,220,49)" fg:x="187" fg:w="2"/><text x="30.3627%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.32%)</title><rect x="30.1127%" y="309" width="0.3221%" height="15" fill="rgb(237,96,20)" fg:x="187" fg:w="2"/><text x="30.3627%" y="319.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.32%)</title><rect x="30.1127%" y="293" width="0.3221%" height="15" fill="rgb(239,229,30)" fg:x="187" fg:w="2"/><text x="30.3627%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="30.1127%" y="277" width="0.3221%" height="15" fill="rgb(219,65,33)" fg:x="187" fg:w="2"/><text x="30.3627%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="30.1127%" y="261" width="0.3221%" height="15" fill="rgb(243,134,7)" fg:x="187" fg:w="2"/><text x="30.3627%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="30.1127%" y="245" width="0.3221%" height="15" fill="rgb(216,177,54)" fg:x="187" fg:w="2"/><text x="30.3627%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="30.2738%" y="229" width="0.1610%" height="15" fill="rgb(211,160,20)" fg:x="188" fg:w="1"/><text x="30.5238%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="30.2738%" y="213" width="0.1610%" height="15" fill="rgb(239,85,39)" fg:x="188" fg:w="1"/><text x="30.5238%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="30.2738%" y="197" width="0.1610%" height="15" fill="rgb(232,125,22)" fg:x="188" fg:w="1"/><text x="30.5238%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="30.4348%" y="357" width="0.1610%" height="15" fill="rgb(244,57,34)" fg:x="189" fg:w="1"/><text x="30.6848%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="30.4348%" y="341" width="0.1610%" height="15" fill="rgb(214,203,32)" fg:x="189" fg:w="1"/><text x="30.6848%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="30.4348%" y="325" width="0.1610%" height="15" fill="rgb(207,58,43)" fg:x="189" fg:w="1"/><text x="30.6848%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="30.5958%" y="325" width="0.1610%" height="15" fill="rgb(215,193,15)" fg:x="190" fg:w="1"/><text x="30.8458%" y="335.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.16%)</title><rect x="30.5958%" y="309" width="0.1610%" height="15" fill="rgb(232,15,44)" fg:x="190" fg:w="1"/><text x="30.8458%" y="319.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.16%)</title><rect x="30.5958%" y="293" width="0.1610%" height="15" fill="rgb(212,3,48)" fg:x="190" fg:w="1"/><text x="30.8458%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="30.5958%" y="277" width="0.1610%" height="15" fill="rgb(218,128,7)" fg:x="190" fg:w="1"/><text x="30.8458%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="30.5958%" y="261" width="0.1610%" height="15" fill="rgb(226,216,39)" fg:x="190" fg:w="1"/><text x="30.8458%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="30.5958%" y="245" width="0.1610%" height="15" fill="rgb(243,47,51)" fg:x="190" fg:w="1"/><text x="30.8458%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="30.7568%" y="325" width="0.1610%" height="15" fill="rgb(241,183,40)" fg:x="191" fg:w="1"/><text x="31.0068%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="30.7568%" y="309" width="0.1610%" height="15" fill="rgb(231,217,32)" fg:x="191" fg:w="1"/><text x="31.0068%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="30.7568%" y="293" width="0.1610%" height="15" fill="rgb(229,61,38)" fg:x="191" fg:w="1"/><text x="31.0068%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="30.9179%" y="309" width="0.1610%" height="15" fill="rgb(225,210,5)" fg:x="192" fg:w="1"/><text x="31.1679%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="30.9179%" y="293" width="0.1610%" height="15" fill="rgb(231,79,45)" fg:x="192" fg:w="1"/><text x="31.1679%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="30.9179%" y="277" width="0.1610%" height="15" fill="rgb(224,100,7)" fg:x="192" fg:w="1"/><text x="31.1679%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="31.0789%" y="309" width="0.1610%" height="15" fill="rgb(241,198,18)" fg:x="193" fg:w="1"/><text x="31.3289%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="31.0789%" y="293" width="0.1610%" height="15" fill="rgb(252,97,53)" fg:x="193" fg:w="1"/><text x="31.3289%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="31.0789%" y="277" width="0.1610%" height="15" fill="rgb(220,88,7)" fg:x="193" fg:w="1"/><text x="31.3289%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="31.0789%" y="261" width="0.1610%" height="15" fill="rgb(213,176,14)" fg:x="193" fg:w="1"/><text x="31.3289%" y="271.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards (156 samples, 25.12%)</title><rect x="6.2802%" y="437" width="25.1208%" height="15" fill="rgb(246,73,7)" fg:x="39" fg:w="156"/><text x="6.5302%" y="447.50">micrograd_rs::engine::RunnableGraph::_ba..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 1.61%)</title><rect x="29.7907%" y="421" width="1.6103%" height="15" fill="rgb(245,64,36)" fg:x="185" fg:w="10"/><text x="30.0407%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 1.61%)</title><rect x="29.7907%" y="405" width="1.6103%" height="15" fill="rgb(245,80,10)" fg:x="185" fg:w="10"/><text x="30.0407%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 1.61%)</title><rect x="29.7907%" y="389" width="1.6103%" height="15" fill="rgb(232,107,50)" fg:x="185" fg:w="10"/><text x="30.0407%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.97%)</title><rect x="30.4348%" y="373" width="0.9662%" height="15" fill="rgb(253,3,0)" fg:x="189" fg:w="6"/><text x="30.6848%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.81%)</title><rect x="30.5958%" y="357" width="0.8052%" height="15" fill="rgb(212,99,53)" fg:x="190" fg:w="5"/><text x="30.8458%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.81%)</title><rect x="30.5958%" y="341" width="0.8052%" height="15" fill="rgb(249,111,54)" fg:x="190" fg:w="5"/><text x="30.8458%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.48%)</title><rect x="30.9179%" y="325" width="0.4831%" height="15" fill="rgb(249,55,30)" fg:x="192" fg:w="3"/><text x="31.1679%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="31.2399%" y="309" width="0.1610%" height="15" fill="rgb(237,47,42)" fg:x="194" fg:w="1"/><text x="31.4899%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="31.2399%" y="293" width="0.1610%" height="15" fill="rgb(211,20,18)" fg:x="194" fg:w="1"/><text x="31.4899%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="31.2399%" y="277" width="0.1610%" height="15" fill="rgb(231,203,46)" fg:x="194" fg:w="1"/><text x="31.4899%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="31.2399%" y="261" width="0.1610%" height="15" fill="rgb(237,142,3)" fg:x="194" fg:w="1"/><text x="31.4899%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="31.2399%" y="245" width="0.1610%" height="15" fill="rgb(241,107,1)" fg:x="194" fg:w="1"/><text x="31.4899%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="31.4010%" y="341" width="0.1610%" height="15" fill="rgb(229,83,13)" fg:x="195" fg:w="1"/><text x="31.6510%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="31.4010%" y="325" width="0.1610%" height="15" fill="rgb(241,91,40)" fg:x="195" fg:w="1"/><text x="31.6510%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="31.4010%" y="309" width="0.1610%" height="15" fill="rgb(225,3,45)" fg:x="195" fg:w="1"/><text x="31.6510%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="31.5620%" y="325" width="0.1610%" height="15" fill="rgb(244,223,14)" fg:x="196" fg:w="1"/><text x="31.8120%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="31.5620%" y="309" width="0.1610%" height="15" fill="rgb(224,124,37)" fg:x="196" fg:w="1"/><text x="31.8120%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="31.5620%" y="293" width="0.1610%" height="15" fill="rgb(251,171,30)" fg:x="196" fg:w="1"/><text x="31.8120%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="31.7230%" y="325" width="0.1610%" height="15" fill="rgb(236,46,54)" fg:x="197" fg:w="1"/><text x="31.9730%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="31.7230%" y="309" width="0.1610%" height="15" fill="rgb(245,213,5)" fg:x="197" fg:w="1"/><text x="31.9730%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="31.7230%" y="293" width="0.1610%" height="15" fill="rgb(230,144,27)" fg:x="197" fg:w="1"/><text x="31.9730%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="31.7230%" y="277" width="0.1610%" height="15" fill="rgb(220,86,6)" fg:x="197" fg:w="1"/><text x="31.9730%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="31.7230%" y="261" width="0.1610%" height="15" fill="rgb(240,20,13)" fg:x="197" fg:w="1"/><text x="31.9730%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="31.7230%" y="245" width="0.1610%" height="15" fill="rgb(217,89,34)" fg:x="197" fg:w="1"/><text x="31.9730%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="31.7230%" y="229" width="0.1610%" height="15" fill="rgb(229,13,5)" fg:x="197" fg:w="1"/><text x="31.9730%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.64%)</title><rect x="31.4010%" y="357" width="0.6441%" height="15" fill="rgb(244,67,35)" fg:x="195" fg:w="4"/><text x="31.6510%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="31.5620%" y="341" width="0.4831%" height="15" fill="rgb(221,40,2)" fg:x="196" fg:w="3"/><text x="31.8120%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="31.8841%" y="325" width="0.1610%" height="15" fill="rgb(237,157,21)" fg:x="198" fg:w="1"/><text x="32.1341%" y="335.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="31.8841%" y="309" width="0.1610%" height="15" fill="rgb(222,94,11)" fg:x="198" fg:w="1"/><text x="32.1341%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="31.8841%" y="293" width="0.1610%" height="15" fill="rgb(249,113,6)" fg:x="198" fg:w="1"/><text x="32.1341%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="31.8841%" y="277" width="0.1610%" height="15" fill="rgb(238,137,36)" fg:x="198" fg:w="1"/><text x="32.1341%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="31.8841%" y="261" width="0.1610%" height="15" fill="rgb(210,102,26)" fg:x="198" fg:w="1"/><text x="32.1341%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="31.8841%" y="245" width="0.1610%" height="15" fill="rgb(218,30,30)" fg:x="198" fg:w="1"/><text x="32.1341%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="31.8841%" y="229" width="0.1610%" height="15" fill="rgb(214,67,26)" fg:x="198" fg:w="1"/><text x="32.1341%" y="239.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="31.8841%" y="213" width="0.1610%" height="15" fill="rgb(251,9,53)" fg:x="198" fg:w="1"/><text x="32.1341%" y="223.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="31.8841%" y="197" width="0.1610%" height="15" fill="rgb(228,204,25)" fg:x="198" fg:w="1"/><text x="32.1341%" y="207.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="31.8841%" y="181" width="0.1610%" height="15" fill="rgb(207,153,8)" fg:x="198" fg:w="1"/><text x="32.1341%" y="191.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="32.0451%" y="341" width="0.1610%" height="15" fill="rgb(242,9,16)" fg:x="199" fg:w="1"/><text x="32.2951%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="32.0451%" y="325" width="0.1610%" height="15" fill="rgb(217,211,10)" fg:x="199" fg:w="1"/><text x="32.2951%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="32.0451%" y="309" width="0.1610%" height="15" fill="rgb(219,228,52)" fg:x="199" fg:w="1"/><text x="32.2951%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="32.2061%" y="309" width="0.3221%" height="15" fill="rgb(231,92,29)" fg:x="200" fg:w="2"/><text x="32.4561%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="32.2061%" y="293" width="0.3221%" height="15" fill="rgb(232,8,23)" fg:x="200" fg:w="2"/><text x="32.4561%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="32.2061%" y="277" width="0.3221%" height="15" fill="rgb(216,211,34)" fg:x="200" fg:w="2"/><text x="32.4561%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="32.5282%" y="293" width="0.1610%" height="15" fill="rgb(236,151,0)" fg:x="202" fg:w="1"/><text x="32.7782%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="32.5282%" y="277" width="0.1610%" height="15" fill="rgb(209,168,3)" fg:x="202" fg:w="1"/><text x="32.7782%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="32.5282%" y="261" width="0.1610%" height="15" fill="rgb(208,129,28)" fg:x="202" fg:w="1"/><text x="32.7782%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="32.5282%" y="245" width="0.1610%" height="15" fill="rgb(229,78,22)" fg:x="202" fg:w="1"/><text x="32.7782%" y="255.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update (11 samples, 1.77%)</title><rect x="31.4010%" y="437" width="1.7713%" height="15" fill="rgb(228,187,13)" fg:x="195" fg:w="11"/><text x="31.6510%" y="447.50">m..</text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id_mut (11 samples, 1.77%)</title><rect x="31.4010%" y="421" width="1.7713%" height="15" fill="rgb(240,119,24)" fg:x="195" fg:w="11"/><text x="31.6510%" y="431.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (11 samples, 1.77%)</title><rect x="31.4010%" y="405" width="1.7713%" height="15" fill="rgb(209,194,42)" fg:x="195" fg:w="11"/><text x="31.6510%" y="415.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (11 samples, 1.77%)</title><rect x="31.4010%" y="389" width="1.7713%" height="15" fill="rgb(247,200,46)" fg:x="195" fg:w="11"/><text x="31.6510%" y="399.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (11 samples, 1.77%)</title><rect x="31.4010%" y="373" width="1.7713%" height="15" fill="rgb(218,76,16)" fg:x="195" fg:w="11"/><text x="31.6510%" y="383.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 1.13%)</title><rect x="32.0451%" y="357" width="1.1272%" height="15" fill="rgb(225,21,48)" fg:x="199" fg:w="7"/><text x="32.2951%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.97%)</title><rect x="32.2061%" y="341" width="0.9662%" height="15" fill="rgb(239,223,50)" fg:x="200" fg:w="6"/><text x="32.4561%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.97%)</title><rect x="32.2061%" y="325" width="0.9662%" height="15" fill="rgb(244,45,21)" fg:x="200" fg:w="6"/><text x="32.4561%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.64%)</title><rect x="32.5282%" y="309" width="0.6441%" height="15" fill="rgb(232,33,43)" fg:x="202" fg:w="4"/><text x="32.7782%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.48%)</title><rect x="32.6892%" y="293" width="0.4831%" height="15" fill="rgb(209,8,3)" fg:x="203" fg:w="3"/><text x="32.9392%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.48%)</title><rect x="32.6892%" y="277" width="0.4831%" height="15" fill="rgb(214,25,53)" fg:x="203" fg:w="3"/><text x="32.9392%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="32.6892%" y="261" width="0.4831%" height="15" fill="rgb(254,186,54)" fg:x="203" fg:w="3"/><text x="32.9392%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="32.6892%" y="245" width="0.4831%" height="15" fill="rgb(208,174,49)" fg:x="203" fg:w="3"/><text x="32.9392%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="32.6892%" y="229" width="0.4831%" height="15" fill="rgb(233,191,51)" fg:x="203" fg:w="3"/><text x="32.9392%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="33.1723%" y="405" width="0.1610%" height="15" fill="rgb(222,134,10)" fg:x="206" fg:w="1"/><text x="33.4223%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="33.1723%" y="389" width="0.1610%" height="15" fill="rgb(230,226,20)" fg:x="206" fg:w="1"/><text x="33.4223%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="33.1723%" y="373" width="0.1610%" height="15" fill="rgb(251,111,25)" fg:x="206" fg:w="1"/><text x="33.4223%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="33.1723%" y="357" width="0.1610%" height="15" fill="rgb(224,40,46)" fg:x="206" fg:w="1"/><text x="33.4223%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="33.3333%" y="277" width="0.1610%" height="15" fill="rgb(236,108,47)" fg:x="207" fg:w="1"/><text x="33.5833%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="33.3333%" y="261" width="0.1610%" height="15" fill="rgb(234,93,0)" fg:x="207" fg:w="1"/><text x="33.5833%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="33.3333%" y="245" width="0.1610%" height="15" fill="rgb(224,213,32)" fg:x="207" fg:w="1"/><text x="33.5833%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="33.3333%" y="229" width="0.1610%" height="15" fill="rgb(251,11,48)" fg:x="207" fg:w="1"/><text x="33.5833%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="33.3333%" y="325" width="0.3221%" height="15" fill="rgb(236,173,5)" fg:x="207" fg:w="2"/><text x="33.5833%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="33.3333%" y="309" width="0.3221%" height="15" fill="rgb(230,95,12)" fg:x="207" fg:w="2"/><text x="33.5833%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="33.3333%" y="293" width="0.3221%" height="15" fill="rgb(232,209,1)" fg:x="207" fg:w="2"/><text x="33.5833%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="33.4944%" y="277" width="0.1610%" height="15" fill="rgb(232,6,1)" fg:x="208" fg:w="1"/><text x="33.7444%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="33.4944%" y="261" width="0.1610%" height="15" fill="rgb(210,224,50)" fg:x="208" fg:w="1"/><text x="33.7444%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="33.4944%" y="245" width="0.1610%" height="15" fill="rgb(228,127,35)" fg:x="208" fg:w="1"/><text x="33.7444%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="33.3333%" y="357" width="0.4831%" height="15" fill="rgb(245,102,45)" fg:x="207" fg:w="3"/><text x="33.5833%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="33.3333%" y="341" width="0.4831%" height="15" fill="rgb(214,1,49)" fg:x="207" fg:w="3"/><text x="33.5833%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="33.6554%" y="325" width="0.1610%" height="15" fill="rgb(226,163,40)" fg:x="209" fg:w="1"/><text x="33.9054%" y="335.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="33.6554%" y="309" width="0.1610%" height="15" fill="rgb(239,212,28)" fg:x="209" fg:w="1"/><text x="33.9054%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="33.6554%" y="293" width="0.1610%" height="15" fill="rgb(220,20,13)" fg:x="209" fg:w="1"/><text x="33.9054%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="33.6554%" y="277" width="0.1610%" height="15" fill="rgb(210,164,35)" fg:x="209" fg:w="1"/><text x="33.9054%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="33.6554%" y="261" width="0.1610%" height="15" fill="rgb(248,109,41)" fg:x="209" fg:w="1"/><text x="33.9054%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="33.6554%" y="245" width="0.1610%" height="15" fill="rgb(238,23,50)" fg:x="209" fg:w="1"/><text x="33.9054%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="33.6554%" y="229" width="0.1610%" height="15" fill="rgb(211,48,49)" fg:x="209" fg:w="1"/><text x="33.9054%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.16%)</title><rect x="33.6554%" y="213" width="0.1610%" height="15" fill="rgb(223,36,21)" fg:x="209" fg:w="1"/><text x="33.9054%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.16%)</title><rect x="33.6554%" y="197" width="0.1610%" height="15" fill="rgb(207,123,46)" fg:x="209" fg:w="1"/><text x="33.9054%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="33.6554%" y="181" width="0.1610%" height="15" fill="rgb(240,218,32)" fg:x="209" fg:w="1"/><text x="33.9054%" y="191.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="33.6554%" y="165" width="0.1610%" height="15" fill="rgb(252,5,43)" fg:x="209" fg:w="1"/><text x="33.9054%" y="175.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="33.6554%" y="149" width="0.1610%" height="15" fill="rgb(252,84,19)" fg:x="209" fg:w="1"/><text x="33.9054%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="33.8164%" y="309" width="0.1610%" height="15" fill="rgb(243,152,39)" fg:x="210" fg:w="1"/><text x="34.0664%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="33.8164%" y="293" width="0.1610%" height="15" fill="rgb(234,160,15)" fg:x="210" fg:w="1"/><text x="34.0664%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="33.8164%" y="277" width="0.1610%" height="15" fill="rgb(237,34,20)" fg:x="210" fg:w="1"/><text x="34.0664%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="33.8164%" y="261" width="0.1610%" height="15" fill="rgb(229,97,13)" fg:x="210" fg:w="1"/><text x="34.0664%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="33.8164%" y="245" width="0.1610%" height="15" fill="rgb(234,71,50)" fg:x="210" fg:w="1"/><text x="34.0664%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="33.8164%" y="229" width="0.1610%" height="15" fill="rgb(253,155,4)" fg:x="210" fg:w="1"/><text x="34.0664%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.32%)</title><rect x="33.9775%" y="309" width="0.3221%" height="15" fill="rgb(222,185,37)" fg:x="211" fg:w="2"/><text x="34.2275%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="33.9775%" y="293" width="0.3221%" height="15" fill="rgb(251,177,13)" fg:x="211" fg:w="2"/><text x="34.2275%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="33.9775%" y="277" width="0.3221%" height="15" fill="rgb(250,179,40)" fg:x="211" fg:w="2"/><text x="34.2275%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="33.9775%" y="261" width="0.3221%" height="15" fill="rgb(242,44,2)" fg:x="211" fg:w="2"/><text x="34.2275%" y="271.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="34.2995%" y="293" width="0.1610%" height="15" fill="rgb(216,177,13)" fg:x="213" fg:w="1"/><text x="34.5495%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="34.2995%" y="277" width="0.1610%" height="15" fill="rgb(216,106,43)" fg:x="213" fg:w="1"/><text x="34.5495%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="34.2995%" y="261" width="0.1610%" height="15" fill="rgb(216,183,2)" fg:x="213" fg:w="1"/><text x="34.5495%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (179 samples, 28.82%)</title><rect x="6.2802%" y="469" width="28.8245%" height="15" fill="rgb(249,75,3)" fg:x="39" fg:w="179"/><text x="6.5302%" y="479.50">core::option::Option&lt;T&gt;::map</text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards::{{closure}} (179 samples, 28.82%)</title><rect x="6.2802%" y="453" width="28.8245%" height="15" fill="rgb(219,67,39)" fg:x="39" fg:w="179"/><text x="6.5302%" y="463.50">micrograd_rs::engine::RunnableGraph::_backward..</text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (12 samples, 1.93%)</title><rect x="33.1723%" y="437" width="1.9324%" height="15" fill="rgb(253,228,2)" fg:x="206" fg:w="12"/><text x="33.4223%" y="447.50">m..</text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (12 samples, 1.93%)</title><rect x="33.1723%" y="421" width="1.9324%" height="15" fill="rgb(235,138,27)" fg:x="206" fg:w="12"/><text x="33.4223%" y="431.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 1.77%)</title><rect x="33.3333%" y="405" width="1.7713%" height="15" fill="rgb(236,97,51)" fg:x="207" fg:w="11"/><text x="33.5833%" y="415.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 1.77%)</title><rect x="33.3333%" y="389" width="1.7713%" height="15" fill="rgb(240,80,30)" fg:x="207" fg:w="11"/><text x="33.5833%" y="399.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 1.77%)</title><rect x="33.3333%" y="373" width="1.7713%" height="15" fill="rgb(230,178,19)" fg:x="207" fg:w="11"/><text x="33.5833%" y="383.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 1.29%)</title><rect x="33.8164%" y="357" width="1.2882%" height="15" fill="rgb(210,190,27)" fg:x="210" fg:w="8"/><text x="34.0664%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 1.29%)</title><rect x="33.8164%" y="341" width="1.2882%" height="15" fill="rgb(222,107,31)" fg:x="210" fg:w="8"/><text x="34.0664%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 1.29%)</title><rect x="33.8164%" y="325" width="1.2882%" height="15" fill="rgb(216,127,34)" fg:x="210" fg:w="8"/><text x="34.0664%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.81%)</title><rect x="34.2995%" y="309" width="0.8052%" height="15" fill="rgb(234,116,52)" fg:x="213" fg:w="5"/><text x="34.5495%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.64%)</title><rect x="34.4605%" y="293" width="0.6441%" height="15" fill="rgb(222,124,15)" fg:x="214" fg:w="4"/><text x="34.7105%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.64%)</title><rect x="34.4605%" y="277" width="0.6441%" height="15" fill="rgb(231,179,28)" fg:x="214" fg:w="4"/><text x="34.7105%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (4 samples, 0.64%)</title><rect x="34.4605%" y="261" width="0.6441%" height="15" fill="rgb(226,93,45)" fg:x="214" fg:w="4"/><text x="34.7105%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (4 samples, 0.64%)</title><rect x="34.4605%" y="245" width="0.6441%" height="15" fill="rgb(215,8,51)" fg:x="214" fg:w="4"/><text x="34.7105%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (4 samples, 0.64%)</title><rect x="34.4605%" y="229" width="0.6441%" height="15" fill="rgb(223,106,5)" fg:x="214" fg:w="4"/><text x="34.7105%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="35.1047%" y="437" width="0.1610%" height="15" fill="rgb(250,191,5)" fg:x="218" fg:w="1"/><text x="35.3547%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="35.1047%" y="421" width="0.1610%" height="15" fill="rgb(242,132,44)" fg:x="218" fg:w="1"/><text x="35.3547%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="35.1047%" y="405" width="0.1610%" height="15" fill="rgb(251,152,29)" fg:x="218" fg:w="1"/><text x="35.3547%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="35.1047%" y="389" width="0.1610%" height="15" fill="rgb(218,179,5)" fg:x="218" fg:w="1"/><text x="35.3547%" y="399.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::grad_for_id (2 samples, 0.32%)</title><rect x="35.1047%" y="469" width="0.3221%" height="15" fill="rgb(227,67,19)" fg:x="218" fg:w="2"/><text x="35.3547%" y="479.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (2 samples, 0.32%)</title><rect x="35.1047%" y="453" width="0.3221%" height="15" fill="rgb(233,119,31)" fg:x="218" fg:w="2"/><text x="35.3547%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.16%)</title><rect x="35.2657%" y="437" width="0.1610%" height="15" fill="rgb(241,120,22)" fg:x="219" fg:w="1"/><text x="35.5157%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.16%)</title><rect x="35.2657%" y="421" width="0.1610%" height="15" fill="rgb(224,102,30)" fg:x="219" fg:w="1"/><text x="35.5157%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.16%)</title><rect x="35.2657%" y="405" width="0.1610%" height="15" fill="rgb(210,164,37)" fg:x="219" fg:w="1"/><text x="35.5157%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.16%)</title><rect x="35.2657%" y="389" width="0.1610%" height="15" fill="rgb(226,191,16)" fg:x="219" fg:w="1"/><text x="35.5157%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="35.2657%" y="373" width="0.1610%" height="15" fill="rgb(214,40,45)" fg:x="219" fg:w="1"/><text x="35.5157%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="35.2657%" y="357" width="0.1610%" height="15" fill="rgb(244,29,26)" fg:x="219" fg:w="1"/><text x="35.5157%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="35.2657%" y="341" width="0.1610%" height="15" fill="rgb(216,16,5)" fg:x="219" fg:w="1"/><text x="35.5157%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="35.2657%" y="325" width="0.1610%" height="15" fill="rgb(249,76,35)" fg:x="219" fg:w="1"/><text x="35.5157%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="35.2657%" y="309" width="0.1610%" height="15" fill="rgb(207,11,44)" fg:x="219" fg:w="1"/><text x="35.5157%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="35.2657%" y="293" width="0.1610%" height="15" fill="rgb(228,190,49)" fg:x="219" fg:w="1"/><text x="35.5157%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="35.2657%" y="277" width="0.1610%" height="15" fill="rgb(214,173,12)" fg:x="219" fg:w="1"/><text x="35.5157%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="35.4267%" y="405" width="0.1610%" height="15" fill="rgb(218,26,35)" fg:x="220" fg:w="1"/><text x="35.6767%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="35.4267%" y="389" width="0.1610%" height="15" fill="rgb(220,200,19)" fg:x="220" fg:w="1"/><text x="35.6767%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="35.4267%" y="373" width="0.1610%" height="15" fill="rgb(239,95,49)" fg:x="220" fg:w="1"/><text x="35.6767%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="35.5878%" y="389" width="0.1610%" height="15" fill="rgb(235,85,53)" fg:x="221" fg:w="1"/><text x="35.8378%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="35.5878%" y="373" width="0.1610%" height="15" fill="rgb(233,133,31)" fg:x="221" fg:w="1"/><text x="35.8378%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="35.5878%" y="357" width="0.1610%" height="15" fill="rgb(218,25,20)" fg:x="221" fg:w="1"/><text x="35.8378%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="35.5878%" y="341" width="0.1610%" height="15" fill="rgb(252,210,38)" fg:x="221" fg:w="1"/><text x="35.8378%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="35.5878%" y="325" width="0.1610%" height="15" fill="rgb(242,134,21)" fg:x="221" fg:w="1"/><text x="35.8378%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="35.5878%" y="309" width="0.1610%" height="15" fill="rgb(213,28,48)" fg:x="221" fg:w="1"/><text x="35.8378%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.16%)</title><rect x="35.5878%" y="293" width="0.1610%" height="15" fill="rgb(250,196,2)" fg:x="221" fg:w="1"/><text x="35.8378%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="35.5878%" y="277" width="0.1610%" height="15" fill="rgb(227,5,17)" fg:x="221" fg:w="1"/><text x="35.8378%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="35.5878%" y="261" width="0.1610%" height="15" fill="rgb(221,226,24)" fg:x="221" fg:w="1"/><text x="35.8378%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="35.5878%" y="245" width="0.1610%" height="15" fill="rgb(211,5,48)" fg:x="221" fg:w="1"/><text x="35.8378%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="35.7488%" y="341" width="0.4831%" height="15" fill="rgb(219,150,6)" fg:x="222" fg:w="3"/><text x="35.9988%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="35.7488%" y="325" width="0.4831%" height="15" fill="rgb(251,46,16)" fg:x="222" fg:w="3"/><text x="35.9988%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="35.7488%" y="309" width="0.4831%" height="15" fill="rgb(220,204,40)" fg:x="222" fg:w="3"/><text x="35.9988%" y="319.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.16%)</title><rect x="36.2319%" y="341" width="0.1610%" height="15" fill="rgb(211,85,2)" fg:x="225" fg:w="1"/><text x="36.4819%" y="351.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.16%)</title><rect x="36.2319%" y="325" width="0.1610%" height="15" fill="rgb(229,17,7)" fg:x="225" fg:w="1"/><text x="36.4819%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="36.2319%" y="309" width="0.1610%" height="15" fill="rgb(239,72,28)" fg:x="225" fg:w="1"/><text x="36.4819%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="36.2319%" y="293" width="0.1610%" height="15" fill="rgb(230,47,54)" fg:x="225" fg:w="1"/><text x="36.4819%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="36.2319%" y="277" width="0.1610%" height="15" fill="rgb(214,50,8)" fg:x="225" fg:w="1"/><text x="36.4819%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="36.3929%" y="341" width="0.1610%" height="15" fill="rgb(216,198,43)" fg:x="226" fg:w="1"/><text x="36.6429%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.16%)</title><rect x="36.3929%" y="325" width="0.1610%" height="15" fill="rgb(234,20,35)" fg:x="226" fg:w="1"/><text x="36.6429%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="36.3929%" y="309" width="0.1610%" height="15" fill="rgb(254,45,19)" fg:x="226" fg:w="1"/><text x="36.6429%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="36.3929%" y="293" width="0.1610%" height="15" fill="rgb(219,14,44)" fg:x="226" fg:w="1"/><text x="36.6429%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="36.3929%" y="277" width="0.1610%" height="15" fill="rgb(217,220,26)" fg:x="226" fg:w="1"/><text x="36.6429%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="36.3929%" y="261" width="0.1610%" height="15" fill="rgb(213,158,28)" fg:x="226" fg:w="1"/><text x="36.6429%" y="271.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (9 samples, 1.45%)</title><rect x="35.4267%" y="469" width="1.4493%" height="15" fill="rgb(252,51,52)" fg:x="220" fg:w="9"/><text x="35.6767%" y="479.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (9 samples, 1.45%)</title><rect x="35.4267%" y="453" width="1.4493%" height="15" fill="rgb(246,89,16)" fg:x="220" fg:w="9"/><text x="35.6767%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 1.45%)</title><rect x="35.4267%" y="437" width="1.4493%" height="15" fill="rgb(216,158,49)" fg:x="220" fg:w="9"/><text x="35.6767%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 1.45%)</title><rect x="35.4267%" y="421" width="1.4493%" height="15" fill="rgb(236,107,19)" fg:x="220" fg:w="9"/><text x="35.6767%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 1.29%)</title><rect x="35.5878%" y="405" width="1.2882%" height="15" fill="rgb(228,185,30)" fg:x="221" fg:w="8"/><text x="35.8378%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 1.13%)</title><rect x="35.7488%" y="389" width="1.1272%" height="15" fill="rgb(246,134,8)" fg:x="222" fg:w="7"/><text x="35.9988%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 1.13%)</title><rect x="35.7488%" y="373" width="1.1272%" height="15" fill="rgb(214,143,50)" fg:x="222" fg:w="7"/><text x="35.9988%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 1.13%)</title><rect x="35.7488%" y="357" width="1.1272%" height="15" fill="rgb(228,75,8)" fg:x="222" fg:w="7"/><text x="35.9988%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="36.5539%" y="341" width="0.3221%" height="15" fill="rgb(207,175,4)" fg:x="227" fg:w="2"/><text x="36.8039%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="36.5539%" y="325" width="0.3221%" height="15" fill="rgb(205,108,24)" fg:x="227" fg:w="2"/><text x="36.8039%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="36.5539%" y="309" width="0.3221%" height="15" fill="rgb(244,120,49)" fg:x="227" fg:w="2"/><text x="36.8039%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="36.5539%" y="293" width="0.3221%" height="15" fill="rgb(223,47,38)" fg:x="227" fg:w="2"/><text x="36.8039%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="36.8760%" y="341" width="0.1610%" height="15" fill="rgb(229,179,11)" fg:x="229" fg:w="1"/><text x="37.1260%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="36.8760%" y="325" width="0.1610%" height="15" fill="rgb(231,122,1)" fg:x="229" fg:w="1"/><text x="37.1260%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="36.8760%" y="309" width="0.1610%" height="15" fill="rgb(245,119,9)" fg:x="229" fg:w="1"/><text x="37.1260%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="36.8760%" y="293" width="0.1610%" height="15" fill="rgb(241,163,25)" fg:x="229" fg:w="1"/><text x="37.1260%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="37.0370%" y="341" width="0.1610%" height="15" fill="rgb(217,214,3)" fg:x="230" fg:w="1"/><text x="37.2870%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="37.0370%" y="325" width="0.1610%" height="15" fill="rgb(240,86,28)" fg:x="230" fg:w="1"/><text x="37.2870%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="37.0370%" y="309" width="0.1610%" height="15" fill="rgb(215,47,9)" fg:x="230" fg:w="1"/><text x="37.2870%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="37.0370%" y="293" width="0.1610%" height="15" fill="rgb(252,25,45)" fg:x="230" fg:w="1"/><text x="37.2870%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="36.8760%" y="389" width="0.4831%" height="15" fill="rgb(251,164,9)" fg:x="229" fg:w="3"/><text x="37.1260%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="36.8760%" y="373" width="0.4831%" height="15" fill="rgb(233,194,0)" fg:x="229" fg:w="3"/><text x="37.1260%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="36.8760%" y="357" width="0.4831%" height="15" fill="rgb(249,111,24)" fg:x="229" fg:w="3"/><text x="37.1260%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="37.1981%" y="341" width="0.1610%" height="15" fill="rgb(250,223,3)" fg:x="231" fg:w="1"/><text x="37.4481%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="37.1981%" y="325" width="0.1610%" height="15" fill="rgb(236,178,37)" fg:x="231" fg:w="1"/><text x="37.4481%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="37.1981%" y="309" width="0.1610%" height="15" fill="rgb(241,158,50)" fg:x="231" fg:w="1"/><text x="37.4481%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.32%)</title><rect x="37.3591%" y="389" width="0.3221%" height="15" fill="rgb(213,121,41)" fg:x="232" fg:w="2"/><text x="37.6091%" y="399.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.32%)</title><rect x="37.3591%" y="373" width="0.3221%" height="15" fill="rgb(240,92,3)" fg:x="232" fg:w="2"/><text x="37.6091%" y="383.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.32%)</title><rect x="37.3591%" y="357" width="0.3221%" height="15" fill="rgb(205,123,3)" fg:x="232" fg:w="2"/><text x="37.6091%" y="367.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.32%)</title><rect x="37.3591%" y="341" width="0.3221%" height="15" fill="rgb(205,97,47)" fg:x="232" fg:w="2"/><text x="37.6091%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="37.3591%" y="325" width="0.3221%" height="15" fill="rgb(247,152,14)" fg:x="232" fg:w="2"/><text x="37.6091%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="37.3591%" y="309" width="0.3221%" height="15" fill="rgb(248,195,53)" fg:x="232" fg:w="2"/><text x="37.6091%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="37.3591%" y="293" width="0.3221%" height="15" fill="rgb(226,201,16)" fg:x="232" fg:w="2"/><text x="37.6091%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="37.6812%" y="325" width="0.1610%" height="15" fill="rgb(205,98,0)" fg:x="234" fg:w="1"/><text x="37.9312%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="37.6812%" y="309" width="0.1610%" height="15" fill="rgb(214,191,48)" fg:x="234" fg:w="1"/><text x="37.9312%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="37.6812%" y="293" width="0.1610%" height="15" fill="rgb(237,112,39)" fg:x="234" fg:w="1"/><text x="37.9312%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="37.8422%" y="277" width="0.1610%" height="15" fill="rgb(247,203,27)" fg:x="235" fg:w="1"/><text x="38.0922%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="37.8422%" y="261" width="0.1610%" height="15" fill="rgb(235,124,28)" fg:x="235" fg:w="1"/><text x="38.0922%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="37.8422%" y="245" width="0.1610%" height="15" fill="rgb(208,207,46)" fg:x="235" fg:w="1"/><text x="38.0922%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="37.8422%" y="229" width="0.1610%" height="15" fill="rgb(234,176,4)" fg:x="235" fg:w="1"/><text x="38.0922%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 1.45%)</title><rect x="36.8760%" y="421" width="1.4493%" height="15" fill="rgb(230,133,28)" fg:x="229" fg:w="9"/><text x="37.1260%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 1.45%)</title><rect x="36.8760%" y="405" width="1.4493%" height="15" fill="rgb(211,137,40)" fg:x="229" fg:w="9"/><text x="37.1260%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.64%)</title><rect x="37.6812%" y="389" width="0.6441%" height="15" fill="rgb(254,35,13)" fg:x="234" fg:w="4"/><text x="37.9312%" y="399.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (4 samples, 0.64%)</title><rect x="37.6812%" y="373" width="0.6441%" height="15" fill="rgb(225,49,51)" fg:x="234" fg:w="4"/><text x="37.9312%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.64%)</title><rect x="37.6812%" y="357" width="0.6441%" height="15" fill="rgb(251,10,15)" fg:x="234" fg:w="4"/><text x="37.9312%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.64%)</title><rect x="37.6812%" y="341" width="0.6441%" height="15" fill="rgb(228,207,15)" fg:x="234" fg:w="4"/><text x="37.9312%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.48%)</title><rect x="37.8422%" y="325" width="0.4831%" height="15" fill="rgb(241,99,19)" fg:x="235" fg:w="3"/><text x="38.0922%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.48%)</title><rect x="37.8422%" y="309" width="0.4831%" height="15" fill="rgb(207,104,49)" fg:x="235" fg:w="3"/><text x="38.0922%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.48%)</title><rect x="37.8422%" y="293" width="0.4831%" height="15" fill="rgb(234,99,18)" fg:x="235" fg:w="3"/><text x="38.0922%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="38.0032%" y="277" width="0.3221%" height="15" fill="rgb(213,191,49)" fg:x="236" fg:w="2"/><text x="38.2532%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="38.0032%" y="261" width="0.3221%" height="15" fill="rgb(210,226,19)" fg:x="236" fg:w="2"/><text x="38.2532%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="38.0032%" y="245" width="0.3221%" height="15" fill="rgb(229,97,18)" fg:x="236" fg:w="2"/><text x="38.2532%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="38.3253%" y="389" width="0.1610%" height="15" fill="rgb(211,167,15)" fg:x="238" fg:w="1"/><text x="38.5753%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="38.3253%" y="373" width="0.1610%" height="15" fill="rgb(210,169,34)" fg:x="238" fg:w="1"/><text x="38.5753%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="38.3253%" y="357" width="0.1610%" height="15" fill="rgb(241,121,31)" fg:x="238" fg:w="1"/><text x="38.5753%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="38.4863%" y="373" width="0.1610%" height="15" fill="rgb(232,40,11)" fg:x="239" fg:w="1"/><text x="38.7363%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.16%)</title><rect x="38.4863%" y="357" width="0.1610%" height="15" fill="rgb(205,86,26)" fg:x="239" fg:w="1"/><text x="38.7363%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.16%)</title><rect x="38.4863%" y="341" width="0.1610%" height="15" fill="rgb(231,126,28)" fg:x="239" fg:w="1"/><text x="38.7363%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="38.4863%" y="325" width="0.1610%" height="15" fill="rgb(219,221,18)" fg:x="239" fg:w="1"/><text x="38.7363%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="38.4863%" y="309" width="0.1610%" height="15" fill="rgb(211,40,0)" fg:x="239" fg:w="1"/><text x="38.7363%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="38.4863%" y="293" width="0.1610%" height="15" fill="rgb(239,85,43)" fg:x="239" fg:w="1"/><text x="38.7363%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="38.6473%" y="373" width="0.1610%" height="15" fill="rgb(231,55,21)" fg:x="240" fg:w="1"/><text x="38.8973%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="38.6473%" y="357" width="0.1610%" height="15" fill="rgb(225,184,43)" fg:x="240" fg:w="1"/><text x="38.8973%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="38.6473%" y="341" width="0.1610%" height="15" fill="rgb(251,158,41)" fg:x="240" fg:w="1"/><text x="38.8973%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="38.6473%" y="325" width="0.1610%" height="15" fill="rgb(234,159,37)" fg:x="240" fg:w="1"/><text x="38.8973%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="38.6473%" y="309" width="0.1610%" height="15" fill="rgb(216,204,22)" fg:x="240" fg:w="1"/><text x="38.8973%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="38.8084%" y="357" width="0.1610%" height="15" fill="rgb(214,17,3)" fg:x="241" fg:w="1"/><text x="39.0584%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="38.8084%" y="341" width="0.1610%" height="15" fill="rgb(212,111,17)" fg:x="241" fg:w="1"/><text x="39.0584%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="38.8084%" y="325" width="0.1610%" height="15" fill="rgb(221,157,24)" fg:x="241" fg:w="1"/><text x="39.0584%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="38.8084%" y="309" width="0.1610%" height="15" fill="rgb(252,16,13)" fg:x="241" fg:w="1"/><text x="39.0584%" y="319.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards (206 samples, 33.17%)</title><rect x="6.2802%" y="485" width="33.1723%" height="15" fill="rgb(221,62,2)" fg:x="39" fg:w="206"/><text x="6.5302%" y="495.50">micrograd_rs::engine::RunnableGraph::_backwards</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16 samples, 2.58%)</title><rect x="36.8760%" y="469" width="2.5765%" height="15" fill="rgb(247,87,22)" fg:x="229" fg:w="16"/><text x="37.1260%" y="479.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16 samples, 2.58%)</title><rect x="36.8760%" y="453" width="2.5765%" height="15" fill="rgb(215,73,9)" fg:x="229" fg:w="16"/><text x="37.1260%" y="463.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 2.58%)</title><rect x="36.8760%" y="437" width="2.5765%" height="15" fill="rgb(207,175,33)" fg:x="229" fg:w="16"/><text x="37.1260%" y="447.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 1.13%)</title><rect x="38.3253%" y="421" width="1.1272%" height="15" fill="rgb(243,129,54)" fg:x="238" fg:w="7"/><text x="38.5753%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 1.13%)</title><rect x="38.3253%" y="405" width="1.1272%" height="15" fill="rgb(227,119,45)" fg:x="238" fg:w="7"/><text x="38.5753%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.97%)</title><rect x="38.4863%" y="389" width="0.9662%" height="15" fill="rgb(205,109,36)" fg:x="239" fg:w="6"/><text x="38.7363%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.64%)</title><rect x="38.8084%" y="373" width="0.6441%" height="15" fill="rgb(205,6,39)" fg:x="241" fg:w="4"/><text x="39.0584%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.48%)</title><rect x="38.9694%" y="357" width="0.4831%" height="15" fill="rgb(221,32,16)" fg:x="242" fg:w="3"/><text x="39.2194%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.48%)</title><rect x="38.9694%" y="341" width="0.4831%" height="15" fill="rgb(228,144,50)" fg:x="242" fg:w="3"/><text x="39.2194%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="38.9694%" y="325" width="0.4831%" height="15" fill="rgb(229,201,53)" fg:x="242" fg:w="3"/><text x="39.2194%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="38.9694%" y="309" width="0.4831%" height="15" fill="rgb(249,153,27)" fg:x="242" fg:w="3"/><text x="39.2194%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="38.9694%" y="293" width="0.4831%" height="15" fill="rgb(227,106,25)" fg:x="242" fg:w="3"/><text x="39.2194%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="39.4525%" y="325" width="0.1610%" height="15" fill="rgb(230,65,29)" fg:x="245" fg:w="1"/><text x="39.7025%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="39.4525%" y="309" width="0.1610%" height="15" fill="rgb(221,57,46)" fg:x="245" fg:w="1"/><text x="39.7025%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="39.4525%" y="293" width="0.1610%" height="15" fill="rgb(229,161,17)" fg:x="245" fg:w="1"/><text x="39.7025%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="39.4525%" y="277" width="0.1610%" height="15" fill="rgb(222,213,11)" fg:x="245" fg:w="1"/><text x="39.7025%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="39.6135%" y="325" width="0.3221%" height="15" fill="rgb(235,35,13)" fg:x="246" fg:w="2"/><text x="39.8635%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="39.6135%" y="309" width="0.3221%" height="15" fill="rgb(233,158,34)" fg:x="246" fg:w="2"/><text x="39.8635%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="39.6135%" y="293" width="0.3221%" height="15" fill="rgb(215,151,48)" fg:x="246" fg:w="2"/><text x="39.8635%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="39.6135%" y="277" width="0.3221%" height="15" fill="rgb(229,84,14)" fg:x="246" fg:w="2"/><text x="39.8635%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="39.4525%" y="373" width="0.6441%" height="15" fill="rgb(229,68,14)" fg:x="245" fg:w="4"/><text x="39.7025%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="39.4525%" y="357" width="0.6441%" height="15" fill="rgb(243,106,26)" fg:x="245" fg:w="4"/><text x="39.7025%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="39.4525%" y="341" width="0.6441%" height="15" fill="rgb(206,45,38)" fg:x="245" fg:w="4"/><text x="39.7025%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="39.9356%" y="325" width="0.1610%" height="15" fill="rgb(226,6,15)" fg:x="248" fg:w="1"/><text x="40.1856%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="39.9356%" y="309" width="0.1610%" height="15" fill="rgb(232,22,54)" fg:x="248" fg:w="1"/><text x="40.1856%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="39.9356%" y="293" width="0.1610%" height="15" fill="rgb(229,222,32)" fg:x="248" fg:w="1"/><text x="40.1856%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.81%)</title><rect x="39.4525%" y="405" width="0.8052%" height="15" fill="rgb(228,62,29)" fg:x="245" fg:w="5"/><text x="39.7025%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.81%)</title><rect x="39.4525%" y="389" width="0.8052%" height="15" fill="rgb(251,103,34)" fg:x="245" fg:w="5"/><text x="39.7025%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="40.0966%" y="373" width="0.1610%" height="15" fill="rgb(233,12,30)" fg:x="249" fg:w="1"/><text x="40.3466%" y="383.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="40.0966%" y="357" width="0.1610%" height="15" fill="rgb(238,52,0)" fg:x="249" fg:w="1"/><text x="40.3466%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="40.0966%" y="341" width="0.1610%" height="15" fill="rgb(223,98,5)" fg:x="249" fg:w="1"/><text x="40.3466%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="40.0966%" y="325" width="0.1610%" height="15" fill="rgb(228,75,37)" fg:x="249" fg:w="1"/><text x="40.3466%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="40.0966%" y="309" width="0.1610%" height="15" fill="rgb(205,115,49)" fg:x="249" fg:w="1"/><text x="40.3466%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="40.0966%" y="293" width="0.1610%" height="15" fill="rgb(250,154,43)" fg:x="249" fg:w="1"/><text x="40.3466%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="40.0966%" y="277" width="0.1610%" height="15" fill="rgb(226,43,29)" fg:x="249" fg:w="1"/><text x="40.3466%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.16%)</title><rect x="40.0966%" y="261" width="0.1610%" height="15" fill="rgb(249,228,39)" fg:x="249" fg:w="1"/><text x="40.3466%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.16%)</title><rect x="40.0966%" y="245" width="0.1610%" height="15" fill="rgb(216,79,43)" fg:x="249" fg:w="1"/><text x="40.3466%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="40.0966%" y="229" width="0.1610%" height="15" fill="rgb(228,95,12)" fg:x="249" fg:w="1"/><text x="40.3466%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="40.0966%" y="213" width="0.1610%" height="15" fill="rgb(249,221,15)" fg:x="249" fg:w="1"/><text x="40.3466%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="40.0966%" y="197" width="0.1610%" height="15" fill="rgb(233,34,13)" fg:x="249" fg:w="1"/><text x="40.3466%" y="207.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="40.2576%" y="357" width="0.3221%" height="15" fill="rgb(214,103,39)" fg:x="250" fg:w="2"/><text x="40.5076%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="40.2576%" y="341" width="0.3221%" height="15" fill="rgb(251,126,39)" fg:x="250" fg:w="2"/><text x="40.5076%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="40.2576%" y="325" width="0.3221%" height="15" fill="rgb(214,216,36)" fg:x="250" fg:w="2"/><text x="40.5076%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="40.5797%" y="357" width="0.1610%" height="15" fill="rgb(220,221,8)" fg:x="252" fg:w="1"/><text x="40.8297%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="40.5797%" y="341" width="0.1610%" height="15" fill="rgb(240,216,3)" fg:x="252" fg:w="1"/><text x="40.8297%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.16%)</title><rect x="40.5797%" y="325" width="0.1610%" height="15" fill="rgb(232,218,17)" fg:x="252" fg:w="1"/><text x="40.8297%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.16%)</title><rect x="40.5797%" y="309" width="0.1610%" height="15" fill="rgb(229,163,45)" fg:x="252" fg:w="1"/><text x="40.8297%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="40.5797%" y="293" width="0.1610%" height="15" fill="rgb(231,110,42)" fg:x="252" fg:w="1"/><text x="40.8297%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="40.5797%" y="277" width="0.1610%" height="15" fill="rgb(208,170,48)" fg:x="252" fg:w="1"/><text x="40.8297%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="40.5797%" y="261" width="0.1610%" height="15" fill="rgb(239,116,25)" fg:x="252" fg:w="1"/><text x="40.8297%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="40.5797%" y="245" width="0.1610%" height="15" fill="rgb(219,200,50)" fg:x="252" fg:w="1"/><text x="40.8297%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.32%)</title><rect x="40.7407%" y="341" width="0.3221%" height="15" fill="rgb(245,200,0)" fg:x="253" fg:w="2"/><text x="40.9907%" y="351.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (2 samples, 0.32%)</title><rect x="40.7407%" y="325" width="0.3221%" height="15" fill="rgb(245,119,33)" fg:x="253" fg:w="2"/><text x="40.9907%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="40.7407%" y="309" width="0.3221%" height="15" fill="rgb(231,125,12)" fg:x="253" fg:w="2"/><text x="40.9907%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="40.7407%" y="293" width="0.3221%" height="15" fill="rgb(216,96,41)" fg:x="253" fg:w="2"/><text x="40.9907%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="40.7407%" y="277" width="0.3221%" height="15" fill="rgb(248,43,45)" fg:x="253" fg:w="2"/><text x="40.9907%" y="287.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update (12 samples, 1.93%)</title><rect x="39.4525%" y="485" width="1.9324%" height="15" fill="rgb(217,222,7)" fg:x="245" fg:w="12"/><text x="39.7025%" y="495.50">m..</text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id_mut (12 samples, 1.93%)</title><rect x="39.4525%" y="469" width="1.9324%" height="15" fill="rgb(233,28,6)" fg:x="245" fg:w="12"/><text x="39.7025%" y="479.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (12 samples, 1.93%)</title><rect x="39.4525%" y="453" width="1.9324%" height="15" fill="rgb(231,218,15)" fg:x="245" fg:w="12"/><text x="39.7025%" y="463.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (12 samples, 1.93%)</title><rect x="39.4525%" y="437" width="1.9324%" height="15" fill="rgb(226,171,48)" fg:x="245" fg:w="12"/><text x="39.7025%" y="447.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (12 samples, 1.93%)</title><rect x="39.4525%" y="421" width="1.9324%" height="15" fill="rgb(235,201,9)" fg:x="245" fg:w="12"/><text x="39.7025%" y="431.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 1.13%)</title><rect x="40.2576%" y="405" width="1.1272%" height="15" fill="rgb(217,80,15)" fg:x="250" fg:w="7"/><text x="40.5076%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 1.13%)</title><rect x="40.2576%" y="389" width="1.1272%" height="15" fill="rgb(219,152,8)" fg:x="250" fg:w="7"/><text x="40.5076%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 1.13%)</title><rect x="40.2576%" y="373" width="1.1272%" height="15" fill="rgb(243,107,38)" fg:x="250" fg:w="7"/><text x="40.5076%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.64%)</title><rect x="40.7407%" y="357" width="0.6441%" height="15" fill="rgb(231,17,5)" fg:x="253" fg:w="4"/><text x="40.9907%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.32%)</title><rect x="41.0628%" y="341" width="0.3221%" height="15" fill="rgb(209,25,54)" fg:x="255" fg:w="2"/><text x="41.3128%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.32%)</title><rect x="41.0628%" y="325" width="0.3221%" height="15" fill="rgb(219,0,2)" fg:x="255" fg:w="2"/><text x="41.3128%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="41.0628%" y="309" width="0.3221%" height="15" fill="rgb(246,9,5)" fg:x="255" fg:w="2"/><text x="41.3128%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="41.0628%" y="293" width="0.3221%" height="15" fill="rgb(226,159,4)" fg:x="255" fg:w="2"/><text x="41.3128%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="41.0628%" y="277" width="0.3221%" height="15" fill="rgb(219,175,34)" fg:x="255" fg:w="2"/><text x="41.3128%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="41.3849%" y="373" width="0.1610%" height="15" fill="rgb(236,10,46)" fg:x="257" fg:w="1"/><text x="41.6349%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="41.3849%" y="357" width="0.1610%" height="15" fill="rgb(240,211,16)" fg:x="257" fg:w="1"/><text x="41.6349%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="41.3849%" y="341" width="0.1610%" height="15" fill="rgb(205,3,43)" fg:x="257" fg:w="1"/><text x="41.6349%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="41.3849%" y="325" width="0.1610%" height="15" fill="rgb(245,7,22)" fg:x="257" fg:w="1"/><text x="41.6349%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="41.3849%" y="309" width="0.1610%" height="15" fill="rgb(239,132,32)" fg:x="257" fg:w="1"/><text x="41.6349%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="41.3849%" y="293" width="0.1610%" height="15" fill="rgb(228,202,34)" fg:x="257" fg:w="1"/><text x="41.6349%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="41.3849%" y="405" width="0.3221%" height="15" fill="rgb(254,200,22)" fg:x="257" fg:w="2"/><text x="41.6349%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="41.3849%" y="389" width="0.3221%" height="15" fill="rgb(219,10,39)" fg:x="257" fg:w="2"/><text x="41.6349%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="41.5459%" y="373" width="0.1610%" height="15" fill="rgb(226,210,39)" fg:x="258" fg:w="1"/><text x="41.7959%" y="383.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="41.5459%" y="357" width="0.1610%" height="15" fill="rgb(208,219,16)" fg:x="258" fg:w="1"/><text x="41.7959%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="41.5459%" y="341" width="0.1610%" height="15" fill="rgb(216,158,51)" fg:x="258" fg:w="1"/><text x="41.7959%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="41.5459%" y="325" width="0.1610%" height="15" fill="rgb(233,14,44)" fg:x="258" fg:w="1"/><text x="41.7959%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="41.5459%" y="309" width="0.1610%" height="15" fill="rgb(237,97,39)" fg:x="258" fg:w="1"/><text x="41.7959%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="41.5459%" y="293" width="0.1610%" height="15" fill="rgb(218,198,43)" fg:x="258" fg:w="1"/><text x="41.7959%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="41.5459%" y="277" width="0.1610%" height="15" fill="rgb(231,104,20)" fg:x="258" fg:w="1"/><text x="41.7959%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="41.5459%" y="261" width="0.1610%" height="15" fill="rgb(254,36,13)" fg:x="258" fg:w="1"/><text x="41.7959%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.16%)</title><rect x="41.5459%" y="245" width="0.1610%" height="15" fill="rgb(248,14,50)" fg:x="258" fg:w="1"/><text x="41.7959%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="41.5459%" y="229" width="0.1610%" height="15" fill="rgb(217,107,29)" fg:x="258" fg:w="1"/><text x="41.7959%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="41.5459%" y="213" width="0.1610%" height="15" fill="rgb(251,169,33)" fg:x="258" fg:w="1"/><text x="41.7959%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="41.5459%" y="197" width="0.1610%" height="15" fill="rgb(217,108,32)" fg:x="258" fg:w="1"/><text x="41.7959%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="41.7069%" y="357" width="0.1610%" height="15" fill="rgb(219,66,42)" fg:x="259" fg:w="1"/><text x="41.9569%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="41.7069%" y="341" width="0.1610%" height="15" fill="rgb(206,180,7)" fg:x="259" fg:w="1"/><text x="41.9569%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="41.7069%" y="325" width="0.1610%" height="15" fill="rgb(208,226,31)" fg:x="259" fg:w="1"/><text x="41.9569%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="41.7069%" y="309" width="0.1610%" height="15" fill="rgb(218,26,49)" fg:x="259" fg:w="1"/><text x="41.9569%" y="319.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.16%)</title><rect x="41.8680%" y="357" width="0.1610%" height="15" fill="rgb(233,197,48)" fg:x="260" fg:w="1"/><text x="42.1180%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="41.8680%" y="341" width="0.1610%" height="15" fill="rgb(252,181,51)" fg:x="260" fg:w="1"/><text x="42.1180%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="41.8680%" y="325" width="0.1610%" height="15" fill="rgb(253,90,19)" fg:x="260" fg:w="1"/><text x="42.1180%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="41.8680%" y="309" width="0.1610%" height="15" fill="rgb(215,171,30)" fg:x="260" fg:w="1"/><text x="42.1180%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (228 samples, 36.71%)</title><rect x="6.1192%" y="517" width="36.7150%" height="15" fill="rgb(214,222,9)" fg:x="38" fg:w="228"/><text x="6.3692%" y="527.50">core::option::Option&lt;T&gt;::map</text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards::{{closure}} (227 samples, 36.55%)</title><rect x="6.2802%" y="501" width="36.5539%" height="15" fill="rgb(223,3,22)" fg:x="39" fg:w="227"/><text x="6.5302%" y="511.50">micrograd_rs::engine::RunnableGraph::_backwards::{{closure}}</text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (9 samples, 1.45%)</title><rect x="41.3849%" y="485" width="1.4493%" height="15" fill="rgb(225,196,46)" fg:x="257" fg:w="9"/><text x="41.6349%" y="495.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (9 samples, 1.45%)</title><rect x="41.3849%" y="469" width="1.4493%" height="15" fill="rgb(209,110,37)" fg:x="257" fg:w="9"/><text x="41.6349%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 1.45%)</title><rect x="41.3849%" y="453" width="1.4493%" height="15" fill="rgb(249,89,12)" fg:x="257" fg:w="9"/><text x="41.6349%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 1.45%)</title><rect x="41.3849%" y="437" width="1.4493%" height="15" fill="rgb(226,27,33)" fg:x="257" fg:w="9"/><text x="41.6349%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 1.45%)</title><rect x="41.3849%" y="421" width="1.4493%" height="15" fill="rgb(213,82,22)" fg:x="257" fg:w="9"/><text x="41.6349%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 1.13%)</title><rect x="41.7069%" y="405" width="1.1272%" height="15" fill="rgb(248,140,0)" fg:x="259" fg:w="7"/><text x="41.9569%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 1.13%)</title><rect x="41.7069%" y="389" width="1.1272%" height="15" fill="rgb(228,106,3)" fg:x="259" fg:w="7"/><text x="41.9569%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 1.13%)</title><rect x="41.7069%" y="373" width="1.1272%" height="15" fill="rgb(209,23,37)" fg:x="259" fg:w="7"/><text x="41.9569%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.81%)</title><rect x="42.0290%" y="357" width="0.8052%" height="15" fill="rgb(241,93,50)" fg:x="261" fg:w="5"/><text x="42.2790%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.81%)</title><rect x="42.0290%" y="341" width="0.8052%" height="15" fill="rgb(253,46,43)" fg:x="261" fg:w="5"/><text x="42.2790%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.81%)</title><rect x="42.0290%" y="325" width="0.8052%" height="15" fill="rgb(226,206,43)" fg:x="261" fg:w="5"/><text x="42.2790%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (5 samples, 0.81%)</title><rect x="42.0290%" y="309" width="0.8052%" height="15" fill="rgb(217,54,7)" fg:x="261" fg:w="5"/><text x="42.2790%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (5 samples, 0.81%)</title><rect x="42.0290%" y="293" width="0.8052%" height="15" fill="rgb(223,5,52)" fg:x="261" fg:w="5"/><text x="42.2790%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (5 samples, 0.81%)</title><rect x="42.0290%" y="277" width="0.8052%" height="15" fill="rgb(206,52,46)" fg:x="261" fg:w="5"/><text x="42.2790%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="42.8341%" y="501" width="0.1610%" height="15" fill="rgb(253,136,11)" fg:x="266" fg:w="1"/><text x="43.0841%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="42.8341%" y="485" width="0.1610%" height="15" fill="rgb(208,106,33)" fg:x="266" fg:w="1"/><text x="43.0841%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="42.8341%" y="469" width="0.1610%" height="15" fill="rgb(206,54,4)" fg:x="266" fg:w="1"/><text x="43.0841%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.16%)</title><rect x="42.9952%" y="485" width="0.1610%" height="15" fill="rgb(213,3,15)" fg:x="267" fg:w="1"/><text x="43.2452%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="42.9952%" y="469" width="0.1610%" height="15" fill="rgb(252,211,39)" fg:x="267" fg:w="1"/><text x="43.2452%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="42.9952%" y="453" width="0.1610%" height="15" fill="rgb(223,6,36)" fg:x="267" fg:w="1"/><text x="43.2452%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="42.9952%" y="437" width="0.1610%" height="15" fill="rgb(252,169,45)" fg:x="267" fg:w="1"/><text x="43.2452%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="43.1562%" y="357" width="0.1610%" height="15" fill="rgb(212,48,26)" fg:x="268" fg:w="1"/><text x="43.4062%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="43.1562%" y="341" width="0.1610%" height="15" fill="rgb(251,102,48)" fg:x="268" fg:w="1"/><text x="43.4062%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="43.1562%" y="325" width="0.1610%" height="15" fill="rgb(243,208,16)" fg:x="268" fg:w="1"/><text x="43.4062%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="43.1562%" y="309" width="0.1610%" height="15" fill="rgb(219,96,24)" fg:x="268" fg:w="1"/><text x="43.4062%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="43.1562%" y="437" width="0.4831%" height="15" fill="rgb(219,33,29)" fg:x="268" fg:w="3"/><text x="43.4062%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="43.1562%" y="421" width="0.4831%" height="15" fill="rgb(223,176,5)" fg:x="268" fg:w="3"/><text x="43.4062%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="43.1562%" y="405" width="0.4831%" height="15" fill="rgb(228,140,14)" fg:x="268" fg:w="3"/><text x="43.4062%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="43.1562%" y="389" width="0.4831%" height="15" fill="rgb(217,179,31)" fg:x="268" fg:w="3"/><text x="43.4062%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="43.1562%" y="373" width="0.4831%" height="15" fill="rgb(230,9,30)" fg:x="268" fg:w="3"/><text x="43.4062%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="43.3172%" y="357" width="0.3221%" height="15" fill="rgb(230,136,20)" fg:x="269" fg:w="2"/><text x="43.5672%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.32%)</title><rect x="43.3172%" y="341" width="0.3221%" height="15" fill="rgb(215,210,22)" fg:x="269" fg:w="2"/><text x="43.5672%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="43.3172%" y="325" width="0.3221%" height="15" fill="rgb(218,43,5)" fg:x="269" fg:w="2"/><text x="43.5672%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="43.3172%" y="309" width="0.3221%" height="15" fill="rgb(216,11,5)" fg:x="269" fg:w="2"/><text x="43.5672%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="43.3172%" y="293" width="0.3221%" height="15" fill="rgb(209,82,29)" fg:x="269" fg:w="2"/><text x="43.5672%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="43.6393%" y="389" width="0.3221%" height="15" fill="rgb(244,115,12)" fg:x="271" fg:w="2"/><text x="43.8893%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="43.6393%" y="373" width="0.3221%" height="15" fill="rgb(222,82,18)" fg:x="271" fg:w="2"/><text x="43.8893%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="43.6393%" y="357" width="0.3221%" height="15" fill="rgb(249,227,8)" fg:x="271" fg:w="2"/><text x="43.8893%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.32%)</title><rect x="43.9614%" y="389" width="0.3221%" height="15" fill="rgb(253,141,45)" fg:x="273" fg:w="2"/><text x="44.2114%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.32%)</title><rect x="43.9614%" y="373" width="0.3221%" height="15" fill="rgb(234,184,4)" fg:x="273" fg:w="2"/><text x="44.2114%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.32%)</title><rect x="43.9614%" y="357" width="0.3221%" height="15" fill="rgb(218,194,23)" fg:x="273" fg:w="2"/><text x="44.2114%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="43.9614%" y="341" width="0.3221%" height="15" fill="rgb(235,66,41)" fg:x="273" fg:w="2"/><text x="44.2114%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="43.9614%" y="325" width="0.3221%" height="15" fill="rgb(245,217,1)" fg:x="273" fg:w="2"/><text x="44.2114%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="43.9614%" y="309" width="0.3221%" height="15" fill="rgb(229,91,1)" fg:x="273" fg:w="2"/><text x="44.2114%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="44.2834%" y="389" width="0.1610%" height="15" fill="rgb(207,101,30)" fg:x="275" fg:w="1"/><text x="44.5334%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.16%)</title><rect x="44.2834%" y="373" width="0.1610%" height="15" fill="rgb(223,82,49)" fg:x="275" fg:w="1"/><text x="44.5334%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="44.2834%" y="357" width="0.1610%" height="15" fill="rgb(218,167,17)" fg:x="275" fg:w="1"/><text x="44.5334%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="44.2834%" y="341" width="0.1610%" height="15" fill="rgb(208,103,14)" fg:x="275" fg:w="1"/><text x="44.5334%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="44.2834%" y="325" width="0.1610%" height="15" fill="rgb(238,20,8)" fg:x="275" fg:w="1"/><text x="44.5334%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="44.2834%" y="309" width="0.1610%" height="15" fill="rgb(218,80,54)" fg:x="275" fg:w="1"/><text x="44.5334%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="44.4444%" y="373" width="0.1610%" height="15" fill="rgb(240,144,17)" fg:x="276" fg:w="1"/><text x="44.6944%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="44.4444%" y="357" width="0.1610%" height="15" fill="rgb(245,27,50)" fg:x="276" fg:w="1"/><text x="44.6944%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="44.4444%" y="341" width="0.1610%" height="15" fill="rgb(251,51,7)" fg:x="276" fg:w="1"/><text x="44.6944%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="44.6055%" y="373" width="0.1610%" height="15" fill="rgb(245,217,29)" fg:x="277" fg:w="1"/><text x="44.8555%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="44.6055%" y="357" width="0.1610%" height="15" fill="rgb(221,176,29)" fg:x="277" fg:w="1"/><text x="44.8555%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="44.6055%" y="341" width="0.1610%" height="15" fill="rgb(212,180,24)" fg:x="277" fg:w="1"/><text x="44.8555%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="44.6055%" y="325" width="0.1610%" height="15" fill="rgb(254,24,2)" fg:x="277" fg:w="1"/><text x="44.8555%" y="335.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::grad_for_id (13 samples, 2.09%)</title><rect x="42.8341%" y="517" width="2.0934%" height="15" fill="rgb(230,100,2)" fg:x="266" fg:w="13"/><text x="43.0841%" y="527.50">m..</text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (12 samples, 1.93%)</title><rect x="42.9952%" y="501" width="1.9324%" height="15" fill="rgb(219,142,25)" fg:x="267" fg:w="12"/><text x="43.2452%" y="511.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 1.77%)</title><rect x="43.1562%" y="485" width="1.7713%" height="15" fill="rgb(240,73,43)" fg:x="268" fg:w="11"/><text x="43.4062%" y="495.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 1.77%)</title><rect x="43.1562%" y="469" width="1.7713%" height="15" fill="rgb(214,114,15)" fg:x="268" fg:w="11"/><text x="43.4062%" y="479.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 1.77%)</title><rect x="43.1562%" y="453" width="1.7713%" height="15" fill="rgb(207,130,4)" fg:x="268" fg:w="11"/><text x="43.4062%" y="463.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 1.29%)</title><rect x="43.6393%" y="437" width="1.2882%" height="15" fill="rgb(221,25,40)" fg:x="271" fg:w="8"/><text x="43.8893%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 1.29%)</title><rect x="43.6393%" y="421" width="1.2882%" height="15" fill="rgb(241,184,7)" fg:x="271" fg:w="8"/><text x="43.8893%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 1.29%)</title><rect x="43.6393%" y="405" width="1.2882%" height="15" fill="rgb(235,159,4)" fg:x="271" fg:w="8"/><text x="43.8893%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.48%)</title><rect x="44.4444%" y="389" width="0.4831%" height="15" fill="rgb(214,87,48)" fg:x="276" fg:w="3"/><text x="44.6944%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="44.7665%" y="373" width="0.1610%" height="15" fill="rgb(246,198,24)" fg:x="278" fg:w="1"/><text x="45.0165%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="44.7665%" y="357" width="0.1610%" height="15" fill="rgb(209,66,40)" fg:x="278" fg:w="1"/><text x="45.0165%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="44.7665%" y="341" width="0.1610%" height="15" fill="rgb(233,147,39)" fg:x="278" fg:w="1"/><text x="45.0165%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="44.7665%" y="325" width="0.1610%" height="15" fill="rgb(231,145,52)" fg:x="278" fg:w="1"/><text x="45.0165%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="44.7665%" y="309" width="0.1610%" height="15" fill="rgb(206,20,26)" fg:x="278" fg:w="1"/><text x="45.0165%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.48%)</title><rect x="44.9275%" y="293" width="0.4831%" height="15" fill="rgb(238,220,4)" fg:x="279" fg:w="3"/><text x="45.1775%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.48%)</title><rect x="44.9275%" y="277" width="0.4831%" height="15" fill="rgb(252,195,42)" fg:x="279" fg:w="3"/><text x="45.1775%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="44.9275%" y="261" width="0.4831%" height="15" fill="rgb(209,10,6)" fg:x="279" fg:w="3"/><text x="45.1775%" y="271.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="44.9275%" y="245" width="0.4831%" height="15" fill="rgb(229,3,52)" fg:x="279" fg:w="3"/><text x="45.1775%" y="255.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="44.9275%" y="229" width="0.4831%" height="15" fill="rgb(253,49,37)" fg:x="279" fg:w="3"/><text x="45.1775%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.64%)</title><rect x="44.9275%" y="437" width="0.6441%" height="15" fill="rgb(240,103,49)" fg:x="279" fg:w="4"/><text x="45.1775%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.64%)</title><rect x="44.9275%" y="421" width="0.6441%" height="15" fill="rgb(250,182,30)" fg:x="279" fg:w="4"/><text x="45.1775%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.64%)</title><rect x="44.9275%" y="405" width="0.6441%" height="15" fill="rgb(248,8,30)" fg:x="279" fg:w="4"/><text x="45.1775%" y="415.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (4 samples, 0.64%)</title><rect x="44.9275%" y="389" width="0.6441%" height="15" fill="rgb(237,120,30)" fg:x="279" fg:w="4"/><text x="45.1775%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.64%)</title><rect x="44.9275%" y="373" width="0.6441%" height="15" fill="rgb(221,146,34)" fg:x="279" fg:w="4"/><text x="45.1775%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.64%)</title><rect x="44.9275%" y="357" width="0.6441%" height="15" fill="rgb(242,55,13)" fg:x="279" fg:w="4"/><text x="45.1775%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.64%)</title><rect x="44.9275%" y="341" width="0.6441%" height="15" fill="rgb(242,112,31)" fg:x="279" fg:w="4"/><text x="45.1775%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.64%)</title><rect x="44.9275%" y="325" width="0.6441%" height="15" fill="rgb(249,192,27)" fg:x="279" fg:w="4"/><text x="45.1775%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.64%)</title><rect x="44.9275%" y="309" width="0.6441%" height="15" fill="rgb(208,204,44)" fg:x="279" fg:w="4"/><text x="45.1775%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="45.4106%" y="293" width="0.1610%" height="15" fill="rgb(208,93,54)" fg:x="282" fg:w="1"/><text x="45.6606%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="45.4106%" y="277" width="0.1610%" height="15" fill="rgb(242,1,31)" fg:x="282" fg:w="1"/><text x="45.6606%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="45.4106%" y="261" width="0.1610%" height="15" fill="rgb(241,83,25)" fg:x="282" fg:w="1"/><text x="45.6606%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="45.5717%" y="389" width="0.1610%" height="15" fill="rgb(205,169,50)" fg:x="283" fg:w="1"/><text x="45.8217%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="45.5717%" y="373" width="0.1610%" height="15" fill="rgb(239,186,37)" fg:x="283" fg:w="1"/><text x="45.8217%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="45.5717%" y="357" width="0.1610%" height="15" fill="rgb(205,221,10)" fg:x="283" fg:w="1"/><text x="45.8217%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="45.5717%" y="341" width="0.1610%" height="15" fill="rgb(218,196,15)" fg:x="283" fg:w="1"/><text x="45.8217%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="45.5717%" y="325" width="0.1610%" height="15" fill="rgb(218,196,35)" fg:x="283" fg:w="1"/><text x="45.8217%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="45.7327%" y="389" width="0.1610%" height="15" fill="rgb(233,63,24)" fg:x="284" fg:w="1"/><text x="45.9827%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="45.7327%" y="373" width="0.1610%" height="15" fill="rgb(225,8,4)" fg:x="284" fg:w="1"/><text x="45.9827%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="45.7327%" y="357" width="0.1610%" height="15" fill="rgb(234,105,35)" fg:x="284" fg:w="1"/><text x="45.9827%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="45.7327%" y="341" width="0.1610%" height="15" fill="rgb(236,21,32)" fg:x="284" fg:w="1"/><text x="45.9827%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="45.8937%" y="373" width="0.1610%" height="15" fill="rgb(228,109,6)" fg:x="285" fg:w="1"/><text x="46.1437%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="45.8937%" y="357" width="0.1610%" height="15" fill="rgb(229,215,31)" fg:x="285" fg:w="1"/><text x="46.1437%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="45.8937%" y="341" width="0.1610%" height="15" fill="rgb(221,52,54)" fg:x="285" fg:w="1"/><text x="46.1437%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (2 samples, 0.32%)</title><rect x="46.0548%" y="373" width="0.3221%" height="15" fill="rgb(252,129,43)" fg:x="286" fg:w="2"/><text x="46.3048%" y="383.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (2 samples, 0.32%)</title><rect x="46.0548%" y="357" width="0.3221%" height="15" fill="rgb(248,183,27)" fg:x="286" fg:w="2"/><text x="46.3048%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="46.0548%" y="341" width="0.3221%" height="15" fill="rgb(250,0,22)" fg:x="286" fg:w="2"/><text x="46.3048%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="46.0548%" y="325" width="0.3221%" height="15" fill="rgb(213,166,10)" fg:x="286" fg:w="2"/><text x="46.3048%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="46.0548%" y="309" width="0.3221%" height="15" fill="rgb(207,163,36)" fg:x="286" fg:w="2"/><text x="46.3048%" y="319.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (10 samples, 1.61%)</title><rect x="44.9275%" y="517" width="1.6103%" height="15" fill="rgb(208,122,22)" fg:x="279" fg:w="10"/><text x="45.1775%" y="527.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (10 samples, 1.61%)</title><rect x="44.9275%" y="501" width="1.6103%" height="15" fill="rgb(207,104,49)" fg:x="279" fg:w="10"/><text x="45.1775%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 1.61%)</title><rect x="44.9275%" y="485" width="1.6103%" height="15" fill="rgb(248,211,50)" fg:x="279" fg:w="10"/><text x="45.1775%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 1.61%)</title><rect x="44.9275%" y="469" width="1.6103%" height="15" fill="rgb(217,13,45)" fg:x="279" fg:w="10"/><text x="45.1775%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 1.61%)</title><rect x="44.9275%" y="453" width="1.6103%" height="15" fill="rgb(211,216,49)" fg:x="279" fg:w="10"/><text x="45.1775%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.97%)</title><rect x="45.5717%" y="437" width="0.9662%" height="15" fill="rgb(221,58,53)" fg:x="283" fg:w="6"/><text x="45.8217%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.97%)</title><rect x="45.5717%" y="421" width="0.9662%" height="15" fill="rgb(220,112,41)" fg:x="283" fg:w="6"/><text x="45.8217%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.97%)</title><rect x="45.5717%" y="405" width="0.9662%" height="15" fill="rgb(236,38,28)" fg:x="283" fg:w="6"/><text x="45.8217%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.64%)</title><rect x="45.8937%" y="389" width="0.6441%" height="15" fill="rgb(227,195,22)" fg:x="285" fg:w="4"/><text x="46.1437%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="46.3768%" y="373" width="0.1610%" height="15" fill="rgb(214,55,33)" fg:x="288" fg:w="1"/><text x="46.6268%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="46.3768%" y="357" width="0.1610%" height="15" fill="rgb(248,80,13)" fg:x="288" fg:w="1"/><text x="46.6268%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.16%)</title><rect x="46.3768%" y="341" width="0.1610%" height="15" fill="rgb(238,52,6)" fg:x="288" fg:w="1"/><text x="46.6268%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="46.3768%" y="325" width="0.1610%" height="15" fill="rgb(224,198,47)" fg:x="288" fg:w="1"/><text x="46.6268%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="46.3768%" y="309" width="0.1610%" height="15" fill="rgb(233,171,20)" fg:x="288" fg:w="1"/><text x="46.6268%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="46.3768%" y="293" width="0.1610%" height="15" fill="rgb(241,30,25)" fg:x="288" fg:w="1"/><text x="46.6268%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.97%)</title><rect x="46.5378%" y="405" width="0.9662%" height="15" fill="rgb(207,171,38)" fg:x="289" fg:w="6"/><text x="46.7878%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.97%)</title><rect x="46.5378%" y="389" width="0.9662%" height="15" fill="rgb(234,70,1)" fg:x="289" fg:w="6"/><text x="46.7878%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (6 samples, 0.97%)</title><rect x="46.5378%" y="373" width="0.9662%" height="15" fill="rgb(232,178,18)" fg:x="289" fg:w="6"/><text x="46.7878%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (6 samples, 0.97%)</title><rect x="46.5378%" y="357" width="0.9662%" height="15" fill="rgb(241,78,40)" fg:x="289" fg:w="6"/><text x="46.7878%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (6 samples, 0.97%)</title><rect x="46.5378%" y="341" width="0.9662%" height="15" fill="rgb(222,35,25)" fg:x="289" fg:w="6"/><text x="46.7878%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 1.13%)</title><rect x="46.5378%" y="469" width="1.1272%" height="15" fill="rgb(207,92,16)" fg:x="289" fg:w="7"/><text x="46.7878%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 1.13%)</title><rect x="46.5378%" y="453" width="1.1272%" height="15" fill="rgb(216,59,51)" fg:x="289" fg:w="7"/><text x="46.7878%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 1.13%)</title><rect x="46.5378%" y="437" width="1.1272%" height="15" fill="rgb(213,80,28)" fg:x="289" fg:w="7"/><text x="46.7878%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 1.13%)</title><rect x="46.5378%" y="421" width="1.1272%" height="15" fill="rgb(220,93,7)" fg:x="289" fg:w="7"/><text x="46.7878%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="47.5040%" y="405" width="0.1610%" height="15" fill="rgb(225,24,44)" fg:x="295" fg:w="1"/><text x="47.7540%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="47.5040%" y="389" width="0.1610%" height="15" fill="rgb(243,74,40)" fg:x="295" fg:w="1"/><text x="47.7540%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="47.5040%" y="373" width="0.1610%" height="15" fill="rgb(228,39,7)" fg:x="295" fg:w="1"/><text x="47.7540%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="47.6651%" y="421" width="0.1610%" height="15" fill="rgb(227,79,8)" fg:x="296" fg:w="1"/><text x="47.9151%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.16%)</title><rect x="47.6651%" y="405" width="0.1610%" height="15" fill="rgb(236,58,11)" fg:x="296" fg:w="1"/><text x="47.9151%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.16%)</title><rect x="47.6651%" y="389" width="0.1610%" height="15" fill="rgb(249,63,35)" fg:x="296" fg:w="1"/><text x="47.9151%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="47.6651%" y="373" width="0.1610%" height="15" fill="rgb(252,114,16)" fg:x="296" fg:w="1"/><text x="47.9151%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="47.6651%" y="357" width="0.1610%" height="15" fill="rgb(254,151,24)" fg:x="296" fg:w="1"/><text x="47.9151%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="47.6651%" y="341" width="0.1610%" height="15" fill="rgb(253,54,39)" fg:x="296" fg:w="1"/><text x="47.9151%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="47.8261%" y="405" width="0.1610%" height="15" fill="rgb(243,25,45)" fg:x="297" fg:w="1"/><text x="48.0761%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="47.8261%" y="389" width="0.1610%" height="15" fill="rgb(234,134,9)" fg:x="297" fg:w="1"/><text x="48.0761%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="47.8261%" y="373" width="0.1610%" height="15" fill="rgb(227,166,31)" fg:x="297" fg:w="1"/><text x="48.0761%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.32%)</title><rect x="47.8261%" y="421" width="0.3221%" height="15" fill="rgb(245,143,41)" fg:x="297" fg:w="2"/><text x="48.0761%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.16%)</title><rect x="47.9871%" y="405" width="0.1610%" height="15" fill="rgb(238,181,32)" fg:x="298" fg:w="1"/><text x="48.2371%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="47.9871%" y="389" width="0.1610%" height="15" fill="rgb(224,113,18)" fg:x="298" fg:w="1"/><text x="48.2371%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="47.9871%" y="373" width="0.1610%" height="15" fill="rgb(240,229,28)" fg:x="298" fg:w="1"/><text x="48.2371%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="47.9871%" y="357" width="0.1610%" height="15" fill="rgb(250,185,3)" fg:x="298" fg:w="1"/><text x="48.2371%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.32%)</title><rect x="48.1481%" y="421" width="0.3221%" height="15" fill="rgb(212,59,25)" fg:x="299" fg:w="2"/><text x="48.3981%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="48.1481%" y="405" width="0.3221%" height="15" fill="rgb(221,87,20)" fg:x="299" fg:w="2"/><text x="48.3981%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="48.1481%" y="389" width="0.3221%" height="15" fill="rgb(213,74,28)" fg:x="299" fg:w="2"/><text x="48.3981%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="48.1481%" y="373" width="0.3221%" height="15" fill="rgb(224,132,34)" fg:x="299" fg:w="2"/><text x="48.3981%" y="383.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards (264 samples, 42.51%)</title><rect x="6.1192%" y="533" width="42.5121%" height="15" fill="rgb(222,101,24)" fg:x="38" fg:w="264"/><text x="6.3692%" y="543.50">micrograd_rs::engine::RunnableGraph::_backwards</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 2.09%)</title><rect x="46.5378%" y="517" width="2.0934%" height="15" fill="rgb(254,142,4)" fg:x="289" fg:w="13"/><text x="46.7878%" y="527.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (13 samples, 2.09%)</title><rect x="46.5378%" y="501" width="2.0934%" height="15" fill="rgb(230,229,49)" fg:x="289" fg:w="13"/><text x="46.7878%" y="511.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 2.09%)</title><rect x="46.5378%" y="485" width="2.0934%" height="15" fill="rgb(238,70,47)" fg:x="289" fg:w="13"/><text x="46.7878%" y="495.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.97%)</title><rect x="47.6651%" y="469" width="0.9662%" height="15" fill="rgb(231,160,17)" fg:x="296" fg:w="6"/><text x="47.9151%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.97%)</title><rect x="47.6651%" y="453" width="0.9662%" height="15" fill="rgb(218,68,53)" fg:x="296" fg:w="6"/><text x="47.9151%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.97%)</title><rect x="47.6651%" y="437" width="0.9662%" height="15" fill="rgb(236,111,10)" fg:x="296" fg:w="6"/><text x="47.9151%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="48.4702%" y="421" width="0.1610%" height="15" fill="rgb(224,34,41)" fg:x="301" fg:w="1"/><text x="48.7202%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="48.4702%" y="405" width="0.1610%" height="15" fill="rgb(241,118,19)" fg:x="301" fg:w="1"/><text x="48.7202%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="48.4702%" y="389" width="0.1610%" height="15" fill="rgb(238,129,25)" fg:x="301" fg:w="1"/><text x="48.7202%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="48.4702%" y="373" width="0.1610%" height="15" fill="rgb(238,22,31)" fg:x="301" fg:w="1"/><text x="48.7202%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="48.4702%" y="357" width="0.1610%" height="15" fill="rgb(222,174,48)" fg:x="301" fg:w="1"/><text x="48.7202%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="48.6312%" y="373" width="0.1610%" height="15" fill="rgb(206,152,40)" fg:x="302" fg:w="1"/><text x="48.8812%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="48.6312%" y="357" width="0.1610%" height="15" fill="rgb(218,99,54)" fg:x="302" fg:w="1"/><text x="48.8812%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="48.6312%" y="341" width="0.1610%" height="15" fill="rgb(220,174,26)" fg:x="302" fg:w="1"/><text x="48.8812%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="48.6312%" y="325" width="0.1610%" height="15" fill="rgb(245,116,9)" fg:x="302" fg:w="1"/><text x="48.8812%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="48.6312%" y="421" width="0.3221%" height="15" fill="rgb(209,72,35)" fg:x="302" fg:w="2"/><text x="48.8812%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="48.6312%" y="405" width="0.3221%" height="15" fill="rgb(226,126,21)" fg:x="302" fg:w="2"/><text x="48.8812%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="48.6312%" y="389" width="0.3221%" height="15" fill="rgb(227,192,1)" fg:x="302" fg:w="2"/><text x="48.8812%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="48.7923%" y="373" width="0.1610%" height="15" fill="rgb(237,180,29)" fg:x="303" fg:w="1"/><text x="49.0423%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="48.7923%" y="357" width="0.1610%" height="15" fill="rgb(230,197,35)" fg:x="303" fg:w="1"/><text x="49.0423%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="48.7923%" y="341" width="0.1610%" height="15" fill="rgb(246,193,31)" fg:x="303" fg:w="1"/><text x="49.0423%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="48.7923%" y="325" width="0.1610%" height="15" fill="rgb(241,36,4)" fg:x="303" fg:w="1"/><text x="49.0423%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="48.6312%" y="453" width="0.4831%" height="15" fill="rgb(241,130,17)" fg:x="302" fg:w="3"/><text x="48.8812%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="48.6312%" y="437" width="0.4831%" height="15" fill="rgb(206,137,32)" fg:x="302" fg:w="3"/><text x="48.8812%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="48.9533%" y="421" width="0.1610%" height="15" fill="rgb(237,228,51)" fg:x="304" fg:w="1"/><text x="49.2033%" y="431.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="48.9533%" y="405" width="0.1610%" height="15" fill="rgb(243,6,42)" fg:x="304" fg:w="1"/><text x="49.2033%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="48.9533%" y="389" width="0.1610%" height="15" fill="rgb(251,74,28)" fg:x="304" fg:w="1"/><text x="49.2033%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="48.9533%" y="373" width="0.1610%" height="15" fill="rgb(218,20,49)" fg:x="304" fg:w="1"/><text x="49.2033%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="48.9533%" y="357" width="0.1610%" height="15" fill="rgb(238,28,14)" fg:x="304" fg:w="1"/><text x="49.2033%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="48.9533%" y="341" width="0.1610%" height="15" fill="rgb(229,40,46)" fg:x="304" fg:w="1"/><text x="49.2033%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="48.9533%" y="325" width="0.1610%" height="15" fill="rgb(244,195,20)" fg:x="304" fg:w="1"/><text x="49.2033%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.16%)</title><rect x="48.9533%" y="309" width="0.1610%" height="15" fill="rgb(253,56,35)" fg:x="304" fg:w="1"/><text x="49.2033%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.16%)</title><rect x="48.9533%" y="293" width="0.1610%" height="15" fill="rgb(210,149,44)" fg:x="304" fg:w="1"/><text x="49.2033%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="48.9533%" y="277" width="0.1610%" height="15" fill="rgb(240,135,12)" fg:x="304" fg:w="1"/><text x="49.2033%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="48.9533%" y="261" width="0.1610%" height="15" fill="rgb(251,24,50)" fg:x="304" fg:w="1"/><text x="49.2033%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="48.9533%" y="245" width="0.1610%" height="15" fill="rgb(243,200,47)" fg:x="304" fg:w="1"/><text x="49.2033%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="49.1143%" y="389" width="0.1610%" height="15" fill="rgb(224,166,26)" fg:x="305" fg:w="1"/><text x="49.3643%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="49.1143%" y="373" width="0.1610%" height="15" fill="rgb(233,0,47)" fg:x="305" fg:w="1"/><text x="49.3643%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="49.1143%" y="357" width="0.1610%" height="15" fill="rgb(253,80,5)" fg:x="305" fg:w="1"/><text x="49.3643%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="49.1143%" y="341" width="0.1610%" height="15" fill="rgb(214,133,25)" fg:x="305" fg:w="1"/><text x="49.3643%" y="351.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update (6 samples, 0.97%)</title><rect x="48.6312%" y="533" width="0.9662%" height="15" fill="rgb(209,27,14)" fg:x="302" fg:w="6"/><text x="48.8812%" y="543.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id_mut (6 samples, 0.97%)</title><rect x="48.6312%" y="517" width="0.9662%" height="15" fill="rgb(219,102,51)" fg:x="302" fg:w="6"/><text x="48.8812%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (6 samples, 0.97%)</title><rect x="48.6312%" y="501" width="0.9662%" height="15" fill="rgb(237,18,16)" fg:x="302" fg:w="6"/><text x="48.8812%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (6 samples, 0.97%)</title><rect x="48.6312%" y="485" width="0.9662%" height="15" fill="rgb(241,85,17)" fg:x="302" fg:w="6"/><text x="48.8812%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (6 samples, 0.97%)</title><rect x="48.6312%" y="469" width="0.9662%" height="15" fill="rgb(236,90,42)" fg:x="302" fg:w="6"/><text x="48.8812%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.48%)</title><rect x="49.1143%" y="453" width="0.4831%" height="15" fill="rgb(249,57,21)" fg:x="305" fg:w="3"/><text x="49.3643%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="49.1143%" y="437" width="0.4831%" height="15" fill="rgb(243,12,36)" fg:x="305" fg:w="3"/><text x="49.3643%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="49.1143%" y="421" width="0.4831%" height="15" fill="rgb(253,128,47)" fg:x="305" fg:w="3"/><text x="49.3643%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.48%)</title><rect x="49.1143%" y="405" width="0.4831%" height="15" fill="rgb(207,33,20)" fg:x="305" fg:w="3"/><text x="49.3643%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.32%)</title><rect x="49.2754%" y="389" width="0.3221%" height="15" fill="rgb(233,215,35)" fg:x="306" fg:w="2"/><text x="49.5254%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.32%)</title><rect x="49.2754%" y="373" width="0.3221%" height="15" fill="rgb(249,188,52)" fg:x="306" fg:w="2"/><text x="49.5254%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="49.2754%" y="357" width="0.3221%" height="15" fill="rgb(225,12,32)" fg:x="306" fg:w="2"/><text x="49.5254%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="49.2754%" y="341" width="0.3221%" height="15" fill="rgb(247,98,14)" fg:x="306" fg:w="2"/><text x="49.5254%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="49.2754%" y="325" width="0.3221%" height="15" fill="rgb(247,219,48)" fg:x="306" fg:w="2"/><text x="49.5254%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="49.5974%" y="501" width="0.1610%" height="15" fill="rgb(253,60,48)" fg:x="308" fg:w="1"/><text x="49.8474%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="49.5974%" y="485" width="0.1610%" height="15" fill="rgb(245,15,52)" fg:x="308" fg:w="1"/><text x="49.8474%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="49.5974%" y="469" width="0.1610%" height="15" fill="rgb(220,133,28)" fg:x="308" fg:w="1"/><text x="49.8474%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="49.7585%" y="421" width="0.1610%" height="15" fill="rgb(217,180,4)" fg:x="309" fg:w="1"/><text x="50.0085%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="49.7585%" y="405" width="0.1610%" height="15" fill="rgb(251,24,1)" fg:x="309" fg:w="1"/><text x="50.0085%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="49.7585%" y="389" width="0.1610%" height="15" fill="rgb(212,185,49)" fg:x="309" fg:w="1"/><text x="50.0085%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="49.7585%" y="373" width="0.1610%" height="15" fill="rgb(215,175,22)" fg:x="309" fg:w="1"/><text x="50.0085%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="49.7585%" y="357" width="0.1610%" height="15" fill="rgb(250,205,14)" fg:x="309" fg:w="1"/><text x="50.0085%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="49.7585%" y="341" width="0.1610%" height="15" fill="rgb(225,211,22)" fg:x="309" fg:w="1"/><text x="50.0085%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="49.7585%" y="325" width="0.1610%" height="15" fill="rgb(251,179,42)" fg:x="309" fg:w="1"/><text x="50.0085%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.32%)</title><rect x="49.9195%" y="309" width="0.3221%" height="15" fill="rgb(208,216,51)" fg:x="310" fg:w="2"/><text x="50.1695%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="49.9195%" y="293" width="0.3221%" height="15" fill="rgb(235,36,11)" fg:x="310" fg:w="2"/><text x="50.1695%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="49.9195%" y="277" width="0.3221%" height="15" fill="rgb(213,189,28)" fg:x="310" fg:w="2"/><text x="50.1695%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="49.9195%" y="261" width="0.3221%" height="15" fill="rgb(227,203,42)" fg:x="310" fg:w="2"/><text x="50.1695%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.48%)</title><rect x="49.9195%" y="341" width="0.4831%" height="15" fill="rgb(244,72,36)" fg:x="310" fg:w="3"/><text x="50.1695%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.48%)</title><rect x="49.9195%" y="325" width="0.4831%" height="15" fill="rgb(213,53,17)" fg:x="310" fg:w="3"/><text x="50.1695%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.16%)</title><rect x="50.2415%" y="309" width="0.1610%" height="15" fill="rgb(207,167,3)" fg:x="312" fg:w="1"/><text x="50.4915%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.16%)</title><rect x="50.2415%" y="293" width="0.1610%" height="15" fill="rgb(216,98,30)" fg:x="312" fg:w="1"/><text x="50.4915%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="50.2415%" y="277" width="0.1610%" height="15" fill="rgb(236,123,15)" fg:x="312" fg:w="1"/><text x="50.4915%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="50.2415%" y="261" width="0.1610%" height="15" fill="rgb(248,81,50)" fg:x="312" fg:w="1"/><text x="50.4915%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="50.2415%" y="245" width="0.1610%" height="15" fill="rgb(214,120,4)" fg:x="312" fg:w="1"/><text x="50.4915%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.81%)</title><rect x="49.7585%" y="453" width="0.8052%" height="15" fill="rgb(208,179,34)" fg:x="309" fg:w="5"/><text x="50.0085%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.81%)</title><rect x="49.7585%" y="437" width="0.8052%" height="15" fill="rgb(227,140,7)" fg:x="309" fg:w="5"/><text x="50.0085%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.64%)</title><rect x="49.9195%" y="421" width="0.6441%" height="15" fill="rgb(214,22,6)" fg:x="310" fg:w="4"/><text x="50.1695%" y="431.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (4 samples, 0.64%)</title><rect x="49.9195%" y="405" width="0.6441%" height="15" fill="rgb(207,137,27)" fg:x="310" fg:w="4"/><text x="50.1695%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.64%)</title><rect x="49.9195%" y="389" width="0.6441%" height="15" fill="rgb(210,8,46)" fg:x="310" fg:w="4"/><text x="50.1695%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.64%)</title><rect x="49.9195%" y="373" width="0.6441%" height="15" fill="rgb(240,16,54)" fg:x="310" fg:w="4"/><text x="50.1695%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.64%)</title><rect x="49.9195%" y="357" width="0.6441%" height="15" fill="rgb(211,209,29)" fg:x="310" fg:w="4"/><text x="50.1695%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="50.4026%" y="341" width="0.1610%" height="15" fill="rgb(226,228,24)" fg:x="313" fg:w="1"/><text x="50.6526%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="50.4026%" y="325" width="0.1610%" height="15" fill="rgb(222,84,9)" fg:x="313" fg:w="1"/><text x="50.6526%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="50.4026%" y="309" width="0.1610%" height="15" fill="rgb(234,203,30)" fg:x="313" fg:w="1"/><text x="50.6526%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="50.5636%" y="389" width="0.1610%" height="15" fill="rgb(238,109,14)" fg:x="314" fg:w="1"/><text x="50.8136%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="50.5636%" y="373" width="0.1610%" height="15" fill="rgb(233,206,34)" fg:x="314" fg:w="1"/><text x="50.8136%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="50.5636%" y="357" width="0.1610%" height="15" fill="rgb(220,167,47)" fg:x="314" fg:w="1"/><text x="50.8136%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (278 samples, 44.77%)</title><rect x="6.1192%" y="565" width="44.7665%" height="15" fill="rgb(238,105,10)" fg:x="38" fg:w="278"/><text x="6.3692%" y="575.50">core::option::Option&lt;T&gt;::map</text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards::{{closure}} (278 samples, 44.77%)</title><rect x="6.1192%" y="549" width="44.7665%" height="15" fill="rgb(213,227,17)" fg:x="38" fg:w="278"/><text x="6.3692%" y="559.50">micrograd_rs::engine::RunnableGraph::_backwards::{{closure}}</text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (8 samples, 1.29%)</title><rect x="49.5974%" y="533" width="1.2882%" height="15" fill="rgb(217,132,38)" fg:x="308" fg:w="8"/><text x="49.8474%" y="543.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (8 samples, 1.29%)</title><rect x="49.5974%" y="517" width="1.2882%" height="15" fill="rgb(242,146,4)" fg:x="308" fg:w="8"/><text x="49.8474%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 1.13%)</title><rect x="49.7585%" y="501" width="1.1272%" height="15" fill="rgb(212,61,9)" fg:x="309" fg:w="7"/><text x="50.0085%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 1.13%)</title><rect x="49.7585%" y="485" width="1.1272%" height="15" fill="rgb(247,126,22)" fg:x="309" fg:w="7"/><text x="50.0085%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 1.13%)</title><rect x="49.7585%" y="469" width="1.1272%" height="15" fill="rgb(220,196,2)" fg:x="309" fg:w="7"/><text x="50.0085%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.32%)</title><rect x="50.5636%" y="453" width="0.3221%" height="15" fill="rgb(208,46,4)" fg:x="314" fg:w="2"/><text x="50.8136%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="50.5636%" y="437" width="0.3221%" height="15" fill="rgb(252,104,46)" fg:x="314" fg:w="2"/><text x="50.8136%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="50.5636%" y="421" width="0.3221%" height="15" fill="rgb(237,152,48)" fg:x="314" fg:w="2"/><text x="50.8136%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="50.5636%" y="405" width="0.3221%" height="15" fill="rgb(221,59,37)" fg:x="314" fg:w="2"/><text x="50.8136%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="50.7246%" y="389" width="0.1610%" height="15" fill="rgb(209,202,51)" fg:x="315" fg:w="1"/><text x="50.9746%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="50.7246%" y="373" width="0.1610%" height="15" fill="rgb(228,81,30)" fg:x="315" fg:w="1"/><text x="50.9746%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="50.7246%" y="357" width="0.1610%" height="15" fill="rgb(227,42,39)" fg:x="315" fg:w="1"/><text x="50.9746%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="50.7246%" y="341" width="0.1610%" height="15" fill="rgb(221,26,2)" fg:x="315" fg:w="1"/><text x="50.9746%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="50.7246%" y="325" width="0.1610%" height="15" fill="rgb(254,61,31)" fg:x="315" fg:w="1"/><text x="50.9746%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="50.8857%" y="485" width="0.4831%" height="15" fill="rgb(222,173,38)" fg:x="316" fg:w="3"/><text x="51.1357%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="50.8857%" y="469" width="0.4831%" height="15" fill="rgb(218,50,12)" fg:x="316" fg:w="3"/><text x="51.1357%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="50.8857%" y="453" width="0.4831%" height="15" fill="rgb(223,88,40)" fg:x="316" fg:w="3"/><text x="51.1357%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="50.8857%" y="437" width="0.4831%" height="15" fill="rgb(237,54,19)" fg:x="316" fg:w="3"/><text x="51.1357%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="50.8857%" y="421" width="0.4831%" height="15" fill="rgb(251,129,25)" fg:x="316" fg:w="3"/><text x="51.1357%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.48%)</title><rect x="50.8857%" y="405" width="0.4831%" height="15" fill="rgb(238,97,19)" fg:x="316" fg:w="3"/><text x="51.1357%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="50.8857%" y="389" width="0.4831%" height="15" fill="rgb(240,169,18)" fg:x="316" fg:w="3"/><text x="51.1357%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="50.8857%" y="373" width="0.4831%" height="15" fill="rgb(230,187,49)" fg:x="316" fg:w="3"/><text x="51.1357%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="50.8857%" y="357" width="0.4831%" height="15" fill="rgb(209,44,26)" fg:x="316" fg:w="3"/><text x="51.1357%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="51.3688%" y="437" width="0.1610%" height="15" fill="rgb(244,0,6)" fg:x="319" fg:w="1"/><text x="51.6188%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="51.3688%" y="421" width="0.1610%" height="15" fill="rgb(248,18,21)" fg:x="319" fg:w="1"/><text x="51.6188%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="51.3688%" y="405" width="0.1610%" height="15" fill="rgb(245,180,19)" fg:x="319" fg:w="1"/><text x="51.6188%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="51.5298%" y="437" width="0.1610%" height="15" fill="rgb(252,118,36)" fg:x="320" fg:w="1"/><text x="51.7798%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.16%)</title><rect x="51.5298%" y="421" width="0.1610%" height="15" fill="rgb(210,224,19)" fg:x="320" fg:w="1"/><text x="51.7798%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="51.5298%" y="405" width="0.1610%" height="15" fill="rgb(218,30,24)" fg:x="320" fg:w="1"/><text x="51.7798%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="51.5298%" y="389" width="0.1610%" height="15" fill="rgb(219,75,50)" fg:x="320" fg:w="1"/><text x="51.7798%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="51.5298%" y="373" width="0.1610%" height="15" fill="rgb(234,72,50)" fg:x="320" fg:w="1"/><text x="51.7798%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="51.5298%" y="357" width="0.1610%" height="15" fill="rgb(219,100,48)" fg:x="320" fg:w="1"/><text x="51.7798%" y="367.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::grad_for_id (7 samples, 1.13%)</title><rect x="50.8857%" y="565" width="1.1272%" height="15" fill="rgb(253,5,41)" fg:x="316" fg:w="7"/><text x="51.1357%" y="575.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (7 samples, 1.13%)</title><rect x="50.8857%" y="549" width="1.1272%" height="15" fill="rgb(247,181,11)" fg:x="316" fg:w="7"/><text x="51.1357%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 1.13%)</title><rect x="50.8857%" y="533" width="1.1272%" height="15" fill="rgb(222,223,25)" fg:x="316" fg:w="7"/><text x="51.1357%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 1.13%)</title><rect x="50.8857%" y="517" width="1.1272%" height="15" fill="rgb(214,198,28)" fg:x="316" fg:w="7"/><text x="51.1357%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 1.13%)</title><rect x="50.8857%" y="501" width="1.1272%" height="15" fill="rgb(230,46,43)" fg:x="316" fg:w="7"/><text x="51.1357%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.64%)</title><rect x="51.3688%" y="485" width="0.6441%" height="15" fill="rgb(233,65,53)" fg:x="319" fg:w="4"/><text x="51.6188%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.64%)</title><rect x="51.3688%" y="469" width="0.6441%" height="15" fill="rgb(221,121,27)" fg:x="319" fg:w="4"/><text x="51.6188%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.64%)</title><rect x="51.3688%" y="453" width="0.6441%" height="15" fill="rgb(247,70,47)" fg:x="319" fg:w="4"/><text x="51.6188%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="51.6908%" y="437" width="0.3221%" height="15" fill="rgb(228,85,35)" fg:x="321" fg:w="2"/><text x="51.9408%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="51.6908%" y="421" width="0.3221%" height="15" fill="rgb(209,50,18)" fg:x="321" fg:w="2"/><text x="51.9408%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="51.6908%" y="405" width="0.3221%" height="15" fill="rgb(250,19,35)" fg:x="321" fg:w="2"/><text x="51.9408%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="51.6908%" y="389" width="0.3221%" height="15" fill="rgb(253,107,29)" fg:x="321" fg:w="2"/><text x="51.9408%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="52.0129%" y="453" width="0.1610%" height="15" fill="rgb(252,179,29)" fg:x="323" fg:w="1"/><text x="52.2629%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="52.0129%" y="437" width="0.1610%" height="15" fill="rgb(238,194,6)" fg:x="323" fg:w="1"/><text x="52.2629%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="52.0129%" y="421" width="0.1610%" height="15" fill="rgb(238,164,29)" fg:x="323" fg:w="1"/><text x="52.2629%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="52.0129%" y="405" width="0.1610%" height="15" fill="rgb(224,25,9)" fg:x="323" fg:w="1"/><text x="52.2629%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="52.0129%" y="389" width="0.1610%" height="15" fill="rgb(244,153,23)" fg:x="323" fg:w="1"/><text x="52.2629%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="52.0129%" y="373" width="0.1610%" height="15" fill="rgb(212,203,14)" fg:x="323" fg:w="1"/><text x="52.2629%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="52.0129%" y="357" width="0.1610%" height="15" fill="rgb(220,164,20)" fg:x="323" fg:w="1"/><text x="52.2629%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.16%)</title><rect x="52.1739%" y="453" width="0.1610%" height="15" fill="rgb(222,203,48)" fg:x="324" fg:w="1"/><text x="52.4239%" y="463.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.16%)</title><rect x="52.1739%" y="437" width="0.1610%" height="15" fill="rgb(215,159,22)" fg:x="324" fg:w="1"/><text x="52.4239%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.16%)</title><rect x="52.1739%" y="421" width="0.1610%" height="15" fill="rgb(216,183,47)" fg:x="324" fg:w="1"/><text x="52.4239%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.16%)</title><rect x="52.1739%" y="405" width="0.1610%" height="15" fill="rgb(229,195,25)" fg:x="324" fg:w="1"/><text x="52.4239%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="52.1739%" y="389" width="0.1610%" height="15" fill="rgb(224,132,51)" fg:x="324" fg:w="1"/><text x="52.4239%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="52.1739%" y="373" width="0.1610%" height="15" fill="rgb(240,63,7)" fg:x="324" fg:w="1"/><text x="52.4239%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="52.1739%" y="357" width="0.1610%" height="15" fill="rgb(249,182,41)" fg:x="324" fg:w="1"/><text x="52.4239%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="52.0129%" y="485" width="0.4831%" height="15" fill="rgb(243,47,26)" fg:x="323" fg:w="3"/><text x="52.2629%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="52.0129%" y="469" width="0.4831%" height="15" fill="rgb(233,48,2)" fg:x="323" fg:w="3"/><text x="52.2629%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="52.3349%" y="453" width="0.1610%" height="15" fill="rgb(244,165,34)" fg:x="325" fg:w="1"/><text x="52.5849%" y="463.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="52.3349%" y="437" width="0.1610%" height="15" fill="rgb(207,89,7)" fg:x="325" fg:w="1"/><text x="52.5849%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="52.3349%" y="421" width="0.1610%" height="15" fill="rgb(244,117,36)" fg:x="325" fg:w="1"/><text x="52.5849%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="52.3349%" y="405" width="0.1610%" height="15" fill="rgb(226,144,34)" fg:x="325" fg:w="1"/><text x="52.5849%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="52.3349%" y="389" width="0.1610%" height="15" fill="rgb(213,23,19)" fg:x="325" fg:w="1"/><text x="52.5849%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="52.3349%" y="373" width="0.1610%" height="15" fill="rgb(217,75,12)" fg:x="325" fg:w="1"/><text x="52.5849%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="52.3349%" y="357" width="0.1610%" height="15" fill="rgb(224,159,17)" fg:x="325" fg:w="1"/><text x="52.5849%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="52.3349%" y="341" width="0.1610%" height="15" fill="rgb(217,118,1)" fg:x="325" fg:w="1"/><text x="52.5849%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.16%)</title><rect x="52.3349%" y="325" width="0.1610%" height="15" fill="rgb(232,180,48)" fg:x="325" fg:w="1"/><text x="52.5849%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="52.3349%" y="309" width="0.1610%" height="15" fill="rgb(230,27,33)" fg:x="325" fg:w="1"/><text x="52.5849%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="52.3349%" y="293" width="0.1610%" height="15" fill="rgb(205,31,21)" fg:x="325" fg:w="1"/><text x="52.5849%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="52.3349%" y="277" width="0.1610%" height="15" fill="rgb(253,59,4)" fg:x="325" fg:w="1"/><text x="52.5849%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="52.4960%" y="437" width="0.1610%" height="15" fill="rgb(224,201,9)" fg:x="326" fg:w="1"/><text x="52.7460%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="52.4960%" y="421" width="0.1610%" height="15" fill="rgb(229,206,30)" fg:x="326" fg:w="1"/><text x="52.7460%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="52.4960%" y="405" width="0.1610%" height="15" fill="rgb(212,67,47)" fg:x="326" fg:w="1"/><text x="52.7460%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="52.4960%" y="389" width="0.1610%" height="15" fill="rgb(211,96,50)" fg:x="326" fg:w="1"/><text x="52.7460%" y="399.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (5 samples, 0.81%)</title><rect x="52.0129%" y="565" width="0.8052%" height="15" fill="rgb(252,114,18)" fg:x="323" fg:w="5"/><text x="52.2629%" y="575.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (5 samples, 0.81%)</title><rect x="52.0129%" y="549" width="0.8052%" height="15" fill="rgb(223,58,37)" fg:x="323" fg:w="5"/><text x="52.2629%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.81%)</title><rect x="52.0129%" y="533" width="0.8052%" height="15" fill="rgb(237,70,4)" fg:x="323" fg:w="5"/><text x="52.2629%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.81%)</title><rect x="52.0129%" y="517" width="0.8052%" height="15" fill="rgb(244,85,46)" fg:x="323" fg:w="5"/><text x="52.2629%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.81%)</title><rect x="52.0129%" y="501" width="0.8052%" height="15" fill="rgb(223,39,52)" fg:x="323" fg:w="5"/><text x="52.2629%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.32%)</title><rect x="52.4960%" y="485" width="0.3221%" height="15" fill="rgb(218,200,14)" fg:x="326" fg:w="2"/><text x="52.7460%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="52.4960%" y="469" width="0.3221%" height="15" fill="rgb(208,171,16)" fg:x="326" fg:w="2"/><text x="52.7460%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="52.4960%" y="453" width="0.3221%" height="15" fill="rgb(234,200,18)" fg:x="326" fg:w="2"/><text x="52.7460%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="52.6570%" y="437" width="0.1610%" height="15" fill="rgb(228,45,11)" fg:x="327" fg:w="1"/><text x="52.9070%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="52.6570%" y="421" width="0.1610%" height="15" fill="rgb(237,182,11)" fg:x="327" fg:w="1"/><text x="52.9070%" y="431.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.16%)</title><rect x="52.6570%" y="405" width="0.1610%" height="15" fill="rgb(241,175,49)" fg:x="327" fg:w="1"/><text x="52.9070%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="52.6570%" y="389" width="0.1610%" height="15" fill="rgb(247,38,35)" fg:x="327" fg:w="1"/><text x="52.9070%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="52.6570%" y="373" width="0.1610%" height="15" fill="rgb(228,39,49)" fg:x="327" fg:w="1"/><text x="52.9070%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="52.6570%" y="357" width="0.1610%" height="15" fill="rgb(226,101,26)" fg:x="327" fg:w="1"/><text x="52.9070%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="52.8180%" y="485" width="0.1610%" height="15" fill="rgb(206,141,19)" fg:x="328" fg:w="1"/><text x="53.0680%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="52.8180%" y="469" width="0.1610%" height="15" fill="rgb(211,200,13)" fg:x="328" fg:w="1"/><text x="53.0680%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="52.8180%" y="453" width="0.1610%" height="15" fill="rgb(241,121,6)" fg:x="328" fg:w="1"/><text x="53.0680%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="52.8180%" y="517" width="0.3221%" height="15" fill="rgb(234,221,29)" fg:x="328" fg:w="2"/><text x="53.0680%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="52.8180%" y="501" width="0.3221%" height="15" fill="rgb(229,136,5)" fg:x="328" fg:w="2"/><text x="53.0680%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="52.9791%" y="485" width="0.1610%" height="15" fill="rgb(238,36,11)" fg:x="329" fg:w="1"/><text x="53.2291%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="52.9791%" y="469" width="0.1610%" height="15" fill="rgb(251,55,41)" fg:x="329" fg:w="1"/><text x="53.2291%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="52.9791%" y="453" width="0.1610%" height="15" fill="rgb(242,34,40)" fg:x="329" fg:w="1"/><text x="53.2291%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="52.9791%" y="437" width="0.1610%" height="15" fill="rgb(215,42,17)" fg:x="329" fg:w="1"/><text x="53.2291%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="52.9791%" y="421" width="0.1610%" height="15" fill="rgb(207,44,46)" fg:x="329" fg:w="1"/><text x="53.2291%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="52.9791%" y="405" width="0.1610%" height="15" fill="rgb(211,206,28)" fg:x="329" fg:w="1"/><text x="53.2291%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="53.1401%" y="453" width="0.1610%" height="15" fill="rgb(237,167,16)" fg:x="330" fg:w="1"/><text x="53.3901%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="53.1401%" y="437" width="0.1610%" height="15" fill="rgb(233,66,6)" fg:x="330" fg:w="1"/><text x="53.3901%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="53.1401%" y="421" width="0.1610%" height="15" fill="rgb(246,123,29)" fg:x="330" fg:w="1"/><text x="53.3901%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="53.1401%" y="405" width="0.1610%" height="15" fill="rgb(209,62,40)" fg:x="330" fg:w="1"/><text x="53.3901%" y="415.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards (295 samples, 47.50%)</title><rect x="5.9581%" y="581" width="47.5040%" height="15" fill="rgb(218,4,25)" fg:x="37" fg:w="295"/><text x="6.2081%" y="591.50">micrograd_rs::engine::RunnableGraph::_backwards</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.64%)</title><rect x="52.8180%" y="565" width="0.6441%" height="15" fill="rgb(253,91,49)" fg:x="328" fg:w="4"/><text x="53.0680%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.64%)</title><rect x="52.8180%" y="549" width="0.6441%" height="15" fill="rgb(228,155,29)" fg:x="328" fg:w="4"/><text x="53.0680%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.64%)</title><rect x="52.8180%" y="533" width="0.6441%" height="15" fill="rgb(243,57,37)" fg:x="328" fg:w="4"/><text x="53.0680%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.32%)</title><rect x="53.1401%" y="517" width="0.3221%" height="15" fill="rgb(244,167,17)" fg:x="330" fg:w="2"/><text x="53.3901%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="53.1401%" y="501" width="0.3221%" height="15" fill="rgb(207,181,38)" fg:x="330" fg:w="2"/><text x="53.3901%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="53.1401%" y="485" width="0.3221%" height="15" fill="rgb(211,8,23)" fg:x="330" fg:w="2"/><text x="53.3901%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="53.1401%" y="469" width="0.3221%" height="15" fill="rgb(235,11,44)" fg:x="330" fg:w="2"/><text x="53.3901%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="53.3011%" y="453" width="0.1610%" height="15" fill="rgb(248,18,52)" fg:x="331" fg:w="1"/><text x="53.5511%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="53.3011%" y="437" width="0.1610%" height="15" fill="rgb(208,4,7)" fg:x="331" fg:w="1"/><text x="53.5511%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="53.3011%" y="421" width="0.1610%" height="15" fill="rgb(240,17,39)" fg:x="331" fg:w="1"/><text x="53.5511%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="53.3011%" y="405" width="0.1610%" height="15" fill="rgb(207,170,3)" fg:x="331" fg:w="1"/><text x="53.5511%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="53.3011%" y="389" width="0.1610%" height="15" fill="rgb(236,100,52)" fg:x="331" fg:w="1"/><text x="53.5511%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="53.4622%" y="501" width="0.1610%" height="15" fill="rgb(246,78,51)" fg:x="332" fg:w="1"/><text x="53.7122%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="53.4622%" y="485" width="0.1610%" height="15" fill="rgb(211,17,15)" fg:x="332" fg:w="1"/><text x="53.7122%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="53.4622%" y="469" width="0.1610%" height="15" fill="rgb(209,59,46)" fg:x="332" fg:w="1"/><text x="53.7122%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="53.4622%" y="453" width="0.1610%" height="15" fill="rgb(210,92,25)" fg:x="332" fg:w="1"/><text x="53.7122%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="53.4622%" y="437" width="0.1610%" height="15" fill="rgb(238,174,52)" fg:x="332" fg:w="1"/><text x="53.7122%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="53.4622%" y="421" width="0.1610%" height="15" fill="rgb(230,73,7)" fg:x="332" fg:w="1"/><text x="53.7122%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.16%)</title><rect x="53.4622%" y="405" width="0.1610%" height="15" fill="rgb(243,124,40)" fg:x="332" fg:w="1"/><text x="53.7122%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="53.4622%" y="389" width="0.1610%" height="15" fill="rgb(244,170,11)" fg:x="332" fg:w="1"/><text x="53.7122%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="53.4622%" y="373" width="0.1610%" height="15" fill="rgb(207,114,54)" fg:x="332" fg:w="1"/><text x="53.7122%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="53.4622%" y="357" width="0.1610%" height="15" fill="rgb(205,42,20)" fg:x="332" fg:w="1"/><text x="53.7122%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="53.6232%" y="453" width="0.1610%" height="15" fill="rgb(230,30,28)" fg:x="333" fg:w="1"/><text x="53.8732%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="53.6232%" y="437" width="0.1610%" height="15" fill="rgb(205,73,54)" fg:x="333" fg:w="1"/><text x="53.8732%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="53.6232%" y="421" width="0.1610%" height="15" fill="rgb(254,227,23)" fg:x="333" fg:w="1"/><text x="53.8732%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.16%)</title><rect x="53.7842%" y="437" width="0.1610%" height="15" fill="rgb(228,202,34)" fg:x="334" fg:w="1"/><text x="54.0342%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="53.7842%" y="421" width="0.1610%" height="15" fill="rgb(222,225,37)" fg:x="334" fg:w="1"/><text x="54.0342%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="53.7842%" y="405" width="0.1610%" height="15" fill="rgb(221,14,54)" fg:x="334" fg:w="1"/><text x="54.0342%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="53.7842%" y="389" width="0.1610%" height="15" fill="rgb(254,102,2)" fg:x="334" fg:w="1"/><text x="54.0342%" y="399.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update (4 samples, 0.64%)</title><rect x="53.4622%" y="581" width="0.6441%" height="15" fill="rgb(232,104,17)" fg:x="332" fg:w="4"/><text x="53.7122%" y="591.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id_mut (4 samples, 0.64%)</title><rect x="53.4622%" y="565" width="0.6441%" height="15" fill="rgb(250,220,14)" fg:x="332" fg:w="4"/><text x="53.7122%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4 samples, 0.64%)</title><rect x="53.4622%" y="549" width="0.6441%" height="15" fill="rgb(241,158,9)" fg:x="332" fg:w="4"/><text x="53.7122%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.64%)</title><rect x="53.4622%" y="533" width="0.6441%" height="15" fill="rgb(246,9,43)" fg:x="332" fg:w="4"/><text x="53.7122%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.64%)</title><rect x="53.4622%" y="517" width="0.6441%" height="15" fill="rgb(206,73,33)" fg:x="332" fg:w="4"/><text x="53.7122%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.48%)</title><rect x="53.6232%" y="501" width="0.4831%" height="15" fill="rgb(222,79,8)" fg:x="333" fg:w="3"/><text x="53.8732%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="53.6232%" y="485" width="0.4831%" height="15" fill="rgb(234,8,54)" fg:x="333" fg:w="3"/><text x="53.8732%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="53.6232%" y="469" width="0.4831%" height="15" fill="rgb(209,134,38)" fg:x="333" fg:w="3"/><text x="53.8732%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.32%)</title><rect x="53.7842%" y="453" width="0.3221%" height="15" fill="rgb(230,127,29)" fg:x="334" fg:w="2"/><text x="54.0342%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="53.9452%" y="437" width="0.1610%" height="15" fill="rgb(242,44,41)" fg:x="335" fg:w="1"/><text x="54.1952%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="53.9452%" y="421" width="0.1610%" height="15" fill="rgb(222,56,43)" fg:x="335" fg:w="1"/><text x="54.1952%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="53.9452%" y="405" width="0.1610%" height="15" fill="rgb(238,39,47)" fg:x="335" fg:w="1"/><text x="54.1952%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="53.9452%" y="389" width="0.1610%" height="15" fill="rgb(226,79,43)" fg:x="335" fg:w="1"/><text x="54.1952%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="53.9452%" y="373" width="0.1610%" height="15" fill="rgb(242,105,53)" fg:x="335" fg:w="1"/><text x="54.1952%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="54.1063%" y="501" width="0.1610%" height="15" fill="rgb(251,132,46)" fg:x="336" fg:w="1"/><text x="54.3563%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="54.1063%" y="485" width="0.1610%" height="15" fill="rgb(231,77,14)" fg:x="336" fg:w="1"/><text x="54.3563%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="54.1063%" y="469" width="0.1610%" height="15" fill="rgb(240,135,9)" fg:x="336" fg:w="1"/><text x="54.3563%" y="479.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="54.2673%" y="485" width="0.1610%" height="15" fill="rgb(248,109,14)" fg:x="337" fg:w="1"/><text x="54.5173%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="54.2673%" y="469" width="0.1610%" height="15" fill="rgb(227,146,52)" fg:x="337" fg:w="1"/><text x="54.5173%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="54.2673%" y="453" width="0.1610%" height="15" fill="rgb(232,54,3)" fg:x="337" fg:w="1"/><text x="54.5173%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="54.4283%" y="421" width="0.1610%" height="15" fill="rgb(229,201,43)" fg:x="338" fg:w="1"/><text x="54.6783%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="54.4283%" y="405" width="0.1610%" height="15" fill="rgb(252,161,33)" fg:x="338" fg:w="1"/><text x="54.6783%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="54.4283%" y="389" width="0.1610%" height="15" fill="rgb(226,146,40)" fg:x="338" fg:w="1"/><text x="54.6783%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="54.4283%" y="373" width="0.1610%" height="15" fill="rgb(219,47,25)" fg:x="338" fg:w="1"/><text x="54.6783%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="54.2673%" y="501" width="0.4831%" height="15" fill="rgb(250,135,13)" fg:x="337" fg:w="3"/><text x="54.5173%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="54.4283%" y="485" width="0.3221%" height="15" fill="rgb(219,229,18)" fg:x="338" fg:w="2"/><text x="54.6783%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="54.4283%" y="469" width="0.3221%" height="15" fill="rgb(217,152,27)" fg:x="338" fg:w="2"/><text x="54.6783%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="54.4283%" y="453" width="0.3221%" height="15" fill="rgb(225,71,47)" fg:x="338" fg:w="2"/><text x="54.6783%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="54.4283%" y="437" width="0.3221%" height="15" fill="rgb(220,139,14)" fg:x="338" fg:w="2"/><text x="54.6783%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="54.5894%" y="421" width="0.1610%" height="15" fill="rgb(247,54,32)" fg:x="339" fg:w="1"/><text x="54.8394%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="54.5894%" y="405" width="0.1610%" height="15" fill="rgb(252,131,39)" fg:x="339" fg:w="1"/><text x="54.8394%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="54.5894%" y="389" width="0.1610%" height="15" fill="rgb(210,108,39)" fg:x="339" fg:w="1"/><text x="54.8394%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="54.7504%" y="437" width="0.1610%" height="15" fill="rgb(205,23,29)" fg:x="340" fg:w="1"/><text x="55.0004%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="54.7504%" y="421" width="0.1610%" height="15" fill="rgb(246,139,46)" fg:x="340" fg:w="1"/><text x="55.0004%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="54.7504%" y="405" width="0.1610%" height="15" fill="rgb(250,81,26)" fg:x="340" fg:w="1"/><text x="55.0004%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="54.7504%" y="389" width="0.1610%" height="15" fill="rgb(214,104,7)" fg:x="340" fg:w="1"/><text x="55.0004%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (306 samples, 49.28%)</title><rect x="5.7971%" y="613" width="49.2754%" height="15" fill="rgb(233,189,8)" fg:x="36" fg:w="306"/><text x="6.0471%" y="623.50">core::option::Option&lt;T&gt;::map</text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards::{{closure}} (305 samples, 49.11%)</title><rect x="5.9581%" y="597" width="49.1143%" height="15" fill="rgb(228,141,17)" fg:x="37" fg:w="305"/><text x="6.2081%" y="607.50">micrograd_rs::engine::RunnableGraph::_backwards::{{closure}}</text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (6 samples, 0.97%)</title><rect x="54.1063%" y="581" width="0.9662%" height="15" fill="rgb(247,157,1)" fg:x="336" fg:w="6"/><text x="54.3563%" y="591.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (6 samples, 0.97%)</title><rect x="54.1063%" y="565" width="0.9662%" height="15" fill="rgb(249,225,5)" fg:x="336" fg:w="6"/><text x="54.3563%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.97%)</title><rect x="54.1063%" y="549" width="0.9662%" height="15" fill="rgb(242,55,13)" fg:x="336" fg:w="6"/><text x="54.3563%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.97%)</title><rect x="54.1063%" y="533" width="0.9662%" height="15" fill="rgb(230,49,50)" fg:x="336" fg:w="6"/><text x="54.3563%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.97%)</title><rect x="54.1063%" y="517" width="0.9662%" height="15" fill="rgb(241,111,38)" fg:x="336" fg:w="6"/><text x="54.3563%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.32%)</title><rect x="54.7504%" y="501" width="0.3221%" height="15" fill="rgb(252,155,4)" fg:x="340" fg:w="2"/><text x="55.0004%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="54.7504%" y="485" width="0.3221%" height="15" fill="rgb(212,69,32)" fg:x="340" fg:w="2"/><text x="55.0004%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="54.7504%" y="469" width="0.3221%" height="15" fill="rgb(243,107,47)" fg:x="340" fg:w="2"/><text x="55.0004%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="54.7504%" y="453" width="0.3221%" height="15" fill="rgb(247,130,12)" fg:x="340" fg:w="2"/><text x="55.0004%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="54.9114%" y="437" width="0.1610%" height="15" fill="rgb(233,74,16)" fg:x="341" fg:w="1"/><text x="55.1614%" y="447.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.16%)</title><rect x="54.9114%" y="421" width="0.1610%" height="15" fill="rgb(208,58,18)" fg:x="341" fg:w="1"/><text x="55.1614%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="54.9114%" y="405" width="0.1610%" height="15" fill="rgb(242,225,1)" fg:x="341" fg:w="1"/><text x="55.1614%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="54.9114%" y="389" width="0.1610%" height="15" fill="rgb(249,39,40)" fg:x="341" fg:w="1"/><text x="55.1614%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="54.9114%" y="373" width="0.1610%" height="15" fill="rgb(207,72,44)" fg:x="341" fg:w="1"/><text x="55.1614%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="55.0725%" y="453" width="0.1610%" height="15" fill="rgb(215,193,12)" fg:x="342" fg:w="1"/><text x="55.3225%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="55.0725%" y="437" width="0.1610%" height="15" fill="rgb(248,41,39)" fg:x="342" fg:w="1"/><text x="55.3225%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="55.0725%" y="421" width="0.1610%" height="15" fill="rgb(253,85,4)" fg:x="342" fg:w="1"/><text x="55.3225%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="55.0725%" y="405" width="0.1610%" height="15" fill="rgb(243,70,31)" fg:x="342" fg:w="1"/><text x="55.3225%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="55.0725%" y="533" width="0.3221%" height="15" fill="rgb(253,195,26)" fg:x="342" fg:w="2"/><text x="55.3225%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="55.0725%" y="517" width="0.3221%" height="15" fill="rgb(243,42,11)" fg:x="342" fg:w="2"/><text x="55.3225%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="55.0725%" y="501" width="0.3221%" height="15" fill="rgb(239,66,17)" fg:x="342" fg:w="2"/><text x="55.3225%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="55.0725%" y="485" width="0.3221%" height="15" fill="rgb(217,132,21)" fg:x="342" fg:w="2"/><text x="55.3225%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="55.0725%" y="469" width="0.3221%" height="15" fill="rgb(252,202,21)" fg:x="342" fg:w="2"/><text x="55.3225%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="55.2335%" y="453" width="0.1610%" height="15" fill="rgb(233,98,36)" fg:x="343" fg:w="1"/><text x="55.4835%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="55.2335%" y="437" width="0.1610%" height="15" fill="rgb(216,153,54)" fg:x="343" fg:w="1"/><text x="55.4835%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="55.2335%" y="421" width="0.1610%" height="15" fill="rgb(250,99,7)" fg:x="343" fg:w="1"/><text x="55.4835%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="55.2335%" y="405" width="0.1610%" height="15" fill="rgb(207,56,50)" fg:x="343" fg:w="1"/><text x="55.4835%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="55.3945%" y="469" width="0.1610%" height="15" fill="rgb(244,61,34)" fg:x="344" fg:w="1"/><text x="55.6445%" y="479.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="55.3945%" y="453" width="0.1610%" height="15" fill="rgb(241,50,38)" fg:x="344" fg:w="1"/><text x="55.6445%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="55.3945%" y="437" width="0.1610%" height="15" fill="rgb(212,166,30)" fg:x="344" fg:w="1"/><text x="55.6445%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="55.3945%" y="421" width="0.1610%" height="15" fill="rgb(249,127,32)" fg:x="344" fg:w="1"/><text x="55.6445%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="55.5556%" y="469" width="0.1610%" height="15" fill="rgb(209,103,0)" fg:x="345" fg:w="1"/><text x="55.8056%" y="479.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.16%)</title><rect x="55.5556%" y="453" width="0.1610%" height="15" fill="rgb(238,209,51)" fg:x="345" fg:w="1"/><text x="55.8056%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="55.5556%" y="437" width="0.1610%" height="15" fill="rgb(237,56,23)" fg:x="345" fg:w="1"/><text x="55.8056%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="55.5556%" y="421" width="0.1610%" height="15" fill="rgb(215,153,46)" fg:x="345" fg:w="1"/><text x="55.8056%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="55.5556%" y="405" width="0.1610%" height="15" fill="rgb(224,49,31)" fg:x="345" fg:w="1"/><text x="55.8056%" y="415.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::grad_for_id (7 samples, 1.13%)</title><rect x="55.0725%" y="613" width="1.1272%" height="15" fill="rgb(250,18,42)" fg:x="342" fg:w="7"/><text x="55.3225%" y="623.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (7 samples, 1.13%)</title><rect x="55.0725%" y="597" width="1.1272%" height="15" fill="rgb(215,176,39)" fg:x="342" fg:w="7"/><text x="55.3225%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 1.13%)</title><rect x="55.0725%" y="581" width="1.1272%" height="15" fill="rgb(223,77,29)" fg:x="342" fg:w="7"/><text x="55.3225%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 1.13%)</title><rect x="55.0725%" y="565" width="1.1272%" height="15" fill="rgb(234,94,52)" fg:x="342" fg:w="7"/><text x="55.3225%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 1.13%)</title><rect x="55.0725%" y="549" width="1.1272%" height="15" fill="rgb(220,154,50)" fg:x="342" fg:w="7"/><text x="55.3225%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.81%)</title><rect x="55.3945%" y="533" width="0.8052%" height="15" fill="rgb(212,11,10)" fg:x="344" fg:w="5"/><text x="55.6445%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.81%)</title><rect x="55.3945%" y="517" width="0.8052%" height="15" fill="rgb(205,166,19)" fg:x="344" fg:w="5"/><text x="55.6445%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.81%)</title><rect x="55.3945%" y="501" width="0.8052%" height="15" fill="rgb(244,198,16)" fg:x="344" fg:w="5"/><text x="55.6445%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.81%)</title><rect x="55.3945%" y="485" width="0.8052%" height="15" fill="rgb(219,69,12)" fg:x="344" fg:w="5"/><text x="55.6445%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.48%)</title><rect x="55.7166%" y="469" width="0.4831%" height="15" fill="rgb(245,30,7)" fg:x="346" fg:w="3"/><text x="55.9666%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.48%)</title><rect x="55.7166%" y="453" width="0.4831%" height="15" fill="rgb(218,221,48)" fg:x="346" fg:w="3"/><text x="55.9666%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="55.7166%" y="437" width="0.4831%" height="15" fill="rgb(216,66,15)" fg:x="346" fg:w="3"/><text x="55.9666%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="55.7166%" y="421" width="0.4831%" height="15" fill="rgb(226,122,50)" fg:x="346" fg:w="3"/><text x="55.9666%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="55.7166%" y="405" width="0.4831%" height="15" fill="rgb(239,156,16)" fg:x="346" fg:w="3"/><text x="55.9666%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="56.1997%" y="501" width="0.3221%" height="15" fill="rgb(224,27,38)" fg:x="349" fg:w="2"/><text x="56.4497%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="56.1997%" y="485" width="0.3221%" height="15" fill="rgb(224,39,27)" fg:x="349" fg:w="2"/><text x="56.4497%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="56.1997%" y="469" width="0.3221%" height="15" fill="rgb(215,92,29)" fg:x="349" fg:w="2"/><text x="56.4497%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="56.1997%" y="453" width="0.3221%" height="15" fill="rgb(207,159,16)" fg:x="349" fg:w="2"/><text x="56.4497%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="56.1997%" y="437" width="0.3221%" height="15" fill="rgb(238,163,47)" fg:x="349" fg:w="2"/><text x="56.4497%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="56.1997%" y="421" width="0.3221%" height="15" fill="rgb(219,91,49)" fg:x="349" fg:w="2"/><text x="56.4497%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="56.1997%" y="405" width="0.3221%" height="15" fill="rgb(227,167,31)" fg:x="349" fg:w="2"/><text x="56.4497%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="56.1997%" y="533" width="0.4831%" height="15" fill="rgb(234,80,54)" fg:x="349" fg:w="3"/><text x="56.4497%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="56.1997%" y="517" width="0.4831%" height="15" fill="rgb(212,114,2)" fg:x="349" fg:w="3"/><text x="56.4497%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="56.5217%" y="501" width="0.1610%" height="15" fill="rgb(234,50,24)" fg:x="351" fg:w="1"/><text x="56.7717%" y="511.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="56.5217%" y="485" width="0.1610%" height="15" fill="rgb(221,68,8)" fg:x="351" fg:w="1"/><text x="56.7717%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="56.5217%" y="469" width="0.1610%" height="15" fill="rgb(254,180,31)" fg:x="351" fg:w="1"/><text x="56.7717%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="56.5217%" y="453" width="0.1610%" height="15" fill="rgb(247,130,50)" fg:x="351" fg:w="1"/><text x="56.7717%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="56.5217%" y="437" width="0.1610%" height="15" fill="rgb(211,109,4)" fg:x="351" fg:w="1"/><text x="56.7717%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="56.5217%" y="421" width="0.1610%" height="15" fill="rgb(238,50,21)" fg:x="351" fg:w="1"/><text x="56.7717%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="56.5217%" y="405" width="0.1610%" height="15" fill="rgb(225,57,45)" fg:x="351" fg:w="1"/><text x="56.7717%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="56.5217%" y="389" width="0.1610%" height="15" fill="rgb(209,196,50)" fg:x="351" fg:w="1"/><text x="56.7717%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.16%)</title><rect x="56.5217%" y="373" width="0.1610%" height="15" fill="rgb(242,140,13)" fg:x="351" fg:w="1"/><text x="56.7717%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="56.5217%" y="357" width="0.1610%" height="15" fill="rgb(217,111,7)" fg:x="351" fg:w="1"/><text x="56.7717%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="56.5217%" y="341" width="0.1610%" height="15" fill="rgb(253,193,51)" fg:x="351" fg:w="1"/><text x="56.7717%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="56.5217%" y="325" width="0.1610%" height="15" fill="rgb(252,70,29)" fg:x="351" fg:w="1"/><text x="56.7717%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="56.6828%" y="469" width="0.1610%" height="15" fill="rgb(232,127,12)" fg:x="352" fg:w="1"/><text x="56.9328%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="56.6828%" y="453" width="0.1610%" height="15" fill="rgb(211,180,21)" fg:x="352" fg:w="1"/><text x="56.9328%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="56.6828%" y="437" width="0.1610%" height="15" fill="rgb(229,72,13)" fg:x="352" fg:w="1"/><text x="56.9328%" y="447.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (5 samples, 0.81%)</title><rect x="56.1997%" y="613" width="0.8052%" height="15" fill="rgb(240,211,49)" fg:x="349" fg:w="5"/><text x="56.4497%" y="623.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (5 samples, 0.81%)</title><rect x="56.1997%" y="597" width="0.8052%" height="15" fill="rgb(219,149,40)" fg:x="349" fg:w="5"/><text x="56.4497%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.81%)</title><rect x="56.1997%" y="581" width="0.8052%" height="15" fill="rgb(210,127,46)" fg:x="349" fg:w="5"/><text x="56.4497%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.81%)</title><rect x="56.1997%" y="565" width="0.8052%" height="15" fill="rgb(220,106,7)" fg:x="349" fg:w="5"/><text x="56.4497%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.81%)</title><rect x="56.1997%" y="549" width="0.8052%" height="15" fill="rgb(249,31,22)" fg:x="349" fg:w="5"/><text x="56.4497%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.32%)</title><rect x="56.6828%" y="533" width="0.3221%" height="15" fill="rgb(253,1,49)" fg:x="352" fg:w="2"/><text x="56.9328%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="56.6828%" y="517" width="0.3221%" height="15" fill="rgb(227,144,33)" fg:x="352" fg:w="2"/><text x="56.9328%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="56.6828%" y="501" width="0.3221%" height="15" fill="rgb(249,163,44)" fg:x="352" fg:w="2"/><text x="56.9328%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="56.6828%" y="485" width="0.3221%" height="15" fill="rgb(234,15,39)" fg:x="352" fg:w="2"/><text x="56.9328%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="56.8438%" y="469" width="0.1610%" height="15" fill="rgb(207,66,16)" fg:x="353" fg:w="1"/><text x="57.0938%" y="479.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.16%)</title><rect x="56.8438%" y="453" width="0.1610%" height="15" fill="rgb(233,112,24)" fg:x="353" fg:w="1"/><text x="57.0938%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="56.8438%" y="437" width="0.1610%" height="15" fill="rgb(230,90,22)" fg:x="353" fg:w="1"/><text x="57.0938%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="56.8438%" y="421" width="0.1610%" height="15" fill="rgb(229,61,13)" fg:x="353" fg:w="1"/><text x="57.0938%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="56.8438%" y="405" width="0.1610%" height="15" fill="rgb(225,57,24)" fg:x="353" fg:w="1"/><text x="57.0938%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="57.0048%" y="565" width="0.1610%" height="15" fill="rgb(208,169,48)" fg:x="354" fg:w="1"/><text x="57.2548%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="57.0048%" y="549" width="0.1610%" height="15" fill="rgb(244,218,51)" fg:x="354" fg:w="1"/><text x="57.2548%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="57.0048%" y="533" width="0.1610%" height="15" fill="rgb(214,148,10)" fg:x="354" fg:w="1"/><text x="57.2548%" y="543.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="57.0048%" y="517" width="0.1610%" height="15" fill="rgb(225,174,27)" fg:x="354" fg:w="1"/><text x="57.2548%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="57.0048%" y="501" width="0.1610%" height="15" fill="rgb(230,96,26)" fg:x="354" fg:w="1"/><text x="57.2548%" y="511.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="57.0048%" y="485" width="0.1610%" height="15" fill="rgb(232,10,30)" fg:x="354" fg:w="1"/><text x="57.2548%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="57.0048%" y="469" width="0.1610%" height="15" fill="rgb(222,8,50)" fg:x="354" fg:w="1"/><text x="57.2548%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="57.0048%" y="453" width="0.1610%" height="15" fill="rgb(213,81,27)" fg:x="354" fg:w="1"/><text x="57.2548%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="57.0048%" y="437" width="0.1610%" height="15" fill="rgb(245,50,10)" fg:x="354" fg:w="1"/><text x="57.2548%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="57.0048%" y="421" width="0.1610%" height="15" fill="rgb(216,100,18)" fg:x="354" fg:w="1"/><text x="57.2548%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="57.0048%" y="405" width="0.1610%" height="15" fill="rgb(236,147,54)" fg:x="354" fg:w="1"/><text x="57.2548%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="57.0048%" y="389" width="0.1610%" height="15" fill="rgb(205,143,26)" fg:x="354" fg:w="1"/><text x="57.2548%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="57.1659%" y="549" width="0.3221%" height="15" fill="rgb(236,26,9)" fg:x="355" fg:w="2"/><text x="57.4159%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="57.1659%" y="533" width="0.3221%" height="15" fill="rgb(221,165,53)" fg:x="355" fg:w="2"/><text x="57.4159%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="57.1659%" y="517" width="0.3221%" height="15" fill="rgb(214,110,17)" fg:x="355" fg:w="2"/><text x="57.4159%" y="527.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards (322 samples, 51.85%)</title><rect x="5.7971%" y="629" width="51.8519%" height="15" fill="rgb(237,197,12)" fg:x="36" fg:w="322"/><text x="6.0471%" y="639.50">micrograd_rs::engine::RunnableGraph::_backwards</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.64%)</title><rect x="57.0048%" y="613" width="0.6441%" height="15" fill="rgb(205,84,17)" fg:x="354" fg:w="4"/><text x="57.2548%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.64%)</title><rect x="57.0048%" y="597" width="0.6441%" height="15" fill="rgb(237,18,45)" fg:x="354" fg:w="4"/><text x="57.2548%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.64%)</title><rect x="57.0048%" y="581" width="0.6441%" height="15" fill="rgb(221,87,14)" fg:x="354" fg:w="4"/><text x="57.2548%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.48%)</title><rect x="57.1659%" y="565" width="0.4831%" height="15" fill="rgb(238,186,15)" fg:x="355" fg:w="3"/><text x="57.4159%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="57.4879%" y="549" width="0.1610%" height="15" fill="rgb(208,115,11)" fg:x="357" fg:w="1"/><text x="57.7379%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="57.4879%" y="533" width="0.1610%" height="15" fill="rgb(254,175,0)" fg:x="357" fg:w="1"/><text x="57.7379%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="57.4879%" y="517" width="0.1610%" height="15" fill="rgb(227,24,42)" fg:x="357" fg:w="1"/><text x="57.7379%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="57.4879%" y="501" width="0.1610%" height="15" fill="rgb(223,211,37)" fg:x="357" fg:w="1"/><text x="57.7379%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="57.4879%" y="485" width="0.1610%" height="15" fill="rgb(235,49,27)" fg:x="357" fg:w="1"/><text x="57.7379%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="57.4879%" y="469" width="0.1610%" height="15" fill="rgb(254,97,51)" fg:x="357" fg:w="1"/><text x="57.7379%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="57.6490%" y="517" width="0.3221%" height="15" fill="rgb(249,51,40)" fg:x="358" fg:w="2"/><text x="57.8990%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="57.6490%" y="501" width="0.3221%" height="15" fill="rgb(210,128,45)" fg:x="358" fg:w="2"/><text x="57.8990%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="57.6490%" y="485" width="0.3221%" height="15" fill="rgb(224,137,50)" fg:x="358" fg:w="2"/><text x="57.8990%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="57.6490%" y="469" width="0.3221%" height="15" fill="rgb(242,15,9)" fg:x="358" fg:w="2"/><text x="57.8990%" y="479.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="57.6490%" y="453" width="0.3221%" height="15" fill="rgb(233,187,41)" fg:x="358" fg:w="2"/><text x="57.8990%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="57.6490%" y="437" width="0.3221%" height="15" fill="rgb(227,2,29)" fg:x="358" fg:w="2"/><text x="57.8990%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="57.6490%" y="421" width="0.3221%" height="15" fill="rgb(222,70,3)" fg:x="358" fg:w="2"/><text x="57.8990%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.64%)</title><rect x="57.6490%" y="549" width="0.6441%" height="15" fill="rgb(213,11,42)" fg:x="358" fg:w="4"/><text x="57.8990%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.64%)</title><rect x="57.6490%" y="533" width="0.6441%" height="15" fill="rgb(225,150,9)" fg:x="358" fg:w="4"/><text x="57.8990%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.32%)</title><rect x="57.9710%" y="517" width="0.3221%" height="15" fill="rgb(230,162,45)" fg:x="360" fg:w="2"/><text x="58.2210%" y="527.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (2 samples, 0.32%)</title><rect x="57.9710%" y="501" width="0.3221%" height="15" fill="rgb(222,14,52)" fg:x="360" fg:w="2"/><text x="58.2210%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.32%)</title><rect x="57.9710%" y="485" width="0.3221%" height="15" fill="rgb(254,198,14)" fg:x="360" fg:w="2"/><text x="58.2210%" y="495.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.32%)</title><rect x="57.9710%" y="469" width="0.3221%" height="15" fill="rgb(220,217,30)" fg:x="360" fg:w="2"/><text x="58.2210%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="57.9710%" y="453" width="0.3221%" height="15" fill="rgb(215,146,41)" fg:x="360" fg:w="2"/><text x="58.2210%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="57.9710%" y="437" width="0.3221%" height="15" fill="rgb(217,27,36)" fg:x="360" fg:w="2"/><text x="58.2210%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="57.9710%" y="421" width="0.3221%" height="15" fill="rgb(219,218,39)" fg:x="360" fg:w="2"/><text x="58.2210%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.32%)</title><rect x="57.9710%" y="405" width="0.3221%" height="15" fill="rgb(219,4,42)" fg:x="360" fg:w="2"/><text x="58.2210%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.32%)</title><rect x="57.9710%" y="389" width="0.3221%" height="15" fill="rgb(249,119,36)" fg:x="360" fg:w="2"/><text x="58.2210%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="57.9710%" y="373" width="0.3221%" height="15" fill="rgb(209,23,33)" fg:x="360" fg:w="2"/><text x="58.2210%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="57.9710%" y="357" width="0.3221%" height="15" fill="rgb(211,10,0)" fg:x="360" fg:w="2"/><text x="58.2210%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="57.9710%" y="341" width="0.3221%" height="15" fill="rgb(208,99,37)" fg:x="360" fg:w="2"/><text x="58.2210%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="58.2931%" y="517" width="0.1610%" height="15" fill="rgb(213,132,31)" fg:x="362" fg:w="1"/><text x="58.5431%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="58.2931%" y="501" width="0.1610%" height="15" fill="rgb(243,129,40)" fg:x="362" fg:w="1"/><text x="58.5431%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="58.2931%" y="485" width="0.1610%" height="15" fill="rgb(210,66,33)" fg:x="362" fg:w="1"/><text x="58.5431%" y="495.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.16%)</title><rect x="58.4541%" y="501" width="0.1610%" height="15" fill="rgb(209,189,4)" fg:x="363" fg:w="1"/><text x="58.7041%" y="511.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.16%)</title><rect x="58.4541%" y="485" width="0.1610%" height="15" fill="rgb(214,107,37)" fg:x="363" fg:w="1"/><text x="58.7041%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="58.4541%" y="469" width="0.1610%" height="15" fill="rgb(245,88,54)" fg:x="363" fg:w="1"/><text x="58.7041%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="58.4541%" y="453" width="0.1610%" height="15" fill="rgb(205,146,20)" fg:x="363" fg:w="1"/><text x="58.7041%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="58.4541%" y="437" width="0.1610%" height="15" fill="rgb(220,161,25)" fg:x="363" fg:w="1"/><text x="58.7041%" y="447.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update (7 samples, 1.13%)</title><rect x="57.6490%" y="629" width="1.1272%" height="15" fill="rgb(215,152,15)" fg:x="358" fg:w="7"/><text x="57.8990%" y="639.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id_mut (7 samples, 1.13%)</title><rect x="57.6490%" y="613" width="1.1272%" height="15" fill="rgb(233,192,44)" fg:x="358" fg:w="7"/><text x="57.8990%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (7 samples, 1.13%)</title><rect x="57.6490%" y="597" width="1.1272%" height="15" fill="rgb(240,170,46)" fg:x="358" fg:w="7"/><text x="57.8990%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (7 samples, 1.13%)</title><rect x="57.6490%" y="581" width="1.1272%" height="15" fill="rgb(207,104,33)" fg:x="358" fg:w="7"/><text x="57.8990%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (7 samples, 1.13%)</title><rect x="57.6490%" y="565" width="1.1272%" height="15" fill="rgb(219,21,39)" fg:x="358" fg:w="7"/><text x="57.8990%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.48%)</title><rect x="58.2931%" y="549" width="0.4831%" height="15" fill="rgb(214,133,29)" fg:x="362" fg:w="3"/><text x="58.5431%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="58.2931%" y="533" width="0.4831%" height="15" fill="rgb(226,93,6)" fg:x="362" fg:w="3"/><text x="58.5431%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="58.4541%" y="517" width="0.3221%" height="15" fill="rgb(252,222,34)" fg:x="363" fg:w="2"/><text x="58.7041%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="58.6151%" y="501" width="0.1610%" height="15" fill="rgb(252,92,48)" fg:x="364" fg:w="1"/><text x="58.8651%" y="511.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="58.6151%" y="485" width="0.1610%" height="15" fill="rgb(245,223,24)" fg:x="364" fg:w="1"/><text x="58.8651%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="58.6151%" y="469" width="0.1610%" height="15" fill="rgb(205,176,3)" fg:x="364" fg:w="1"/><text x="58.8651%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="58.6151%" y="453" width="0.1610%" height="15" fill="rgb(235,151,15)" fg:x="364" fg:w="1"/><text x="58.8651%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="58.7762%" y="549" width="0.1610%" height="15" fill="rgb(237,209,11)" fg:x="365" fg:w="1"/><text x="59.0262%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="58.7762%" y="533" width="0.1610%" height="15" fill="rgb(243,227,24)" fg:x="365" fg:w="1"/><text x="59.0262%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="58.7762%" y="517" width="0.1610%" height="15" fill="rgb(239,193,16)" fg:x="365" fg:w="1"/><text x="59.0262%" y="527.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="58.7762%" y="501" width="0.1610%" height="15" fill="rgb(231,27,9)" fg:x="365" fg:w="1"/><text x="59.0262%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="58.7762%" y="485" width="0.1610%" height="15" fill="rgb(219,169,10)" fg:x="365" fg:w="1"/><text x="59.0262%" y="495.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="58.7762%" y="469" width="0.1610%" height="15" fill="rgb(244,229,43)" fg:x="365" fg:w="1"/><text x="59.0262%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="58.7762%" y="453" width="0.1610%" height="15" fill="rgb(254,38,20)" fg:x="365" fg:w="1"/><text x="59.0262%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="58.7762%" y="437" width="0.1610%" height="15" fill="rgb(250,47,30)" fg:x="365" fg:w="1"/><text x="59.0262%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="58.7762%" y="421" width="0.1610%" height="15" fill="rgb(224,124,36)" fg:x="365" fg:w="1"/><text x="59.0262%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="58.7762%" y="405" width="0.1610%" height="15" fill="rgb(246,68,51)" fg:x="365" fg:w="1"/><text x="59.0262%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="58.7762%" y="389" width="0.1610%" height="15" fill="rgb(253,43,49)" fg:x="365" fg:w="1"/><text x="59.0262%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="58.7762%" y="373" width="0.1610%" height="15" fill="rgb(219,54,36)" fg:x="365" fg:w="1"/><text x="59.0262%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="58.7762%" y="357" width="0.1610%" height="15" fill="rgb(227,133,34)" fg:x="365" fg:w="1"/><text x="59.0262%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (331 samples, 53.30%)</title><rect x="5.7971%" y="661" width="53.3011%" height="15" fill="rgb(247,227,15)" fg:x="36" fg:w="331"/><text x="6.0471%" y="671.50">core::option::Option&lt;T&gt;::map</text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards::{{closure}} (331 samples, 53.30%)</title><rect x="5.7971%" y="645" width="53.3011%" height="15" fill="rgb(229,96,14)" fg:x="36" fg:w="331"/><text x="6.0471%" y="655.50">micrograd_rs::engine::RunnableGraph::_backwards::{{closure}}</text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (2 samples, 0.32%)</title><rect x="58.7762%" y="629" width="0.3221%" height="15" fill="rgb(220,79,17)" fg:x="365" fg:w="2"/><text x="59.0262%" y="639.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (2 samples, 0.32%)</title><rect x="58.7762%" y="613" width="0.3221%" height="15" fill="rgb(205,131,53)" fg:x="365" fg:w="2"/><text x="59.0262%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.32%)</title><rect x="58.7762%" y="597" width="0.3221%" height="15" fill="rgb(209,50,29)" fg:x="365" fg:w="2"/><text x="59.0262%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.32%)</title><rect x="58.7762%" y="581" width="0.3221%" height="15" fill="rgb(245,86,46)" fg:x="365" fg:w="2"/><text x="59.0262%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.32%)</title><rect x="58.7762%" y="565" width="0.3221%" height="15" fill="rgb(235,66,46)" fg:x="365" fg:w="2"/><text x="59.0262%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.16%)</title><rect x="58.9372%" y="549" width="0.1610%" height="15" fill="rgb(232,148,31)" fg:x="366" fg:w="1"/><text x="59.1872%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="58.9372%" y="533" width="0.1610%" height="15" fill="rgb(217,149,8)" fg:x="366" fg:w="1"/><text x="59.1872%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="58.9372%" y="517" width="0.1610%" height="15" fill="rgb(209,183,11)" fg:x="366" fg:w="1"/><text x="59.1872%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="58.9372%" y="501" width="0.1610%" height="15" fill="rgb(208,55,20)" fg:x="366" fg:w="1"/><text x="59.1872%" y="511.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="58.9372%" y="485" width="0.1610%" height="15" fill="rgb(218,39,14)" fg:x="366" fg:w="1"/><text x="59.1872%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="58.9372%" y="469" width="0.1610%" height="15" fill="rgb(216,169,33)" fg:x="366" fg:w="1"/><text x="59.1872%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="58.9372%" y="453" width="0.1610%" height="15" fill="rgb(233,80,24)" fg:x="366" fg:w="1"/><text x="59.1872%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="59.0982%" y="549" width="0.1610%" height="15" fill="rgb(213,179,31)" fg:x="367" fg:w="1"/><text x="59.3482%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="59.0982%" y="533" width="0.1610%" height="15" fill="rgb(209,19,5)" fg:x="367" fg:w="1"/><text x="59.3482%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="59.0982%" y="517" width="0.1610%" height="15" fill="rgb(219,18,35)" fg:x="367" fg:w="1"/><text x="59.3482%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="59.2593%" y="549" width="0.1610%" height="15" fill="rgb(209,169,16)" fg:x="368" fg:w="1"/><text x="59.5093%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="59.2593%" y="533" width="0.1610%" height="15" fill="rgb(245,90,51)" fg:x="368" fg:w="1"/><text x="59.5093%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="59.2593%" y="517" width="0.1610%" height="15" fill="rgb(220,99,45)" fg:x="368" fg:w="1"/><text x="59.5093%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="59.2593%" y="501" width="0.1610%" height="15" fill="rgb(249,89,25)" fg:x="368" fg:w="1"/><text x="59.5093%" y="511.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="59.2593%" y="485" width="0.1610%" height="15" fill="rgb(239,193,0)" fg:x="368" fg:w="1"/><text x="59.5093%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="59.2593%" y="469" width="0.1610%" height="15" fill="rgb(231,126,1)" fg:x="368" fg:w="1"/><text x="59.5093%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="59.2593%" y="453" width="0.1610%" height="15" fill="rgb(243,166,3)" fg:x="368" fg:w="1"/><text x="59.5093%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="59.4203%" y="469" width="0.1610%" height="15" fill="rgb(223,22,34)" fg:x="369" fg:w="1"/><text x="59.6703%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="59.4203%" y="453" width="0.1610%" height="15" fill="rgb(251,52,51)" fg:x="369" fg:w="1"/><text x="59.6703%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="59.4203%" y="437" width="0.1610%" height="15" fill="rgb(221,165,28)" fg:x="369" fg:w="1"/><text x="59.6703%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="59.4203%" y="421" width="0.1610%" height="15" fill="rgb(218,121,47)" fg:x="369" fg:w="1"/><text x="59.6703%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="59.4203%" y="405" width="0.1610%" height="15" fill="rgb(209,120,9)" fg:x="369" fg:w="1"/><text x="59.6703%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="59.4203%" y="389" width="0.1610%" height="15" fill="rgb(236,68,12)" fg:x="369" fg:w="1"/><text x="59.6703%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.64%)</title><rect x="59.0982%" y="581" width="0.6441%" height="15" fill="rgb(225,194,26)" fg:x="367" fg:w="4"/><text x="59.3482%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.64%)</title><rect x="59.0982%" y="565" width="0.6441%" height="15" fill="rgb(231,84,39)" fg:x="367" fg:w="4"/><text x="59.3482%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.32%)</title><rect x="59.4203%" y="549" width="0.3221%" height="15" fill="rgb(210,11,45)" fg:x="369" fg:w="2"/><text x="59.6703%" y="559.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (2 samples, 0.32%)</title><rect x="59.4203%" y="533" width="0.3221%" height="15" fill="rgb(224,54,52)" fg:x="369" fg:w="2"/><text x="59.6703%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.32%)</title><rect x="59.4203%" y="517" width="0.3221%" height="15" fill="rgb(238,102,14)" fg:x="369" fg:w="2"/><text x="59.6703%" y="527.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.32%)</title><rect x="59.4203%" y="501" width="0.3221%" height="15" fill="rgb(243,160,52)" fg:x="369" fg:w="2"/><text x="59.6703%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="59.4203%" y="485" width="0.3221%" height="15" fill="rgb(216,114,19)" fg:x="369" fg:w="2"/><text x="59.6703%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="59.5813%" y="469" width="0.1610%" height="15" fill="rgb(244,166,37)" fg:x="370" fg:w="1"/><text x="59.8313%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="59.5813%" y="453" width="0.1610%" height="15" fill="rgb(246,29,44)" fg:x="370" fg:w="1"/><text x="59.8313%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="59.5813%" y="437" width="0.1610%" height="15" fill="rgb(215,56,53)" fg:x="370" fg:w="1"/><text x="59.8313%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="59.7424%" y="517" width="0.1610%" height="15" fill="rgb(217,60,2)" fg:x="371" fg:w="1"/><text x="59.9924%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="59.7424%" y="501" width="0.1610%" height="15" fill="rgb(207,26,24)" fg:x="371" fg:w="1"/><text x="59.9924%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="59.7424%" y="485" width="0.1610%" height="15" fill="rgb(252,210,15)" fg:x="371" fg:w="1"/><text x="59.9924%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="59.9034%" y="517" width="0.1610%" height="15" fill="rgb(253,209,26)" fg:x="372" fg:w="1"/><text x="60.1534%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="59.9034%" y="501" width="0.1610%" height="15" fill="rgb(238,170,14)" fg:x="372" fg:w="1"/><text x="60.1534%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="59.9034%" y="485" width="0.1610%" height="15" fill="rgb(216,178,15)" fg:x="372" fg:w="1"/><text x="60.1534%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="59.9034%" y="469" width="0.1610%" height="15" fill="rgb(250,197,2)" fg:x="372" fg:w="1"/><text x="60.1534%" y="479.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::grad_for_id (9 samples, 1.45%)</title><rect x="59.0982%" y="661" width="1.4493%" height="15" fill="rgb(212,70,42)" fg:x="367" fg:w="9"/><text x="59.3482%" y="671.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (9 samples, 1.45%)</title><rect x="59.0982%" y="645" width="1.4493%" height="15" fill="rgb(227,213,9)" fg:x="367" fg:w="9"/><text x="59.3482%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 1.45%)</title><rect x="59.0982%" y="629" width="1.4493%" height="15" fill="rgb(245,99,25)" fg:x="367" fg:w="9"/><text x="59.3482%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 1.45%)</title><rect x="59.0982%" y="613" width="1.4493%" height="15" fill="rgb(250,82,29)" fg:x="367" fg:w="9"/><text x="59.3482%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 1.45%)</title><rect x="59.0982%" y="597" width="1.4493%" height="15" fill="rgb(241,226,54)" fg:x="367" fg:w="9"/><text x="59.3482%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.81%)</title><rect x="59.7424%" y="581" width="0.8052%" height="15" fill="rgb(221,99,41)" fg:x="371" fg:w="5"/><text x="59.9924%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.81%)</title><rect x="59.7424%" y="565" width="0.8052%" height="15" fill="rgb(213,90,21)" fg:x="371" fg:w="5"/><text x="59.9924%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.81%)</title><rect x="59.7424%" y="549" width="0.8052%" height="15" fill="rgb(205,208,24)" fg:x="371" fg:w="5"/><text x="59.9924%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.81%)</title><rect x="59.7424%" y="533" width="0.8052%" height="15" fill="rgb(246,31,12)" fg:x="371" fg:w="5"/><text x="59.9924%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.48%)</title><rect x="60.0644%" y="517" width="0.4831%" height="15" fill="rgb(213,154,6)" fg:x="373" fg:w="3"/><text x="60.3144%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.48%)</title><rect x="60.0644%" y="501" width="0.4831%" height="15" fill="rgb(222,163,29)" fg:x="373" fg:w="3"/><text x="60.3144%" y="511.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="60.0644%" y="485" width="0.4831%" height="15" fill="rgb(227,201,8)" fg:x="373" fg:w="3"/><text x="60.3144%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="60.0644%" y="469" width="0.4831%" height="15" fill="rgb(233,9,32)" fg:x="373" fg:w="3"/><text x="60.3144%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="60.0644%" y="453" width="0.4831%" height="15" fill="rgb(217,54,24)" fg:x="373" fg:w="3"/><text x="60.3144%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="60.5475%" y="645" width="0.1610%" height="15" fill="rgb(235,192,0)" fg:x="376" fg:w="1"/><text x="60.7975%" y="655.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="60.5475%" y="629" width="0.1610%" height="15" fill="rgb(235,45,9)" fg:x="376" fg:w="1"/><text x="60.7975%" y="639.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="60.5475%" y="613" width="0.1610%" height="15" fill="rgb(246,42,40)" fg:x="376" fg:w="1"/><text x="60.7975%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="60.7085%" y="581" width="0.1610%" height="15" fill="rgb(248,111,24)" fg:x="377" fg:w="1"/><text x="60.9585%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="60.7085%" y="565" width="0.1610%" height="15" fill="rgb(249,65,22)" fg:x="377" fg:w="1"/><text x="60.9585%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="60.7085%" y="549" width="0.1610%" height="15" fill="rgb(238,111,51)" fg:x="377" fg:w="1"/><text x="60.9585%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="60.7085%" y="533" width="0.1610%" height="15" fill="rgb(250,118,22)" fg:x="377" fg:w="1"/><text x="60.9585%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="60.7085%" y="517" width="0.1610%" height="15" fill="rgb(234,84,26)" fg:x="377" fg:w="1"/><text x="60.9585%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="60.7085%" y="501" width="0.1610%" height="15" fill="rgb(243,172,12)" fg:x="377" fg:w="1"/><text x="60.9585%" y="511.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="60.7085%" y="485" width="0.1610%" height="15" fill="rgb(236,150,49)" fg:x="377" fg:w="1"/><text x="60.9585%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="60.7085%" y="469" width="0.1610%" height="15" fill="rgb(225,197,26)" fg:x="377" fg:w="1"/><text x="60.9585%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="60.7085%" y="453" width="0.1610%" height="15" fill="rgb(214,17,42)" fg:x="377" fg:w="1"/><text x="60.9585%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="60.8696%" y="565" width="0.1610%" height="15" fill="rgb(224,165,40)" fg:x="378" fg:w="1"/><text x="61.1196%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.16%)</title><rect x="60.8696%" y="549" width="0.1610%" height="15" fill="rgb(246,100,4)" fg:x="378" fg:w="1"/><text x="61.1196%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="60.8696%" y="533" width="0.1610%" height="15" fill="rgb(222,103,0)" fg:x="378" fg:w="1"/><text x="61.1196%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="60.8696%" y="517" width="0.1610%" height="15" fill="rgb(227,189,26)" fg:x="378" fg:w="1"/><text x="61.1196%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="60.8696%" y="501" width="0.1610%" height="15" fill="rgb(214,202,17)" fg:x="378" fg:w="1"/><text x="61.1196%" y="511.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (4 samples, 0.64%)</title><rect x="60.5475%" y="661" width="0.6441%" height="15" fill="rgb(229,111,3)" fg:x="376" fg:w="4"/><text x="60.7975%" y="671.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (3 samples, 0.48%)</title><rect x="60.7085%" y="645" width="0.4831%" height="15" fill="rgb(229,172,15)" fg:x="377" fg:w="3"/><text x="60.9585%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.48%)</title><rect x="60.7085%" y="629" width="0.4831%" height="15" fill="rgb(230,224,35)" fg:x="377" fg:w="3"/><text x="60.9585%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.48%)</title><rect x="60.7085%" y="613" width="0.4831%" height="15" fill="rgb(251,141,6)" fg:x="377" fg:w="3"/><text x="60.9585%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.48%)</title><rect x="60.7085%" y="597" width="0.4831%" height="15" fill="rgb(225,208,6)" fg:x="377" fg:w="3"/><text x="60.9585%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.32%)</title><rect x="60.8696%" y="581" width="0.3221%" height="15" fill="rgb(246,181,16)" fg:x="378" fg:w="2"/><text x="61.1196%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="61.0306%" y="565" width="0.1610%" height="15" fill="rgb(227,129,36)" fg:x="379" fg:w="1"/><text x="61.2806%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="61.0306%" y="549" width="0.1610%" height="15" fill="rgb(248,117,24)" fg:x="379" fg:w="1"/><text x="61.2806%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="61.0306%" y="533" width="0.1610%" height="15" fill="rgb(214,185,35)" fg:x="379" fg:w="1"/><text x="61.2806%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="61.0306%" y="517" width="0.1610%" height="15" fill="rgb(236,150,34)" fg:x="379" fg:w="1"/><text x="61.2806%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="61.0306%" y="501" width="0.1610%" height="15" fill="rgb(243,228,27)" fg:x="379" fg:w="1"/><text x="61.2806%" y="511.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="61.0306%" y="485" width="0.1610%" height="15" fill="rgb(245,77,44)" fg:x="379" fg:w="1"/><text x="61.2806%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="61.0306%" y="469" width="0.1610%" height="15" fill="rgb(235,214,42)" fg:x="379" fg:w="1"/><text x="61.2806%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="61.0306%" y="453" width="0.1610%" height="15" fill="rgb(221,74,3)" fg:x="379" fg:w="1"/><text x="61.2806%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="61.1916%" y="613" width="0.3221%" height="15" fill="rgb(206,121,29)" fg:x="380" fg:w="2"/><text x="61.4416%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="61.1916%" y="597" width="0.3221%" height="15" fill="rgb(249,131,53)" fg:x="380" fg:w="2"/><text x="61.4416%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="61.1916%" y="581" width="0.3221%" height="15" fill="rgb(236,170,29)" fg:x="380" fg:w="2"/><text x="61.4416%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="61.1916%" y="565" width="0.3221%" height="15" fill="rgb(247,96,15)" fg:x="380" fg:w="2"/><text x="61.4416%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="61.1916%" y="549" width="0.3221%" height="15" fill="rgb(211,210,7)" fg:x="380" fg:w="2"/><text x="61.4416%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="61.1916%" y="533" width="0.3221%" height="15" fill="rgb(240,88,50)" fg:x="380" fg:w="2"/><text x="61.4416%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="61.1916%" y="517" width="0.3221%" height="15" fill="rgb(209,229,26)" fg:x="380" fg:w="2"/><text x="61.4416%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="61.1916%" y="501" width="0.3221%" height="15" fill="rgb(210,68,23)" fg:x="380" fg:w="2"/><text x="61.4416%" y="511.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards (347 samples, 55.88%)</title><rect x="5.7971%" y="677" width="55.8776%" height="15" fill="rgb(229,180,13)" fg:x="36" fg:w="347"/><text x="6.0471%" y="687.50">micrograd_rs::engine::RunnableGraph::_backwards</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.48%)</title><rect x="61.1916%" y="661" width="0.4831%" height="15" fill="rgb(236,53,44)" fg:x="380" fg:w="3"/><text x="61.4416%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.48%)</title><rect x="61.1916%" y="645" width="0.4831%" height="15" fill="rgb(244,214,29)" fg:x="380" fg:w="3"/><text x="61.4416%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.48%)</title><rect x="61.1916%" y="629" width="0.4831%" height="15" fill="rgb(220,75,29)" fg:x="380" fg:w="3"/><text x="61.4416%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.16%)</title><rect x="61.5137%" y="613" width="0.1610%" height="15" fill="rgb(214,183,37)" fg:x="382" fg:w="1"/><text x="61.7637%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="61.5137%" y="597" width="0.1610%" height="15" fill="rgb(239,117,29)" fg:x="382" fg:w="1"/><text x="61.7637%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="61.5137%" y="581" width="0.1610%" height="15" fill="rgb(237,171,35)" fg:x="382" fg:w="1"/><text x="61.7637%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="61.5137%" y="565" width="0.1610%" height="15" fill="rgb(229,178,53)" fg:x="382" fg:w="1"/><text x="61.7637%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.16%)</title><rect x="61.5137%" y="549" width="0.1610%" height="15" fill="rgb(210,102,19)" fg:x="382" fg:w="1"/><text x="61.7637%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.16%)</title><rect x="61.5137%" y="533" width="0.1610%" height="15" fill="rgb(235,127,22)" fg:x="382" fg:w="1"/><text x="61.7637%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="61.5137%" y="517" width="0.1610%" height="15" fill="rgb(244,31,31)" fg:x="382" fg:w="1"/><text x="61.7637%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="61.5137%" y="501" width="0.1610%" height="15" fill="rgb(231,43,21)" fg:x="382" fg:w="1"/><text x="61.7637%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="61.5137%" y="485" width="0.1610%" height="15" fill="rgb(217,131,35)" fg:x="382" fg:w="1"/><text x="61.7637%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="61.6747%" y="661" width="0.1610%" height="15" fill="rgb(221,149,4)" fg:x="383" fg:w="1"/><text x="61.9247%" y="671.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="61.6747%" y="645" width="0.1610%" height="15" fill="rgb(232,170,28)" fg:x="383" fg:w="1"/><text x="61.9247%" y="655.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="61.6747%" y="629" width="0.1610%" height="15" fill="rgb(238,56,10)" fg:x="383" fg:w="1"/><text x="61.9247%" y="639.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="61.8357%" y="549" width="0.3221%" height="15" fill="rgb(235,196,14)" fg:x="384" fg:w="2"/><text x="62.0857%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="61.8357%" y="533" width="0.3221%" height="15" fill="rgb(216,45,48)" fg:x="384" fg:w="2"/><text x="62.0857%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="61.8357%" y="517" width="0.3221%" height="15" fill="rgb(238,213,17)" fg:x="384" fg:w="2"/><text x="62.0857%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="62.1578%" y="533" width="0.1610%" height="15" fill="rgb(212,13,2)" fg:x="386" fg:w="1"/><text x="62.4078%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="62.1578%" y="517" width="0.1610%" height="15" fill="rgb(240,114,20)" fg:x="386" fg:w="1"/><text x="62.4078%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="62.1578%" y="501" width="0.1610%" height="15" fill="rgb(228,41,40)" fg:x="386" fg:w="1"/><text x="62.4078%" y="511.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update (5 samples, 0.81%)</title><rect x="61.6747%" y="677" width="0.8052%" height="15" fill="rgb(244,132,35)" fg:x="383" fg:w="5"/><text x="61.9247%" y="687.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id_mut (4 samples, 0.64%)</title><rect x="61.8357%" y="661" width="0.6441%" height="15" fill="rgb(253,189,4)" fg:x="384" fg:w="4"/><text x="62.0857%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4 samples, 0.64%)</title><rect x="61.8357%" y="645" width="0.6441%" height="15" fill="rgb(224,37,19)" fg:x="384" fg:w="4"/><text x="62.0857%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.64%)</title><rect x="61.8357%" y="629" width="0.6441%" height="15" fill="rgb(235,223,18)" fg:x="384" fg:w="4"/><text x="62.0857%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.64%)</title><rect x="61.8357%" y="613" width="0.6441%" height="15" fill="rgb(235,163,25)" fg:x="384" fg:w="4"/><text x="62.0857%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.64%)</title><rect x="61.8357%" y="597" width="0.6441%" height="15" fill="rgb(217,145,28)" fg:x="384" fg:w="4"/><text x="62.0857%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.64%)</title><rect x="61.8357%" y="581" width="0.6441%" height="15" fill="rgb(223,223,32)" fg:x="384" fg:w="4"/><text x="62.0857%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.64%)</title><rect x="61.8357%" y="565" width="0.6441%" height="15" fill="rgb(227,189,39)" fg:x="384" fg:w="4"/><text x="62.0857%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="62.1578%" y="549" width="0.3221%" height="15" fill="rgb(248,10,22)" fg:x="386" fg:w="2"/><text x="62.4078%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="62.3188%" y="533" width="0.1610%" height="15" fill="rgb(248,46,39)" fg:x="387" fg:w="1"/><text x="62.5688%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="62.3188%" y="517" width="0.1610%" height="15" fill="rgb(248,113,48)" fg:x="387" fg:w="1"/><text x="62.5688%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="62.3188%" y="501" width="0.1610%" height="15" fill="rgb(245,16,25)" fg:x="387" fg:w="1"/><text x="62.5688%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="62.3188%" y="485" width="0.1610%" height="15" fill="rgb(249,152,16)" fg:x="387" fg:w="1"/><text x="62.5688%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="62.3188%" y="469" width="0.1610%" height="15" fill="rgb(250,16,1)" fg:x="387" fg:w="1"/><text x="62.5688%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="62.4799%" y="597" width="0.1610%" height="15" fill="rgb(249,138,3)" fg:x="388" fg:w="1"/><text x="62.7299%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="62.4799%" y="581" width="0.1610%" height="15" fill="rgb(227,71,41)" fg:x="388" fg:w="1"/><text x="62.7299%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="62.4799%" y="565" width="0.1610%" height="15" fill="rgb(209,184,23)" fg:x="388" fg:w="1"/><text x="62.7299%" y="575.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="62.4799%" y="549" width="0.1610%" height="15" fill="rgb(223,215,31)" fg:x="388" fg:w="1"/><text x="62.7299%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="62.4799%" y="533" width="0.1610%" height="15" fill="rgb(210,146,28)" fg:x="388" fg:w="1"/><text x="62.7299%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="62.4799%" y="517" width="0.1610%" height="15" fill="rgb(209,183,41)" fg:x="388" fg:w="1"/><text x="62.7299%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="62.4799%" y="501" width="0.1610%" height="15" fill="rgb(209,224,45)" fg:x="388" fg:w="1"/><text x="62.7299%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="62.4799%" y="485" width="0.1610%" height="15" fill="rgb(224,209,51)" fg:x="388" fg:w="1"/><text x="62.7299%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="62.4799%" y="469" width="0.1610%" height="15" fill="rgb(223,17,39)" fg:x="388" fg:w="1"/><text x="62.7299%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="62.4799%" y="453" width="0.1610%" height="15" fill="rgb(234,204,37)" fg:x="388" fg:w="1"/><text x="62.7299%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="62.4799%" y="437" width="0.1610%" height="15" fill="rgb(236,120,5)" fg:x="388" fg:w="1"/><text x="62.7299%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (354 samples, 57.00%)</title><rect x="5.7971%" y="709" width="57.0048%" height="15" fill="rgb(248,97,27)" fg:x="36" fg:w="354"/><text x="6.0471%" y="719.50">core::option::Option&lt;T&gt;::map</text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards::{{closure}} (354 samples, 57.00%)</title><rect x="5.7971%" y="693" width="57.0048%" height="15" fill="rgb(240,66,17)" fg:x="36" fg:w="354"/><text x="6.0471%" y="703.50">micrograd_rs::engine::RunnableGraph::_backwards::{{closure}}</text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (2 samples, 0.32%)</title><rect x="62.4799%" y="677" width="0.3221%" height="15" fill="rgb(210,79,3)" fg:x="388" fg:w="2"/><text x="62.7299%" y="687.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (2 samples, 0.32%)</title><rect x="62.4799%" y="661" width="0.3221%" height="15" fill="rgb(214,176,27)" fg:x="388" fg:w="2"/><text x="62.7299%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.32%)</title><rect x="62.4799%" y="645" width="0.3221%" height="15" fill="rgb(235,185,3)" fg:x="388" fg:w="2"/><text x="62.7299%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.32%)</title><rect x="62.4799%" y="629" width="0.3221%" height="15" fill="rgb(227,24,12)" fg:x="388" fg:w="2"/><text x="62.7299%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.32%)</title><rect x="62.4799%" y="613" width="0.3221%" height="15" fill="rgb(252,169,48)" fg:x="388" fg:w="2"/><text x="62.7299%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.16%)</title><rect x="62.6409%" y="597" width="0.1610%" height="15" fill="rgb(212,65,1)" fg:x="389" fg:w="1"/><text x="62.8909%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="62.6409%" y="581" width="0.1610%" height="15" fill="rgb(242,39,24)" fg:x="389" fg:w="1"/><text x="62.8909%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="62.6409%" y="565" width="0.1610%" height="15" fill="rgb(249,32,23)" fg:x="389" fg:w="1"/><text x="62.8909%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="62.6409%" y="549" width="0.1610%" height="15" fill="rgb(251,195,23)" fg:x="389" fg:w="1"/><text x="62.8909%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="62.6409%" y="533" width="0.1610%" height="15" fill="rgb(236,174,8)" fg:x="389" fg:w="1"/><text x="62.8909%" y="543.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.16%)</title><rect x="62.6409%" y="517" width="0.1610%" height="15" fill="rgb(220,197,8)" fg:x="389" fg:w="1"/><text x="62.8909%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="62.6409%" y="501" width="0.1610%" height="15" fill="rgb(240,108,37)" fg:x="389" fg:w="1"/><text x="62.8909%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="62.6409%" y="485" width="0.1610%" height="15" fill="rgb(232,176,24)" fg:x="389" fg:w="1"/><text x="62.8909%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="62.6409%" y="469" width="0.1610%" height="15" fill="rgb(243,35,29)" fg:x="389" fg:w="1"/><text x="62.8909%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="62.8019%" y="629" width="0.1610%" height="15" fill="rgb(210,37,18)" fg:x="390" fg:w="1"/><text x="63.0519%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="62.8019%" y="613" width="0.1610%" height="15" fill="rgb(224,184,40)" fg:x="390" fg:w="1"/><text x="63.0519%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="62.8019%" y="597" width="0.1610%" height="15" fill="rgb(236,39,29)" fg:x="390" fg:w="1"/><text x="63.0519%" y="607.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="62.8019%" y="581" width="0.1610%" height="15" fill="rgb(232,48,39)" fg:x="390" fg:w="1"/><text x="63.0519%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="62.8019%" y="565" width="0.1610%" height="15" fill="rgb(236,34,42)" fg:x="390" fg:w="1"/><text x="63.0519%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="62.8019%" y="549" width="0.1610%" height="15" fill="rgb(243,106,37)" fg:x="390" fg:w="1"/><text x="63.0519%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="62.8019%" y="533" width="0.1610%" height="15" fill="rgb(218,96,6)" fg:x="390" fg:w="1"/><text x="63.0519%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="62.8019%" y="517" width="0.1610%" height="15" fill="rgb(235,130,12)" fg:x="390" fg:w="1"/><text x="63.0519%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="62.8019%" y="501" width="0.1610%" height="15" fill="rgb(231,95,0)" fg:x="390" fg:w="1"/><text x="63.0519%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="62.8019%" y="485" width="0.1610%" height="15" fill="rgb(228,12,23)" fg:x="390" fg:w="1"/><text x="63.0519%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.16%)</title><rect x="62.8019%" y="469" width="0.1610%" height="15" fill="rgb(216,12,1)" fg:x="390" fg:w="1"/><text x="63.0519%" y="479.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="62.8019%" y="453" width="0.1610%" height="15" fill="rgb(219,59,3)" fg:x="390" fg:w="1"/><text x="63.0519%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="62.8019%" y="437" width="0.1610%" height="15" fill="rgb(215,208,46)" fg:x="390" fg:w="1"/><text x="63.0519%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="62.8019%" y="421" width="0.1610%" height="15" fill="rgb(254,224,29)" fg:x="390" fg:w="1"/><text x="63.0519%" y="431.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::grad_for_id (2 samples, 0.32%)</title><rect x="62.8019%" y="709" width="0.3221%" height="15" fill="rgb(232,14,29)" fg:x="390" fg:w="2"/><text x="63.0519%" y="719.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (2 samples, 0.32%)</title><rect x="62.8019%" y="693" width="0.3221%" height="15" fill="rgb(208,45,52)" fg:x="390" fg:w="2"/><text x="63.0519%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.32%)</title><rect x="62.8019%" y="677" width="0.3221%" height="15" fill="rgb(234,191,28)" fg:x="390" fg:w="2"/><text x="63.0519%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.32%)</title><rect x="62.8019%" y="661" width="0.3221%" height="15" fill="rgb(244,67,43)" fg:x="390" fg:w="2"/><text x="63.0519%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.32%)</title><rect x="62.8019%" y="645" width="0.3221%" height="15" fill="rgb(236,189,24)" fg:x="390" fg:w="2"/><text x="63.0519%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.16%)</title><rect x="62.9630%" y="629" width="0.1610%" height="15" fill="rgb(239,214,33)" fg:x="391" fg:w="1"/><text x="63.2130%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="62.9630%" y="613" width="0.1610%" height="15" fill="rgb(226,176,41)" fg:x="391" fg:w="1"/><text x="63.2130%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="62.9630%" y="597" width="0.1610%" height="15" fill="rgb(248,47,8)" fg:x="391" fg:w="1"/><text x="63.2130%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="62.9630%" y="581" width="0.1610%" height="15" fill="rgb(218,81,44)" fg:x="391" fg:w="1"/><text x="63.2130%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="62.9630%" y="565" width="0.1610%" height="15" fill="rgb(213,98,6)" fg:x="391" fg:w="1"/><text x="63.2130%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="62.9630%" y="549" width="0.1610%" height="15" fill="rgb(222,85,22)" fg:x="391" fg:w="1"/><text x="63.2130%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="62.9630%" y="533" width="0.1610%" height="15" fill="rgb(239,46,39)" fg:x="391" fg:w="1"/><text x="63.2130%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="62.9630%" y="517" width="0.1610%" height="15" fill="rgb(237,12,29)" fg:x="391" fg:w="1"/><text x="63.2130%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="62.9630%" y="501" width="0.1610%" height="15" fill="rgb(214,77,8)" fg:x="391" fg:w="1"/><text x="63.2130%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="63.1240%" y="597" width="0.1610%" height="15" fill="rgb(217,168,37)" fg:x="392" fg:w="1"/><text x="63.3740%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="63.1240%" y="581" width="0.1610%" height="15" fill="rgb(221,217,23)" fg:x="392" fg:w="1"/><text x="63.3740%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="63.1240%" y="565" width="0.1610%" height="15" fill="rgb(243,229,36)" fg:x="392" fg:w="1"/><text x="63.3740%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="63.1240%" y="549" width="0.1610%" height="15" fill="rgb(251,163,40)" fg:x="392" fg:w="1"/><text x="63.3740%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="63.1240%" y="533" width="0.1610%" height="15" fill="rgb(237,222,12)" fg:x="392" fg:w="1"/><text x="63.3740%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="63.1240%" y="517" width="0.1610%" height="15" fill="rgb(248,132,6)" fg:x="392" fg:w="1"/><text x="63.3740%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="63.1240%" y="501" width="0.1610%" height="15" fill="rgb(227,167,50)" fg:x="392" fg:w="1"/><text x="63.3740%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="63.1240%" y="629" width="0.3221%" height="15" fill="rgb(242,84,37)" fg:x="392" fg:w="2"/><text x="63.3740%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="63.1240%" y="613" width="0.3221%" height="15" fill="rgb(212,4,50)" fg:x="392" fg:w="2"/><text x="63.3740%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="63.2850%" y="597" width="0.1610%" height="15" fill="rgb(230,228,32)" fg:x="393" fg:w="1"/><text x="63.5350%" y="607.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="63.2850%" y="581" width="0.1610%" height="15" fill="rgb(248,217,23)" fg:x="393" fg:w="1"/><text x="63.5350%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="63.2850%" y="565" width="0.1610%" height="15" fill="rgb(238,197,32)" fg:x="393" fg:w="1"/><text x="63.5350%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="63.2850%" y="549" width="0.1610%" height="15" fill="rgb(236,106,1)" fg:x="393" fg:w="1"/><text x="63.5350%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="63.2850%" y="533" width="0.1610%" height="15" fill="rgb(219,228,13)" fg:x="393" fg:w="1"/><text x="63.5350%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="63.2850%" y="517" width="0.1610%" height="15" fill="rgb(238,30,35)" fg:x="393" fg:w="1"/><text x="63.5350%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="63.2850%" y="501" width="0.1610%" height="15" fill="rgb(236,70,23)" fg:x="393" fg:w="1"/><text x="63.5350%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="63.2850%" y="485" width="0.1610%" height="15" fill="rgb(249,104,48)" fg:x="393" fg:w="1"/><text x="63.5350%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="63.2850%" y="469" width="0.1610%" height="15" fill="rgb(254,117,50)" fg:x="393" fg:w="1"/><text x="63.5350%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="63.2850%" y="453" width="0.1610%" height="15" fill="rgb(223,152,4)" fg:x="393" fg:w="1"/><text x="63.5350%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="63.2850%" y="437" width="0.1610%" height="15" fill="rgb(245,6,2)" fg:x="393" fg:w="1"/><text x="63.5350%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="63.4461%" y="581" width="0.1610%" height="15" fill="rgb(249,150,24)" fg:x="394" fg:w="1"/><text x="63.6961%" y="591.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="63.4461%" y="565" width="0.1610%" height="15" fill="rgb(228,185,42)" fg:x="394" fg:w="1"/><text x="63.6961%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="63.4461%" y="549" width="0.1610%" height="15" fill="rgb(226,39,33)" fg:x="394" fg:w="1"/><text x="63.6961%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="63.4461%" y="533" width="0.1610%" height="15" fill="rgb(221,166,19)" fg:x="394" fg:w="1"/><text x="63.6961%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="63.6071%" y="565" width="0.1610%" height="15" fill="rgb(209,109,2)" fg:x="395" fg:w="1"/><text x="63.8571%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="63.6071%" y="549" width="0.1610%" height="15" fill="rgb(252,216,26)" fg:x="395" fg:w="1"/><text x="63.8571%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="63.6071%" y="533" width="0.1610%" height="15" fill="rgb(227,173,36)" fg:x="395" fg:w="1"/><text x="63.8571%" y="543.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (5 samples, 0.81%)</title><rect x="63.1240%" y="709" width="0.8052%" height="15" fill="rgb(209,90,7)" fg:x="392" fg:w="5"/><text x="63.3740%" y="719.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (5 samples, 0.81%)</title><rect x="63.1240%" y="693" width="0.8052%" height="15" fill="rgb(250,194,11)" fg:x="392" fg:w="5"/><text x="63.3740%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.81%)</title><rect x="63.1240%" y="677" width="0.8052%" height="15" fill="rgb(220,72,50)" fg:x="392" fg:w="5"/><text x="63.3740%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.81%)</title><rect x="63.1240%" y="661" width="0.8052%" height="15" fill="rgb(222,106,48)" fg:x="392" fg:w="5"/><text x="63.3740%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.81%)</title><rect x="63.1240%" y="645" width="0.8052%" height="15" fill="rgb(216,220,45)" fg:x="392" fg:w="5"/><text x="63.3740%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.48%)</title><rect x="63.4461%" y="629" width="0.4831%" height="15" fill="rgb(234,112,18)" fg:x="394" fg:w="3"/><text x="63.6961%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="63.4461%" y="613" width="0.4831%" height="15" fill="rgb(206,179,9)" fg:x="394" fg:w="3"/><text x="63.6961%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="63.4461%" y="597" width="0.4831%" height="15" fill="rgb(215,115,40)" fg:x="394" fg:w="3"/><text x="63.6961%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="63.6071%" y="581" width="0.3221%" height="15" fill="rgb(222,69,34)" fg:x="395" fg:w="2"/><text x="63.8571%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="63.7681%" y="565" width="0.1610%" height="15" fill="rgb(209,161,10)" fg:x="396" fg:w="1"/><text x="64.0181%" y="575.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.16%)</title><rect x="63.7681%" y="549" width="0.1610%" height="15" fill="rgb(217,6,38)" fg:x="396" fg:w="1"/><text x="64.0181%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="63.7681%" y="533" width="0.1610%" height="15" fill="rgb(229,229,48)" fg:x="396" fg:w="1"/><text x="64.0181%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="63.7681%" y="517" width="0.1610%" height="15" fill="rgb(225,21,28)" fg:x="396" fg:w="1"/><text x="64.0181%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="63.7681%" y="501" width="0.1610%" height="15" fill="rgb(206,33,13)" fg:x="396" fg:w="1"/><text x="64.0181%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="63.9291%" y="581" width="0.1610%" height="15" fill="rgb(242,178,17)" fg:x="397" fg:w="1"/><text x="64.1791%" y="591.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="63.9291%" y="565" width="0.1610%" height="15" fill="rgb(220,162,5)" fg:x="397" fg:w="1"/><text x="64.1791%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="63.9291%" y="549" width="0.1610%" height="15" fill="rgb(210,33,43)" fg:x="397" fg:w="1"/><text x="64.1791%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="63.9291%" y="533" width="0.1610%" height="15" fill="rgb(216,116,54)" fg:x="397" fg:w="1"/><text x="64.1791%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="63.9291%" y="661" width="0.4831%" height="15" fill="rgb(249,92,24)" fg:x="397" fg:w="3"/><text x="64.1791%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="63.9291%" y="645" width="0.4831%" height="15" fill="rgb(231,189,14)" fg:x="397" fg:w="3"/><text x="64.1791%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="63.9291%" y="629" width="0.4831%" height="15" fill="rgb(230,8,41)" fg:x="397" fg:w="3"/><text x="64.1791%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="63.9291%" y="613" width="0.4831%" height="15" fill="rgb(249,7,27)" fg:x="397" fg:w="3"/><text x="64.1791%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="63.9291%" y="597" width="0.4831%" height="15" fill="rgb(232,86,5)" fg:x="397" fg:w="3"/><text x="64.1791%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="64.0902%" y="581" width="0.3221%" height="15" fill="rgb(224,175,18)" fg:x="398" fg:w="2"/><text x="64.3402%" y="591.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="64.0902%" y="565" width="0.3221%" height="15" fill="rgb(220,129,12)" fg:x="398" fg:w="2"/><text x="64.3402%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="64.0902%" y="549" width="0.3221%" height="15" fill="rgb(210,19,36)" fg:x="398" fg:w="2"/><text x="64.3402%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="64.0902%" y="533" width="0.3221%" height="15" fill="rgb(219,96,14)" fg:x="398" fg:w="2"/><text x="64.3402%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="64.4122%" y="597" width="0.1610%" height="15" fill="rgb(249,106,1)" fg:x="400" fg:w="1"/><text x="64.6622%" y="607.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="64.4122%" y="581" width="0.1610%" height="15" fill="rgb(249,155,20)" fg:x="400" fg:w="1"/><text x="64.6622%" y="591.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="64.4122%" y="565" width="0.1610%" height="15" fill="rgb(244,168,9)" fg:x="400" fg:w="1"/><text x="64.6622%" y="575.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::_backwards (366 samples, 58.94%)</title><rect x="5.7971%" y="725" width="58.9372%" height="15" fill="rgb(216,23,50)" fg:x="36" fg:w="366"/><text x="6.0471%" y="735.50">micrograd_rs::engine::RunnableGraph::_backwards</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.81%)</title><rect x="63.9291%" y="709" width="0.8052%" height="15" fill="rgb(224,219,20)" fg:x="397" fg:w="5"/><text x="64.1791%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.81%)</title><rect x="63.9291%" y="693" width="0.8052%" height="15" fill="rgb(222,156,15)" fg:x="397" fg:w="5"/><text x="64.1791%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.81%)</title><rect x="63.9291%" y="677" width="0.8052%" height="15" fill="rgb(231,97,17)" fg:x="397" fg:w="5"/><text x="64.1791%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.32%)</title><rect x="64.4122%" y="661" width="0.3221%" height="15" fill="rgb(218,70,48)" fg:x="400" fg:w="2"/><text x="64.6622%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="64.4122%" y="645" width="0.3221%" height="15" fill="rgb(212,196,52)" fg:x="400" fg:w="2"/><text x="64.6622%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="64.4122%" y="629" width="0.3221%" height="15" fill="rgb(243,203,18)" fg:x="400" fg:w="2"/><text x="64.6622%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.32%)</title><rect x="64.4122%" y="613" width="0.3221%" height="15" fill="rgb(252,125,41)" fg:x="400" fg:w="2"/><text x="64.6622%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="64.5733%" y="597" width="0.1610%" height="15" fill="rgb(223,180,33)" fg:x="401" fg:w="1"/><text x="64.8233%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.16%)</title><rect x="64.5733%" y="581" width="0.1610%" height="15" fill="rgb(254,159,46)" fg:x="401" fg:w="1"/><text x="64.8233%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.16%)</title><rect x="64.5733%" y="565" width="0.1610%" height="15" fill="rgb(254,38,10)" fg:x="401" fg:w="1"/><text x="64.8233%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="64.5733%" y="549" width="0.1610%" height="15" fill="rgb(208,217,32)" fg:x="401" fg:w="1"/><text x="64.8233%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="64.5733%" y="533" width="0.1610%" height="15" fill="rgb(221,120,13)" fg:x="401" fg:w="1"/><text x="64.8233%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="64.5733%" y="517" width="0.1610%" height="15" fill="rgb(246,54,52)" fg:x="401" fg:w="1"/><text x="64.8233%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="64.5733%" y="501" width="0.1610%" height="15" fill="rgb(242,34,25)" fg:x="401" fg:w="1"/><text x="64.8233%" y="511.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update (1 samples, 0.16%)</title><rect x="64.7343%" y="725" width="0.1610%" height="15" fill="rgb(247,209,9)" fg:x="402" fg:w="1"/><text x="64.9843%" y="735.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="64.7343%" y="709" width="0.1610%" height="15" fill="rgb(228,71,26)" fg:x="402" fg:w="1"/><text x="64.9843%" y="719.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="64.7343%" y="693" width="0.1610%" height="15" fill="rgb(222,145,49)" fg:x="402" fg:w="1"/><text x="64.9843%" y="703.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="64.7343%" y="677" width="0.1610%" height="15" fill="rgb(218,121,17)" fg:x="402" fg:w="1"/><text x="64.9843%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="64.8953%" y="613" width="0.1610%" height="15" fill="rgb(244,50,7)" fg:x="403" fg:w="1"/><text x="65.1453%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="64.8953%" y="597" width="0.1610%" height="15" fill="rgb(246,229,37)" fg:x="403" fg:w="1"/><text x="65.1453%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="64.8953%" y="581" width="0.1610%" height="15" fill="rgb(225,18,5)" fg:x="403" fg:w="1"/><text x="65.1453%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="64.8953%" y="565" width="0.1610%" height="15" fill="rgb(213,204,8)" fg:x="403" fg:w="1"/><text x="65.1453%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="64.8953%" y="549" width="0.1610%" height="15" fill="rgb(238,103,6)" fg:x="403" fg:w="1"/><text x="65.1453%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="64.8953%" y="533" width="0.1610%" height="15" fill="rgb(222,25,35)" fg:x="403" fg:w="1"/><text x="65.1453%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="64.8953%" y="517" width="0.1610%" height="15" fill="rgb(213,203,35)" fg:x="403" fg:w="1"/><text x="65.1453%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="64.8953%" y="645" width="0.3221%" height="15" fill="rgb(221,79,53)" fg:x="403" fg:w="2"/><text x="65.1453%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="64.8953%" y="629" width="0.3221%" height="15" fill="rgb(243,200,35)" fg:x="403" fg:w="2"/><text x="65.1453%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="65.0564%" y="613" width="0.1610%" height="15" fill="rgb(248,60,25)" fg:x="404" fg:w="1"/><text x="65.3064%" y="623.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="65.0564%" y="597" width="0.1610%" height="15" fill="rgb(227,53,46)" fg:x="404" fg:w="1"/><text x="65.3064%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="65.0564%" y="581" width="0.1610%" height="15" fill="rgb(216,120,32)" fg:x="404" fg:w="1"/><text x="65.3064%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="65.0564%" y="565" width="0.1610%" height="15" fill="rgb(220,134,1)" fg:x="404" fg:w="1"/><text x="65.3064%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="65.0564%" y="549" width="0.1610%" height="15" fill="rgb(237,168,5)" fg:x="404" fg:w="1"/><text x="65.3064%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="65.0564%" y="533" width="0.1610%" height="15" fill="rgb(231,100,33)" fg:x="404" fg:w="1"/><text x="65.3064%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="65.0564%" y="517" width="0.1610%" height="15" fill="rgb(236,177,47)" fg:x="404" fg:w="1"/><text x="65.3064%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="65.0564%" y="501" width="0.1610%" height="15" fill="rgb(235,7,49)" fg:x="404" fg:w="1"/><text x="65.3064%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="65.0564%" y="485" width="0.1610%" height="15" fill="rgb(232,119,22)" fg:x="404" fg:w="1"/><text x="65.3064%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="65.0564%" y="469" width="0.1610%" height="15" fill="rgb(254,73,53)" fg:x="404" fg:w="1"/><text x="65.3064%" y="479.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::value_for_id (3 samples, 0.48%)</title><rect x="64.8953%" y="725" width="0.4831%" height="15" fill="rgb(251,35,20)" fg:x="403" fg:w="3"/><text x="65.1453%" y="735.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::data_for_id (3 samples, 0.48%)</title><rect x="64.8953%" y="709" width="0.4831%" height="15" fill="rgb(241,119,20)" fg:x="403" fg:w="3"/><text x="65.1453%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.48%)</title><rect x="64.8953%" y="693" width="0.4831%" height="15" fill="rgb(207,102,14)" fg:x="403" fg:w="3"/><text x="65.1453%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.48%)</title><rect x="64.8953%" y="677" width="0.4831%" height="15" fill="rgb(248,201,50)" fg:x="403" fg:w="3"/><text x="65.1453%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.48%)</title><rect x="64.8953%" y="661" width="0.4831%" height="15" fill="rgb(222,185,44)" fg:x="403" fg:w="3"/><text x="65.1453%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.16%)</title><rect x="65.2174%" y="645" width="0.1610%" height="15" fill="rgb(218,107,18)" fg:x="405" fg:w="1"/><text x="65.4674%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="65.2174%" y="629" width="0.1610%" height="15" fill="rgb(237,177,39)" fg:x="405" fg:w="1"/><text x="65.4674%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="65.2174%" y="613" width="0.1610%" height="15" fill="rgb(246,69,6)" fg:x="405" fg:w="1"/><text x="65.4674%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="65.2174%" y="597" width="0.1610%" height="15" fill="rgb(234,208,37)" fg:x="405" fg:w="1"/><text x="65.4674%" y="607.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="65.2174%" y="581" width="0.1610%" height="15" fill="rgb(225,4,6)" fg:x="405" fg:w="1"/><text x="65.4674%" y="591.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="65.2174%" y="565" width="0.1610%" height="15" fill="rgb(233,45,0)" fg:x="405" fg:w="1"/><text x="65.4674%" y="575.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="65.2174%" y="549" width="0.1610%" height="15" fill="rgb(226,136,5)" fg:x="405" fg:w="1"/><text x="65.4674%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="65.3784%" y="677" width="0.1610%" height="15" fill="rgb(211,91,47)" fg:x="406" fg:w="1"/><text x="65.6284%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="65.3784%" y="661" width="0.1610%" height="15" fill="rgb(242,88,51)" fg:x="406" fg:w="1"/><text x="65.6284%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="65.3784%" y="645" width="0.1610%" height="15" fill="rgb(230,91,28)" fg:x="406" fg:w="1"/><text x="65.6284%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="65.3784%" y="629" width="0.1610%" height="15" fill="rgb(254,186,29)" fg:x="406" fg:w="1"/><text x="65.6284%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="65.3784%" y="613" width="0.1610%" height="15" fill="rgb(238,6,4)" fg:x="406" fg:w="1"/><text x="65.6284%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="65.3784%" y="597" width="0.1610%" height="15" fill="rgb(221,151,16)" fg:x="406" fg:w="1"/><text x="65.6284%" y="607.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="65.3784%" y="581" width="0.1610%" height="15" fill="rgb(251,143,52)" fg:x="406" fg:w="1"/><text x="65.6284%" y="591.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="65.3784%" y="565" width="0.1610%" height="15" fill="rgb(206,90,15)" fg:x="406" fg:w="1"/><text x="65.6284%" y="575.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="65.3784%" y="549" width="0.1610%" height="15" fill="rgb(218,35,8)" fg:x="406" fg:w="1"/><text x="65.6284%" y="559.50"></text></g><g><title>micrograd_rs::nn::MultiLayerPerceptron::backward (372 samples, 59.90%)</title><rect x="5.7971%" y="757" width="59.9034%" height="15" fill="rgb(239,215,6)" fg:x="36" fg:w="372"/><text x="6.0471%" y="767.50">micrograd_rs::nn::MultiLayerPerceptron::backward</text></g><g><title>micrograd_rs::engine::RunnableGraph::backwards (372 samples, 59.90%)</title><rect x="5.7971%" y="741" width="59.9034%" height="15" fill="rgb(245,116,39)" fg:x="36" fg:w="372"/><text x="6.0471%" y="751.50">micrograd_rs::engine::RunnableGraph::backwards</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.32%)</title><rect x="65.3784%" y="725" width="0.3221%" height="15" fill="rgb(242,65,28)" fg:x="406" fg:w="2"/><text x="65.6284%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.32%)</title><rect x="65.3784%" y="709" width="0.3221%" height="15" fill="rgb(252,132,53)" fg:x="406" fg:w="2"/><text x="65.6284%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.32%)</title><rect x="65.3784%" y="693" width="0.3221%" height="15" fill="rgb(224,159,50)" fg:x="406" fg:w="2"/><text x="65.6284%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.16%)</title><rect x="65.5395%" y="677" width="0.1610%" height="15" fill="rgb(224,93,4)" fg:x="407" fg:w="1"/><text x="65.7895%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="65.5395%" y="661" width="0.1610%" height="15" fill="rgb(208,81,34)" fg:x="407" fg:w="1"/><text x="65.7895%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="65.5395%" y="645" width="0.1610%" height="15" fill="rgb(233,92,54)" fg:x="407" fg:w="1"/><text x="65.7895%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="65.5395%" y="629" width="0.1610%" height="15" fill="rgb(237,21,14)" fg:x="407" fg:w="1"/><text x="65.7895%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="65.5395%" y="613" width="0.1610%" height="15" fill="rgb(249,128,51)" fg:x="407" fg:w="1"/><text x="65.7895%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="65.5395%" y="597" width="0.1610%" height="15" fill="rgb(223,129,24)" fg:x="407" fg:w="1"/><text x="65.7895%" y="607.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="65.5395%" y="581" width="0.1610%" height="15" fill="rgb(231,168,25)" fg:x="407" fg:w="1"/><text x="65.7895%" y="591.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="65.5395%" y="565" width="0.1610%" height="15" fill="rgb(224,39,20)" fg:x="407" fg:w="1"/><text x="65.7895%" y="575.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="65.5395%" y="549" width="0.1610%" height="15" fill="rgb(225,152,53)" fg:x="407" fg:w="1"/><text x="65.7895%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.32%)</title><rect x="65.7005%" y="709" width="0.3221%" height="15" fill="rgb(252,17,24)" fg:x="408" fg:w="2"/><text x="65.9505%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.32%)</title><rect x="65.7005%" y="693" width="0.3221%" height="15" fill="rgb(250,114,30)" fg:x="408" fg:w="2"/><text x="65.9505%" y="703.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="65.7005%" y="677" width="0.3221%" height="15" fill="rgb(229,5,4)" fg:x="408" fg:w="2"/><text x="65.9505%" y="687.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="65.7005%" y="661" width="0.3221%" height="15" fill="rgb(225,176,49)" fg:x="408" fg:w="2"/><text x="65.9505%" y="671.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="65.7005%" y="645" width="0.3221%" height="15" fill="rgb(224,221,49)" fg:x="408" fg:w="2"/><text x="65.9505%" y="655.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="66.0225%" y="613" width="0.1610%" height="15" fill="rgb(253,169,27)" fg:x="410" fg:w="1"/><text x="66.2725%" y="623.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="66.0225%" y="597" width="0.1610%" height="15" fill="rgb(211,206,16)" fg:x="410" fg:w="1"/><text x="66.2725%" y="607.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="66.0225%" y="581" width="0.1610%" height="15" fill="rgb(244,87,35)" fg:x="410" fg:w="1"/><text x="66.2725%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="66.1836%" y="613" width="0.3221%" height="15" fill="rgb(246,28,10)" fg:x="411" fg:w="2"/><text x="66.4336%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="66.1836%" y="597" width="0.3221%" height="15" fill="rgb(229,12,44)" fg:x="411" fg:w="2"/><text x="66.4336%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="66.1836%" y="581" width="0.3221%" height="15" fill="rgb(210,145,37)" fg:x="411" fg:w="2"/><text x="66.4336%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="66.1836%" y="565" width="0.3221%" height="15" fill="rgb(227,112,52)" fg:x="411" fg:w="2"/><text x="66.4336%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="66.1836%" y="549" width="0.3221%" height="15" fill="rgb(238,155,34)" fg:x="411" fg:w="2"/><text x="66.4336%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.32%)</title><rect x="66.1836%" y="533" width="0.3221%" height="15" fill="rgb(239,226,36)" fg:x="411" fg:w="2"/><text x="66.4336%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="66.1836%" y="517" width="0.3221%" height="15" fill="rgb(230,16,23)" fg:x="411" fg:w="2"/><text x="66.4336%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="66.1836%" y="501" width="0.3221%" height="15" fill="rgb(236,171,36)" fg:x="411" fg:w="2"/><text x="66.4336%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="66.1836%" y="485" width="0.3221%" height="15" fill="rgb(221,22,14)" fg:x="411" fg:w="2"/><text x="66.4336%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="66.5056%" y="549" width="0.1610%" height="15" fill="rgb(242,43,11)" fg:x="413" fg:w="1"/><text x="66.7556%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="66.5056%" y="533" width="0.1610%" height="15" fill="rgb(232,69,23)" fg:x="413" fg:w="1"/><text x="66.7556%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="66.5056%" y="517" width="0.1610%" height="15" fill="rgb(216,180,54)" fg:x="413" fg:w="1"/><text x="66.7556%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 1.13%)</title><rect x="65.7005%" y="741" width="1.1272%" height="15" fill="rgb(216,5,24)" fg:x="408" fg:w="7"/><text x="65.9505%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 1.13%)</title><rect x="65.7005%" y="725" width="1.1272%" height="15" fill="rgb(225,89,9)" fg:x="408" fg:w="7"/><text x="65.9505%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.81%)</title><rect x="66.0225%" y="709" width="0.8052%" height="15" fill="rgb(243,75,33)" fg:x="410" fg:w="5"/><text x="66.2725%" y="719.50"></text></g><g><title>micrograd_rs::nn::MultiLayerPerceptron::forward::{{closure}} (5 samples, 0.81%)</title><rect x="66.0225%" y="693" width="0.8052%" height="15" fill="rgb(247,141,45)" fg:x="410" fg:w="5"/><text x="66.2725%" y="703.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::set_input (5 samples, 0.81%)</title><rect x="66.0225%" y="677" width="0.8052%" height="15" fill="rgb(232,177,36)" fg:x="410" fg:w="5"/><text x="66.2725%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (5 samples, 0.81%)</title><rect x="66.0225%" y="661" width="0.8052%" height="15" fill="rgb(219,125,36)" fg:x="410" fg:w="5"/><text x="66.2725%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (5 samples, 0.81%)</title><rect x="66.0225%" y="645" width="0.8052%" height="15" fill="rgb(227,94,9)" fg:x="410" fg:w="5"/><text x="66.2725%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (5 samples, 0.81%)</title><rect x="66.0225%" y="629" width="0.8052%" height="15" fill="rgb(240,34,52)" fg:x="410" fg:w="5"/><text x="66.2725%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.32%)</title><rect x="66.5056%" y="613" width="0.3221%" height="15" fill="rgb(216,45,12)" fg:x="413" fg:w="2"/><text x="66.7556%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="66.5056%" y="597" width="0.3221%" height="15" fill="rgb(246,21,19)" fg:x="413" fg:w="2"/><text x="66.7556%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="66.5056%" y="581" width="0.3221%" height="15" fill="rgb(213,98,42)" fg:x="413" fg:w="2"/><text x="66.7556%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="66.5056%" y="565" width="0.3221%" height="15" fill="rgb(250,136,47)" fg:x="413" fg:w="2"/><text x="66.7556%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="66.6667%" y="549" width="0.1610%" height="15" fill="rgb(251,124,27)" fg:x="414" fg:w="1"/><text x="66.9167%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="66.6667%" y="533" width="0.1610%" height="15" fill="rgb(229,180,14)" fg:x="414" fg:w="1"/><text x="66.9167%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="66.6667%" y="517" width="0.1610%" height="15" fill="rgb(245,216,25)" fg:x="414" fg:w="1"/><text x="66.9167%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="66.6667%" y="501" width="0.1610%" height="15" fill="rgb(251,43,5)" fg:x="414" fg:w="1"/><text x="66.9167%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="66.6667%" y="485" width="0.1610%" height="15" fill="rgb(250,128,24)" fg:x="414" fg:w="1"/><text x="66.9167%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="66.8277%" y="629" width="0.1610%" height="15" fill="rgb(217,117,27)" fg:x="415" fg:w="1"/><text x="67.0777%" y="639.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="66.8277%" y="613" width="0.1610%" height="15" fill="rgb(245,147,4)" fg:x="415" fg:w="1"/><text x="67.0777%" y="623.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="66.8277%" y="597" width="0.1610%" height="15" fill="rgb(242,201,35)" fg:x="415" fg:w="1"/><text x="67.0777%" y="607.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="66.9887%" y="597" width="0.1610%" height="15" fill="rgb(218,181,1)" fg:x="416" fg:w="1"/><text x="67.2387%" y="607.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="66.9887%" y="581" width="0.1610%" height="15" fill="rgb(222,6,29)" fg:x="416" fg:w="1"/><text x="67.2387%" y="591.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="66.9887%" y="565" width="0.1610%" height="15" fill="rgb(208,186,3)" fg:x="416" fg:w="1"/><text x="67.2387%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="67.1498%" y="565" width="0.3221%" height="15" fill="rgb(216,36,26)" fg:x="417" fg:w="2"/><text x="67.3998%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="67.1498%" y="549" width="0.3221%" height="15" fill="rgb(248,201,23)" fg:x="417" fg:w="2"/><text x="67.3998%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="67.1498%" y="533" width="0.3221%" height="15" fill="rgb(251,170,31)" fg:x="417" fg:w="2"/><text x="67.3998%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.16%)</title><rect x="67.4718%" y="565" width="0.1610%" height="15" fill="rgb(207,110,25)" fg:x="419" fg:w="1"/><text x="67.7218%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="67.4718%" y="549" width="0.1610%" height="15" fill="rgb(250,54,15)" fg:x="419" fg:w="1"/><text x="67.7218%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="67.4718%" y="533" width="0.1610%" height="15" fill="rgb(227,68,33)" fg:x="419" fg:w="1"/><text x="67.7218%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="67.4718%" y="517" width="0.1610%" height="15" fill="rgb(238,34,41)" fg:x="419" fg:w="1"/><text x="67.7218%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.16%)</title><rect x="67.6329%" y="565" width="0.1610%" height="15" fill="rgb(220,11,15)" fg:x="420" fg:w="1"/><text x="67.8829%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="67.6329%" y="549" width="0.1610%" height="15" fill="rgb(246,111,35)" fg:x="420" fg:w="1"/><text x="67.8829%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="67.6329%" y="533" width="0.1610%" height="15" fill="rgb(209,88,53)" fg:x="420" fg:w="1"/><text x="67.8829%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="67.6329%" y="517" width="0.1610%" height="15" fill="rgb(231,185,47)" fg:x="420" fg:w="1"/><text x="67.8829%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="67.7939%" y="517" width="0.1610%" height="15" fill="rgb(233,154,1)" fg:x="421" fg:w="1"/><text x="68.0439%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="67.7939%" y="501" width="0.1610%" height="15" fill="rgb(225,15,46)" fg:x="421" fg:w="1"/><text x="68.0439%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="67.7939%" y="485" width="0.1610%" height="15" fill="rgb(211,135,41)" fg:x="421" fg:w="1"/><text x="68.0439%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="67.9549%" y="469" width="0.3221%" height="15" fill="rgb(208,54,0)" fg:x="422" fg:w="2"/><text x="68.2049%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="67.9549%" y="453" width="0.3221%" height="15" fill="rgb(244,136,14)" fg:x="422" fg:w="2"/><text x="68.2049%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="67.9549%" y="437" width="0.3221%" height="15" fill="rgb(241,56,14)" fg:x="422" fg:w="2"/><text x="68.2049%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="68.2770%" y="453" width="0.3221%" height="15" fill="rgb(205,80,24)" fg:x="424" fg:w="2"/><text x="68.5270%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="68.2770%" y="437" width="0.3221%" height="15" fill="rgb(220,57,4)" fg:x="424" fg:w="2"/><text x="68.5270%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="68.2770%" y="421" width="0.3221%" height="15" fill="rgb(226,193,50)" fg:x="424" fg:w="2"/><text x="68.5270%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="68.5990%" y="373" width="0.4831%" height="15" fill="rgb(231,168,22)" fg:x="426" fg:w="3"/><text x="68.8490%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="68.5990%" y="357" width="0.4831%" height="15" fill="rgb(254,215,14)" fg:x="426" fg:w="3"/><text x="68.8490%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="68.5990%" y="341" width="0.4831%" height="15" fill="rgb(211,115,16)" fg:x="426" fg:w="3"/><text x="68.8490%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="68.5990%" y="325" width="0.4831%" height="15" fill="rgb(236,210,16)" fg:x="426" fg:w="3"/><text x="68.8490%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="68.5990%" y="309" width="0.4831%" height="15" fill="rgb(221,94,12)" fg:x="426" fg:w="3"/><text x="68.8490%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.48%)</title><rect x="68.5990%" y="293" width="0.4831%" height="15" fill="rgb(235,218,49)" fg:x="426" fg:w="3"/><text x="68.8490%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="68.5990%" y="277" width="0.4831%" height="15" fill="rgb(217,114,14)" fg:x="426" fg:w="3"/><text x="68.8490%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="68.5990%" y="261" width="0.4831%" height="15" fill="rgb(216,145,22)" fg:x="426" fg:w="3"/><text x="68.8490%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="68.5990%" y="245" width="0.4831%" height="15" fill="rgb(217,112,39)" fg:x="426" fg:w="3"/><text x="68.8490%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="69.0821%" y="325" width="0.1610%" height="15" fill="rgb(225,85,32)" fg:x="429" fg:w="1"/><text x="69.3321%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="69.0821%" y="309" width="0.1610%" height="15" fill="rgb(245,209,47)" fg:x="429" fg:w="1"/><text x="69.3321%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="69.0821%" y="293" width="0.1610%" height="15" fill="rgb(218,220,15)" fg:x="429" fg:w="1"/><text x="69.3321%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="69.0821%" y="277" width="0.1610%" height="15" fill="rgb(222,202,31)" fg:x="429" fg:w="1"/><text x="69.3321%" y="287.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (6 samples, 0.97%)</title><rect x="68.5990%" y="437" width="0.9662%" height="15" fill="rgb(243,203,4)" fg:x="426" fg:w="6"/><text x="68.8490%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (6 samples, 0.97%)</title><rect x="68.5990%" y="421" width="0.9662%" height="15" fill="rgb(237,92,17)" fg:x="426" fg:w="6"/><text x="68.8490%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (6 samples, 0.97%)</title><rect x="68.5990%" y="405" width="0.9662%" height="15" fill="rgb(231,119,7)" fg:x="426" fg:w="6"/><text x="68.8490%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (6 samples, 0.97%)</title><rect x="68.5990%" y="389" width="0.9662%" height="15" fill="rgb(237,82,41)" fg:x="426" fg:w="6"/><text x="68.8490%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.48%)</title><rect x="69.0821%" y="373" width="0.4831%" height="15" fill="rgb(226,81,48)" fg:x="429" fg:w="3"/><text x="69.3321%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="69.0821%" y="357" width="0.4831%" height="15" fill="rgb(234,70,51)" fg:x="429" fg:w="3"/><text x="69.3321%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="69.0821%" y="341" width="0.4831%" height="15" fill="rgb(251,86,4)" fg:x="429" fg:w="3"/><text x="69.3321%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="69.2432%" y="325" width="0.3221%" height="15" fill="rgb(244,144,28)" fg:x="430" fg:w="2"/><text x="69.4932%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="69.2432%" y="309" width="0.3221%" height="15" fill="rgb(232,161,39)" fg:x="430" fg:w="2"/><text x="69.4932%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="69.2432%" y="293" width="0.3221%" height="15" fill="rgb(247,34,51)" fg:x="430" fg:w="2"/><text x="69.4932%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="69.5652%" y="389" width="0.1610%" height="15" fill="rgb(225,132,2)" fg:x="432" fg:w="1"/><text x="69.8152%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="69.5652%" y="373" width="0.1610%" height="15" fill="rgb(209,159,44)" fg:x="432" fg:w="1"/><text x="69.8152%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="69.5652%" y="357" width="0.1610%" height="15" fill="rgb(251,214,1)" fg:x="432" fg:w="1"/><text x="69.8152%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="69.7262%" y="389" width="0.1610%" height="15" fill="rgb(247,84,47)" fg:x="433" fg:w="1"/><text x="69.9762%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="69.7262%" y="373" width="0.1610%" height="15" fill="rgb(240,111,43)" fg:x="433" fg:w="1"/><text x="69.9762%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="69.7262%" y="357" width="0.1610%" height="15" fill="rgb(215,214,35)" fg:x="433" fg:w="1"/><text x="69.9762%" y="367.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="69.7262%" y="341" width="0.1610%" height="15" fill="rgb(248,207,23)" fg:x="433" fg:w="1"/><text x="69.9762%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="69.7262%" y="325" width="0.1610%" height="15" fill="rgb(214,186,4)" fg:x="433" fg:w="1"/><text x="69.9762%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="69.7262%" y="309" width="0.1610%" height="15" fill="rgb(220,133,22)" fg:x="433" fg:w="1"/><text x="69.9762%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="69.7262%" y="293" width="0.1610%" height="15" fill="rgb(239,134,19)" fg:x="433" fg:w="1"/><text x="69.9762%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="69.7262%" y="277" width="0.1610%" height="15" fill="rgb(250,140,9)" fg:x="433" fg:w="1"/><text x="69.9762%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="69.8873%" y="325" width="0.1610%" height="15" fill="rgb(225,59,14)" fg:x="434" fg:w="1"/><text x="70.1373%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="69.8873%" y="309" width="0.1610%" height="15" fill="rgb(214,152,51)" fg:x="434" fg:w="1"/><text x="70.1373%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="69.8873%" y="293" width="0.1610%" height="15" fill="rgb(251,227,43)" fg:x="434" fg:w="1"/><text x="70.1373%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="69.8873%" y="277" width="0.1610%" height="15" fill="rgb(241,96,17)" fg:x="434" fg:w="1"/><text x="70.1373%" y="287.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_value_for_node (10 samples, 1.61%)</title><rect x="68.5990%" y="453" width="1.6103%" height="15" fill="rgb(234,198,43)" fg:x="426" fg:w="10"/><text x="68.8490%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.64%)</title><rect x="69.5652%" y="437" width="0.6441%" height="15" fill="rgb(220,108,29)" fg:x="432" fg:w="4"/><text x="69.8152%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.64%)</title><rect x="69.5652%" y="421" width="0.6441%" height="15" fill="rgb(226,163,33)" fg:x="432" fg:w="4"/><text x="69.8152%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.64%)</title><rect x="69.5652%" y="405" width="0.6441%" height="15" fill="rgb(205,194,45)" fg:x="432" fg:w="4"/><text x="69.8152%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.32%)</title><rect x="69.8873%" y="389" width="0.3221%" height="15" fill="rgb(206,143,44)" fg:x="434" fg:w="2"/><text x="70.1373%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="69.8873%" y="373" width="0.3221%" height="15" fill="rgb(236,136,36)" fg:x="434" fg:w="2"/><text x="70.1373%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="69.8873%" y="357" width="0.3221%" height="15" fill="rgb(249,172,42)" fg:x="434" fg:w="2"/><text x="70.1373%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="69.8873%" y="341" width="0.3221%" height="15" fill="rgb(216,139,23)" fg:x="434" fg:w="2"/><text x="70.1373%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="70.0483%" y="325" width="0.1610%" height="15" fill="rgb(207,166,20)" fg:x="435" fg:w="1"/><text x="70.2983%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="70.0483%" y="309" width="0.1610%" height="15" fill="rgb(210,209,22)" fg:x="435" fg:w="1"/><text x="70.2983%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="70.0483%" y="293" width="0.1610%" height="15" fill="rgb(232,118,20)" fg:x="435" fg:w="1"/><text x="70.2983%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="70.0483%" y="277" width="0.1610%" height="15" fill="rgb(238,113,42)" fg:x="435" fg:w="1"/><text x="70.2983%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="70.0483%" y="261" width="0.1610%" height="15" fill="rgb(231,42,5)" fg:x="435" fg:w="1"/><text x="70.2983%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="70.2093%" y="309" width="0.1610%" height="15" fill="rgb(243,166,24)" fg:x="436" fg:w="1"/><text x="70.4593%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="70.2093%" y="293" width="0.1610%" height="15" fill="rgb(237,226,12)" fg:x="436" fg:w="1"/><text x="70.4593%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="70.2093%" y="277" width="0.1610%" height="15" fill="rgb(229,133,24)" fg:x="436" fg:w="1"/><text x="70.4593%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="70.2093%" y="261" width="0.1610%" height="15" fill="rgb(238,33,43)" fg:x="436" fg:w="1"/><text x="70.4593%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="70.3704%" y="309" width="0.3221%" height="15" fill="rgb(227,59,38)" fg:x="437" fg:w="2"/><text x="70.6204%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="70.3704%" y="293" width="0.3221%" height="15" fill="rgb(230,97,0)" fg:x="437" fg:w="2"/><text x="70.6204%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="70.3704%" y="277" width="0.3221%" height="15" fill="rgb(250,173,50)" fg:x="437" fg:w="2"/><text x="70.6204%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="70.3704%" y="261" width="0.3221%" height="15" fill="rgb(240,15,50)" fg:x="437" fg:w="2"/><text x="70.6204%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.81%)</title><rect x="70.2093%" y="357" width="0.8052%" height="15" fill="rgb(221,93,22)" fg:x="436" fg:w="5"/><text x="70.4593%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.81%)</title><rect x="70.2093%" y="341" width="0.8052%" height="15" fill="rgb(245,180,53)" fg:x="436" fg:w="5"/><text x="70.4593%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.81%)</title><rect x="70.2093%" y="325" width="0.8052%" height="15" fill="rgb(231,88,51)" fg:x="436" fg:w="5"/><text x="70.4593%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="70.6924%" y="309" width="0.3221%" height="15" fill="rgb(240,58,21)" fg:x="439" fg:w="2"/><text x="70.9424%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="70.6924%" y="293" width="0.3221%" height="15" fill="rgb(237,21,10)" fg:x="439" fg:w="2"/><text x="70.9424%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="70.6924%" y="277" width="0.3221%" height="15" fill="rgb(218,43,11)" fg:x="439" fg:w="2"/><text x="70.9424%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.97%)</title><rect x="70.2093%" y="389" width="0.9662%" height="15" fill="rgb(218,221,29)" fg:x="436" fg:w="6"/><text x="70.4593%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.97%)</title><rect x="70.2093%" y="373" width="0.9662%" height="15" fill="rgb(214,118,42)" fg:x="436" fg:w="6"/><text x="70.4593%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="71.0145%" y="357" width="0.1610%" height="15" fill="rgb(251,200,26)" fg:x="441" fg:w="1"/><text x="71.2645%" y="367.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="71.0145%" y="341" width="0.1610%" height="15" fill="rgb(237,101,39)" fg:x="441" fg:w="1"/><text x="71.2645%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="71.0145%" y="325" width="0.1610%" height="15" fill="rgb(251,117,11)" fg:x="441" fg:w="1"/><text x="71.2645%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="71.0145%" y="309" width="0.1610%" height="15" fill="rgb(216,223,23)" fg:x="441" fg:w="1"/><text x="71.2645%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="71.0145%" y="293" width="0.1610%" height="15" fill="rgb(251,54,12)" fg:x="441" fg:w="1"/><text x="71.2645%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="71.0145%" y="277" width="0.1610%" height="15" fill="rgb(254,176,54)" fg:x="441" fg:w="1"/><text x="71.2645%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="71.0145%" y="261" width="0.1610%" height="15" fill="rgb(210,32,8)" fg:x="441" fg:w="1"/><text x="71.2645%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="71.0145%" y="245" width="0.1610%" height="15" fill="rgb(235,52,38)" fg:x="441" fg:w="1"/><text x="71.2645%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="71.0145%" y="229" width="0.1610%" height="15" fill="rgb(231,4,44)" fg:x="441" fg:w="1"/><text x="71.2645%" y="239.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="71.0145%" y="213" width="0.1610%" height="15" fill="rgb(249,2,32)" fg:x="441" fg:w="1"/><text x="71.2645%" y="223.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="71.0145%" y="197" width="0.1610%" height="15" fill="rgb(224,65,26)" fg:x="441" fg:w="1"/><text x="71.2645%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.32%)</title><rect x="71.1755%" y="341" width="0.3221%" height="15" fill="rgb(250,73,40)" fg:x="442" fg:w="2"/><text x="71.4255%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="71.1755%" y="325" width="0.3221%" height="15" fill="rgb(253,177,16)" fg:x="442" fg:w="2"/><text x="71.4255%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="71.1755%" y="309" width="0.3221%" height="15" fill="rgb(217,32,34)" fg:x="442" fg:w="2"/><text x="71.4255%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="71.1755%" y="293" width="0.3221%" height="15" fill="rgb(212,7,10)" fg:x="442" fg:w="2"/><text x="71.4255%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="71.4976%" y="341" width="0.1610%" height="15" fill="rgb(245,89,8)" fg:x="444" fg:w="1"/><text x="71.7476%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="71.4976%" y="325" width="0.1610%" height="15" fill="rgb(237,16,53)" fg:x="444" fg:w="1"/><text x="71.7476%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="71.4976%" y="309" width="0.1610%" height="15" fill="rgb(250,204,30)" fg:x="444" fg:w="1"/><text x="71.7476%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="71.6586%" y="309" width="0.1610%" height="15" fill="rgb(208,77,27)" fg:x="445" fg:w="1"/><text x="71.9086%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="71.6586%" y="293" width="0.1610%" height="15" fill="rgb(250,204,28)" fg:x="445" fg:w="1"/><text x="71.9086%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="71.6586%" y="277" width="0.1610%" height="15" fill="rgb(244,63,21)" fg:x="445" fg:w="1"/><text x="71.9086%" y="287.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.32%)</title><rect x="71.6586%" y="341" width="0.3221%" height="15" fill="rgb(236,85,44)" fg:x="445" fg:w="2"/><text x="71.9086%" y="351.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.32%)</title><rect x="71.6586%" y="325" width="0.3221%" height="15" fill="rgb(215,98,4)" fg:x="445" fg:w="2"/><text x="71.9086%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.16%)</title><rect x="71.8196%" y="309" width="0.1610%" height="15" fill="rgb(235,38,11)" fg:x="446" fg:w="1"/><text x="72.0696%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="71.8196%" y="293" width="0.1610%" height="15" fill="rgb(254,186,25)" fg:x="446" fg:w="1"/><text x="72.0696%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="71.8196%" y="277" width="0.1610%" height="15" fill="rgb(225,55,31)" fg:x="446" fg:w="1"/><text x="72.0696%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="71.8196%" y="261" width="0.1610%" height="15" fill="rgb(211,15,21)" fg:x="446" fg:w="1"/><text x="72.0696%" y="271.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="71.9807%" y="325" width="0.1610%" height="15" fill="rgb(215,187,41)" fg:x="447" fg:w="1"/><text x="72.2307%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="71.9807%" y="309" width="0.1610%" height="15" fill="rgb(248,69,32)" fg:x="447" fg:w="1"/><text x="72.2307%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="71.9807%" y="293" width="0.1610%" height="15" fill="rgb(252,102,52)" fg:x="447" fg:w="1"/><text x="72.2307%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (2 samples, 0.32%)</title><rect x="72.1417%" y="325" width="0.3221%" height="15" fill="rgb(253,140,32)" fg:x="448" fg:w="2"/><text x="72.3917%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="72.1417%" y="309" width="0.3221%" height="15" fill="rgb(216,56,42)" fg:x="448" fg:w="2"/><text x="72.3917%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="72.1417%" y="293" width="0.3221%" height="15" fill="rgb(216,184,14)" fg:x="448" fg:w="2"/><text x="72.3917%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="72.1417%" y="277" width="0.3221%" height="15" fill="rgb(237,187,27)" fg:x="448" fg:w="2"/><text x="72.3917%" y="287.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (15 samples, 2.42%)</title><rect x="70.2093%" y="453" width="2.4155%" height="15" fill="rgb(219,65,3)" fg:x="436" fg:w="15"/><text x="70.4593%" y="463.50">mi..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (15 samples, 2.42%)</title><rect x="70.2093%" y="437" width="2.4155%" height="15" fill="rgb(245,83,25)" fg:x="436" fg:w="15"/><text x="70.4593%" y="447.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (15 samples, 2.42%)</title><rect x="70.2093%" y="421" width="2.4155%" height="15" fill="rgb(214,205,45)" fg:x="436" fg:w="15"/><text x="70.4593%" y="431.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (15 samples, 2.42%)</title><rect x="70.2093%" y="405" width="2.4155%" height="15" fill="rgb(241,20,18)" fg:x="436" fg:w="15"/><text x="70.4593%" y="415.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (9 samples, 1.45%)</title><rect x="71.1755%" y="389" width="1.4493%" height="15" fill="rgb(232,163,23)" fg:x="442" fg:w="9"/><text x="71.4255%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 1.45%)</title><rect x="71.1755%" y="373" width="1.4493%" height="15" fill="rgb(214,5,46)" fg:x="442" fg:w="9"/><text x="71.4255%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 1.45%)</title><rect x="71.1755%" y="357" width="1.4493%" height="15" fill="rgb(229,78,17)" fg:x="442" fg:w="9"/><text x="71.4255%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.64%)</title><rect x="71.9807%" y="341" width="0.6441%" height="15" fill="rgb(248,89,10)" fg:x="447" fg:w="4"/><text x="72.2307%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="72.4638%" y="325" width="0.1610%" height="15" fill="rgb(248,54,15)" fg:x="450" fg:w="1"/><text x="72.7138%" y="335.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.16%)</title><rect x="72.4638%" y="309" width="0.1610%" height="15" fill="rgb(223,116,6)" fg:x="450" fg:w="1"/><text x="72.7138%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="72.4638%" y="293" width="0.1610%" height="15" fill="rgb(205,125,38)" fg:x="450" fg:w="1"/><text x="72.7138%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="72.4638%" y="277" width="0.1610%" height="15" fill="rgb(251,78,38)" fg:x="450" fg:w="1"/><text x="72.7138%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="72.4638%" y="261" width="0.1610%" height="15" fill="rgb(253,78,28)" fg:x="450" fg:w="1"/><text x="72.7138%" y="271.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="72.6248%" y="405" width="0.1610%" height="15" fill="rgb(209,120,3)" fg:x="451" fg:w="1"/><text x="72.8748%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="72.6248%" y="389" width="0.1610%" height="15" fill="rgb(238,229,9)" fg:x="451" fg:w="1"/><text x="72.8748%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="72.6248%" y="373" width="0.1610%" height="15" fill="rgb(253,159,18)" fg:x="451" fg:w="1"/><text x="72.8748%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="72.7858%" y="373" width="0.1610%" height="15" fill="rgb(244,42,34)" fg:x="452" fg:w="1"/><text x="73.0358%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="72.7858%" y="357" width="0.1610%" height="15" fill="rgb(224,8,7)" fg:x="452" fg:w="1"/><text x="73.0358%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="72.7858%" y="341" width="0.1610%" height="15" fill="rgb(210,201,45)" fg:x="452" fg:w="1"/><text x="73.0358%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="72.7858%" y="325" width="0.1610%" height="15" fill="rgb(252,185,21)" fg:x="452" fg:w="1"/><text x="73.0358%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="72.7858%" y="309" width="0.1610%" height="15" fill="rgb(223,131,1)" fg:x="452" fg:w="1"/><text x="73.0358%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="72.7858%" y="293" width="0.1610%" height="15" fill="rgb(245,141,16)" fg:x="452" fg:w="1"/><text x="73.0358%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.16%)</title><rect x="72.9469%" y="373" width="0.1610%" height="15" fill="rgb(229,55,45)" fg:x="453" fg:w="1"/><text x="73.1969%" y="383.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.16%)</title><rect x="72.9469%" y="357" width="0.1610%" height="15" fill="rgb(208,92,15)" fg:x="453" fg:w="1"/><text x="73.1969%" y="367.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.16%)</title><rect x="72.9469%" y="341" width="0.1610%" height="15" fill="rgb(234,185,47)" fg:x="453" fg:w="1"/><text x="73.1969%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="72.9469%" y="325" width="0.1610%" height="15" fill="rgb(253,104,50)" fg:x="453" fg:w="1"/><text x="73.1969%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="72.9469%" y="309" width="0.1610%" height="15" fill="rgb(205,70,7)" fg:x="453" fg:w="1"/><text x="73.1969%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="72.9469%" y="293" width="0.1610%" height="15" fill="rgb(240,178,43)" fg:x="453" fg:w="1"/><text x="73.1969%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="72.7858%" y="405" width="0.4831%" height="15" fill="rgb(214,112,2)" fg:x="452" fg:w="3"/><text x="73.0358%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="72.7858%" y="389" width="0.4831%" height="15" fill="rgb(206,46,17)" fg:x="452" fg:w="3"/><text x="73.0358%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="73.1079%" y="373" width="0.1610%" height="15" fill="rgb(225,220,16)" fg:x="454" fg:w="1"/><text x="73.3579%" y="383.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="73.1079%" y="357" width="0.1610%" height="15" fill="rgb(238,65,40)" fg:x="454" fg:w="1"/><text x="73.3579%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="73.1079%" y="341" width="0.1610%" height="15" fill="rgb(230,151,21)" fg:x="454" fg:w="1"/><text x="73.3579%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="73.1079%" y="325" width="0.1610%" height="15" fill="rgb(218,58,49)" fg:x="454" fg:w="1"/><text x="73.3579%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="73.1079%" y="309" width="0.1610%" height="15" fill="rgb(219,179,14)" fg:x="454" fg:w="1"/><text x="73.3579%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="73.1079%" y="293" width="0.1610%" height="15" fill="rgb(223,72,1)" fg:x="454" fg:w="1"/><text x="73.3579%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="73.1079%" y="277" width="0.1610%" height="15" fill="rgb(238,126,10)" fg:x="454" fg:w="1"/><text x="73.3579%" y="287.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.16%)</title><rect x="73.1079%" y="261" width="0.1610%" height="15" fill="rgb(224,206,38)" fg:x="454" fg:w="1"/><text x="73.3579%" y="271.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="73.1079%" y="245" width="0.1610%" height="15" fill="rgb(212,201,54)" fg:x="454" fg:w="1"/><text x="73.3579%" y="255.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="73.1079%" y="229" width="0.1610%" height="15" fill="rgb(218,154,48)" fg:x="454" fg:w="1"/><text x="73.3579%" y="239.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="73.1079%" y="213" width="0.1610%" height="15" fill="rgb(232,93,24)" fg:x="454" fg:w="1"/><text x="73.3579%" y="223.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="73.2689%" y="341" width="0.1610%" height="15" fill="rgb(245,30,21)" fg:x="455" fg:w="1"/><text x="73.5189%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="73.2689%" y="325" width="0.1610%" height="15" fill="rgb(242,148,29)" fg:x="455" fg:w="1"/><text x="73.5189%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="73.2689%" y="309" width="0.1610%" height="15" fill="rgb(244,153,54)" fg:x="455" fg:w="1"/><text x="73.5189%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.32%)</title><rect x="73.2689%" y="357" width="0.3221%" height="15" fill="rgb(252,87,22)" fg:x="455" fg:w="2"/><text x="73.5189%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.16%)</title><rect x="73.4300%" y="341" width="0.1610%" height="15" fill="rgb(210,51,29)" fg:x="456" fg:w="1"/><text x="73.6800%" y="351.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (1 samples, 0.16%)</title><rect x="73.4300%" y="325" width="0.1610%" height="15" fill="rgb(242,136,47)" fg:x="456" fg:w="1"/><text x="73.6800%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="73.4300%" y="309" width="0.1610%" height="15" fill="rgb(238,68,4)" fg:x="456" fg:w="1"/><text x="73.6800%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="73.4300%" y="293" width="0.1610%" height="15" fill="rgb(242,161,30)" fg:x="456" fg:w="1"/><text x="73.6800%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="73.4300%" y="277" width="0.1610%" height="15" fill="rgb(218,58,44)" fg:x="456" fg:w="1"/><text x="73.6800%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="73.5910%" y="357" width="0.3221%" height="15" fill="rgb(252,125,32)" fg:x="457" fg:w="2"/><text x="73.8410%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="73.5910%" y="341" width="0.3221%" height="15" fill="rgb(219,178,0)" fg:x="457" fg:w="2"/><text x="73.8410%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="73.5910%" y="325" width="0.3221%" height="15" fill="rgb(213,152,7)" fg:x="457" fg:w="2"/><text x="73.8410%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="73.9130%" y="341" width="0.1610%" height="15" fill="rgb(249,109,34)" fg:x="459" fg:w="1"/><text x="74.1630%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.16%)</title><rect x="73.9130%" y="325" width="0.1610%" height="15" fill="rgb(232,96,21)" fg:x="459" fg:w="1"/><text x="74.1630%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="73.9130%" y="309" width="0.1610%" height="15" fill="rgb(228,27,39)" fg:x="459" fg:w="1"/><text x="74.1630%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="73.9130%" y="293" width="0.1610%" height="15" fill="rgb(211,182,52)" fg:x="459" fg:w="1"/><text x="74.1630%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="73.9130%" y="277" width="0.1610%" height="15" fill="rgb(234,178,38)" fg:x="459" fg:w="1"/><text x="74.1630%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.32%)</title><rect x="73.9130%" y="357" width="0.3221%" height="15" fill="rgb(221,111,3)" fg:x="459" fg:w="2"/><text x="74.1630%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="74.0741%" y="341" width="0.1610%" height="15" fill="rgb(228,175,21)" fg:x="460" fg:w="1"/><text x="74.3241%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="74.0741%" y="325" width="0.1610%" height="15" fill="rgb(228,174,43)" fg:x="460" fg:w="1"/><text x="74.3241%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="74.0741%" y="309" width="0.1610%" height="15" fill="rgb(211,191,0)" fg:x="460" fg:w="1"/><text x="74.3241%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="74.0741%" y="293" width="0.1610%" height="15" fill="rgb(253,117,3)" fg:x="460" fg:w="1"/><text x="74.3241%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="74.0741%" y="277" width="0.1610%" height="15" fill="rgb(241,127,19)" fg:x="460" fg:w="1"/><text x="74.3241%" y="287.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.16%)</title><rect x="74.2351%" y="357" width="0.1610%" height="15" fill="rgb(218,103,12)" fg:x="461" fg:w="1"/><text x="74.4851%" y="367.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.16%)</title><rect x="74.2351%" y="341" width="0.1610%" height="15" fill="rgb(236,214,43)" fg:x="461" fg:w="1"/><text x="74.4851%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.16%)</title><rect x="74.2351%" y="325" width="0.1610%" height="15" fill="rgb(244,144,19)" fg:x="461" fg:w="1"/><text x="74.4851%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="74.2351%" y="309" width="0.1610%" height="15" fill="rgb(246,188,10)" fg:x="461" fg:w="1"/><text x="74.4851%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="74.2351%" y="293" width="0.1610%" height="15" fill="rgb(212,193,33)" fg:x="461" fg:w="1"/><text x="74.4851%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="74.2351%" y="277" width="0.1610%" height="15" fill="rgb(241,51,29)" fg:x="461" fg:w="1"/><text x="74.4851%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="74.3961%" y="357" width="0.1610%" height="15" fill="rgb(211,58,19)" fg:x="462" fg:w="1"/><text x="74.6461%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="74.3961%" y="341" width="0.1610%" height="15" fill="rgb(229,111,26)" fg:x="462" fg:w="1"/><text x="74.6461%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="74.3961%" y="325" width="0.1610%" height="15" fill="rgb(213,115,40)" fg:x="462" fg:w="1"/><text x="74.6461%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="74.3961%" y="309" width="0.1610%" height="15" fill="rgb(209,56,44)" fg:x="462" fg:w="1"/><text x="74.6461%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="74.5572%" y="341" width="0.1610%" height="15" fill="rgb(230,108,32)" fg:x="463" fg:w="1"/><text x="74.8072%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="74.5572%" y="325" width="0.1610%" height="15" fill="rgb(216,165,31)" fg:x="463" fg:w="1"/><text x="74.8072%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="74.5572%" y="309" width="0.1610%" height="15" fill="rgb(218,122,21)" fg:x="463" fg:w="1"/><text x="74.8072%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="74.7182%" y="325" width="0.1610%" height="15" fill="rgb(223,224,47)" fg:x="464" fg:w="1"/><text x="74.9682%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="74.7182%" y="309" width="0.1610%" height="15" fill="rgb(238,102,44)" fg:x="464" fg:w="1"/><text x="74.9682%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="74.7182%" y="293" width="0.1610%" height="15" fill="rgb(236,46,40)" fg:x="464" fg:w="1"/><text x="74.9682%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.32%)</title><rect x="74.7182%" y="341" width="0.3221%" height="15" fill="rgb(247,202,50)" fg:x="464" fg:w="2"/><text x="74.9682%" y="351.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.16%)</title><rect x="74.8792%" y="325" width="0.1610%" height="15" fill="rgb(209,99,20)" fg:x="465" fg:w="1"/><text x="75.1292%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="74.8792%" y="309" width="0.1610%" height="15" fill="rgb(252,27,34)" fg:x="465" fg:w="1"/><text x="75.1292%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="74.8792%" y="293" width="0.1610%" height="15" fill="rgb(215,206,23)" fg:x="465" fg:w="1"/><text x="75.1292%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="74.8792%" y="277" width="0.1610%" height="15" fill="rgb(212,135,36)" fg:x="465" fg:w="1"/><text x="75.1292%" y="287.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_value_for_node (45 samples, 7.25%)</title><rect x="67.9549%" y="485" width="7.2464%" height="15" fill="rgb(240,189,1)" fg:x="422" fg:w="45"/><text x="68.2049%" y="495.50">micrograd_..</text></g><g><title>micrograd_rs::engine::RunnableGraph::get_node_value (43 samples, 6.92%)</title><rect x="68.2770%" y="469" width="6.9243%" height="15" fill="rgb(242,56,20)" fg:x="424" fg:w="43"/><text x="68.5270%" y="479.50">micrograd..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16 samples, 2.58%)</title><rect x="72.6248%" y="453" width="2.5765%" height="15" fill="rgb(247,132,33)" fg:x="451" fg:w="16"/><text x="72.8748%" y="463.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16 samples, 2.58%)</title><rect x="72.6248%" y="437" width="2.5765%" height="15" fill="rgb(208,149,11)" fg:x="451" fg:w="16"/><text x="72.8748%" y="447.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 2.58%)</title><rect x="72.6248%" y="421" width="2.5765%" height="15" fill="rgb(211,33,11)" fg:x="451" fg:w="16"/><text x="72.8748%" y="431.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 1.93%)</title><rect x="73.2689%" y="405" width="1.9324%" height="15" fill="rgb(221,29,38)" fg:x="455" fg:w="12"/><text x="73.5189%" y="415.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 1.93%)</title><rect x="73.2689%" y="389" width="1.9324%" height="15" fill="rgb(206,182,49)" fg:x="455" fg:w="12"/><text x="73.5189%" y="399.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 1.93%)</title><rect x="73.2689%" y="373" width="1.9324%" height="15" fill="rgb(216,140,1)" fg:x="455" fg:w="12"/><text x="73.5189%" y="383.50">h..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.64%)</title><rect x="74.5572%" y="357" width="0.6441%" height="15" fill="rgb(232,57,40)" fg:x="463" fg:w="4"/><text x="74.8072%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="75.0403%" y="341" width="0.1610%" height="15" fill="rgb(224,186,18)" fg:x="466" fg:w="1"/><text x="75.2903%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="75.0403%" y="325" width="0.1610%" height="15" fill="rgb(215,121,11)" fg:x="466" fg:w="1"/><text x="75.2903%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="75.0403%" y="309" width="0.1610%" height="15" fill="rgb(245,147,10)" fg:x="466" fg:w="1"/><text x="75.2903%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="75.0403%" y="293" width="0.1610%" height="15" fill="rgb(238,153,13)" fg:x="466" fg:w="1"/><text x="75.2903%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="75.0403%" y="277" width="0.1610%" height="15" fill="rgb(233,108,0)" fg:x="466" fg:w="1"/><text x="75.2903%" y="287.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="75.2013%" y="405" width="0.1610%" height="15" fill="rgb(212,157,17)" fg:x="467" fg:w="1"/><text x="75.4513%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="75.2013%" y="389" width="0.1610%" height="15" fill="rgb(225,213,38)" fg:x="467" fg:w="1"/><text x="75.4513%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="75.2013%" y="373" width="0.1610%" height="15" fill="rgb(248,16,11)" fg:x="467" fg:w="1"/><text x="75.4513%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="75.2013%" y="421" width="0.4831%" height="15" fill="rgb(241,33,4)" fg:x="467" fg:w="3"/><text x="75.4513%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="75.3623%" y="405" width="0.3221%" height="15" fill="rgb(222,26,43)" fg:x="468" fg:w="2"/><text x="75.6123%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="75.3623%" y="389" width="0.3221%" height="15" fill="rgb(243,29,36)" fg:x="468" fg:w="2"/><text x="75.6123%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="75.3623%" y="373" width="0.3221%" height="15" fill="rgb(241,9,27)" fg:x="468" fg:w="2"/><text x="75.6123%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="75.3623%" y="357" width="0.3221%" height="15" fill="rgb(205,117,26)" fg:x="468" fg:w="2"/><text x="75.6123%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="75.3623%" y="341" width="0.3221%" height="15" fill="rgb(209,80,39)" fg:x="468" fg:w="2"/><text x="75.6123%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="75.3623%" y="325" width="0.3221%" height="15" fill="rgb(239,155,6)" fg:x="468" fg:w="2"/><text x="75.6123%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="75.3623%" y="309" width="0.3221%" height="15" fill="rgb(212,104,12)" fg:x="468" fg:w="2"/><text x="75.6123%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="75.3623%" y="293" width="0.3221%" height="15" fill="rgb(234,204,3)" fg:x="468" fg:w="2"/><text x="75.6123%" y="303.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (4 samples, 0.64%)</title><rect x="75.2013%" y="485" width="0.6441%" height="15" fill="rgb(251,218,7)" fg:x="467" fg:w="4"/><text x="75.4513%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4 samples, 0.64%)</title><rect x="75.2013%" y="469" width="0.6441%" height="15" fill="rgb(221,81,32)" fg:x="467" fg:w="4"/><text x="75.4513%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.64%)</title><rect x="75.2013%" y="453" width="0.6441%" height="15" fill="rgb(214,152,26)" fg:x="467" fg:w="4"/><text x="75.4513%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.64%)</title><rect x="75.2013%" y="437" width="0.6441%" height="15" fill="rgb(223,22,3)" fg:x="467" fg:w="4"/><text x="75.4513%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.16%)</title><rect x="75.6844%" y="421" width="0.1610%" height="15" fill="rgb(207,174,7)" fg:x="470" fg:w="1"/><text x="75.9344%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="75.6844%" y="405" width="0.1610%" height="15" fill="rgb(224,19,52)" fg:x="470" fg:w="1"/><text x="75.9344%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="75.6844%" y="389" width="0.1610%" height="15" fill="rgb(228,24,14)" fg:x="470" fg:w="1"/><text x="75.9344%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="75.6844%" y="373" width="0.1610%" height="15" fill="rgb(230,153,43)" fg:x="470" fg:w="1"/><text x="75.9344%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="75.6844%" y="357" width="0.1610%" height="15" fill="rgb(231,106,12)" fg:x="470" fg:w="1"/><text x="75.9344%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="75.6844%" y="341" width="0.1610%" height="15" fill="rgb(215,92,2)" fg:x="470" fg:w="1"/><text x="75.9344%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="75.6844%" y="325" width="0.1610%" height="15" fill="rgb(249,143,25)" fg:x="470" fg:w="1"/><text x="75.9344%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="75.8454%" y="437" width="0.1610%" height="15" fill="rgb(252,7,35)" fg:x="471" fg:w="1"/><text x="76.0954%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="75.8454%" y="421" width="0.1610%" height="15" fill="rgb(216,69,40)" fg:x="471" fg:w="1"/><text x="76.0954%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="75.8454%" y="405" width="0.1610%" height="15" fill="rgb(240,36,33)" fg:x="471" fg:w="1"/><text x="76.0954%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="76.0064%" y="357" width="0.1610%" height="15" fill="rgb(231,128,14)" fg:x="472" fg:w="1"/><text x="76.2564%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="76.0064%" y="341" width="0.1610%" height="15" fill="rgb(245,143,14)" fg:x="472" fg:w="1"/><text x="76.2564%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="76.0064%" y="325" width="0.1610%" height="15" fill="rgb(222,130,28)" fg:x="472" fg:w="1"/><text x="76.2564%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="76.0064%" y="309" width="0.1610%" height="15" fill="rgb(212,10,48)" fg:x="472" fg:w="1"/><text x="76.2564%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="76.0064%" y="405" width="0.4831%" height="15" fill="rgb(254,118,45)" fg:x="472" fg:w="3"/><text x="76.2564%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="76.0064%" y="389" width="0.4831%" height="15" fill="rgb(228,6,45)" fg:x="472" fg:w="3"/><text x="76.2564%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="76.0064%" y="373" width="0.4831%" height="15" fill="rgb(241,18,35)" fg:x="472" fg:w="3"/><text x="76.2564%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="76.1675%" y="357" width="0.3221%" height="15" fill="rgb(227,214,53)" fg:x="473" fg:w="2"/><text x="76.4175%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="76.1675%" y="341" width="0.3221%" height="15" fill="rgb(224,107,51)" fg:x="473" fg:w="2"/><text x="76.4175%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="76.1675%" y="325" width="0.3221%" height="15" fill="rgb(248,60,28)" fg:x="473" fg:w="2"/><text x="76.4175%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="76.1675%" y="309" width="0.3221%" height="15" fill="rgb(249,101,23)" fg:x="473" fg:w="2"/><text x="76.4175%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.64%)</title><rect x="76.0064%" y="437" width="0.6441%" height="15" fill="rgb(228,51,19)" fg:x="472" fg:w="4"/><text x="76.2564%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.64%)</title><rect x="76.0064%" y="421" width="0.6441%" height="15" fill="rgb(213,20,6)" fg:x="472" fg:w="4"/><text x="76.2564%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="76.4895%" y="405" width="0.1610%" height="15" fill="rgb(212,124,10)" fg:x="475" fg:w="1"/><text x="76.7395%" y="415.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="76.4895%" y="389" width="0.1610%" height="15" fill="rgb(248,3,40)" fg:x="475" fg:w="1"/><text x="76.7395%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="76.4895%" y="373" width="0.1610%" height="15" fill="rgb(223,178,23)" fg:x="475" fg:w="1"/><text x="76.7395%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="76.4895%" y="357" width="0.1610%" height="15" fill="rgb(240,132,45)" fg:x="475" fg:w="1"/><text x="76.7395%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="76.4895%" y="341" width="0.1610%" height="15" fill="rgb(245,164,36)" fg:x="475" fg:w="1"/><text x="76.7395%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="76.4895%" y="325" width="0.1610%" height="15" fill="rgb(231,188,53)" fg:x="475" fg:w="1"/><text x="76.7395%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="76.4895%" y="309" width="0.1610%" height="15" fill="rgb(237,198,39)" fg:x="475" fg:w="1"/><text x="76.7395%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="76.4895%" y="293" width="0.1610%" height="15" fill="rgb(223,120,35)" fg:x="475" fg:w="1"/><text x="76.7395%" y="303.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="76.4895%" y="277" width="0.1610%" height="15" fill="rgb(253,107,49)" fg:x="475" fg:w="1"/><text x="76.7395%" y="287.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="76.4895%" y="261" width="0.1610%" height="15" fill="rgb(216,44,31)" fg:x="475" fg:w="1"/><text x="76.7395%" y="271.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="76.4895%" y="245" width="0.1610%" height="15" fill="rgb(253,87,21)" fg:x="475" fg:w="1"/><text x="76.7395%" y="255.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="76.6506%" y="389" width="0.1610%" height="15" fill="rgb(226,18,2)" fg:x="476" fg:w="1"/><text x="76.9006%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="76.6506%" y="373" width="0.1610%" height="15" fill="rgb(216,8,46)" fg:x="476" fg:w="1"/><text x="76.9006%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="76.6506%" y="357" width="0.1610%" height="15" fill="rgb(226,140,39)" fg:x="476" fg:w="1"/><text x="76.9006%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="76.8116%" y="389" width="0.1610%" height="15" fill="rgb(221,194,54)" fg:x="477" fg:w="1"/><text x="77.0616%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.16%)</title><rect x="76.8116%" y="373" width="0.1610%" height="15" fill="rgb(213,92,11)" fg:x="477" fg:w="1"/><text x="77.0616%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="76.8116%" y="357" width="0.1610%" height="15" fill="rgb(229,162,46)" fg:x="477" fg:w="1"/><text x="77.0616%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="76.8116%" y="341" width="0.1610%" height="15" fill="rgb(214,111,36)" fg:x="477" fg:w="1"/><text x="77.0616%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="76.8116%" y="325" width="0.1610%" height="15" fill="rgb(207,6,21)" fg:x="477" fg:w="1"/><text x="77.0616%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="76.8116%" y="309" width="0.1610%" height="15" fill="rgb(213,127,38)" fg:x="477" fg:w="1"/><text x="77.0616%" y="319.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_node_value (57 samples, 9.18%)</title><rect x="67.9549%" y="501" width="9.1787%" height="15" fill="rgb(238,118,32)" fg:x="422" fg:w="57"/><text x="68.2049%" y="511.50">micrograd_rs:..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 1.29%)</title><rect x="75.8454%" y="485" width="1.2882%" height="15" fill="rgb(240,139,39)" fg:x="471" fg:w="8"/><text x="76.0954%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 1.29%)</title><rect x="75.8454%" y="469" width="1.2882%" height="15" fill="rgb(235,10,37)" fg:x="471" fg:w="8"/><text x="76.0954%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 1.29%)</title><rect x="75.8454%" y="453" width="1.2882%" height="15" fill="rgb(249,171,38)" fg:x="471" fg:w="8"/><text x="76.0954%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.48%)</title><rect x="76.6506%" y="437" width="0.4831%" height="15" fill="rgb(242,144,32)" fg:x="476" fg:w="3"/><text x="76.9006%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="76.6506%" y="421" width="0.4831%" height="15" fill="rgb(217,117,21)" fg:x="476" fg:w="3"/><text x="76.9006%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="76.6506%" y="405" width="0.4831%" height="15" fill="rgb(249,87,1)" fg:x="476" fg:w="3"/><text x="76.9006%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="76.9726%" y="389" width="0.1610%" height="15" fill="rgb(248,196,48)" fg:x="478" fg:w="1"/><text x="77.2226%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="76.9726%" y="373" width="0.1610%" height="15" fill="rgb(251,206,33)" fg:x="478" fg:w="1"/><text x="77.2226%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="76.9726%" y="357" width="0.1610%" height="15" fill="rgb(232,141,28)" fg:x="478" fg:w="1"/><text x="77.2226%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="76.9726%" y="341" width="0.1610%" height="15" fill="rgb(209,167,14)" fg:x="478" fg:w="1"/><text x="77.2226%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="77.1337%" y="405" width="0.1610%" height="15" fill="rgb(225,11,50)" fg:x="479" fg:w="1"/><text x="77.3837%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="77.1337%" y="389" width="0.1610%" height="15" fill="rgb(209,50,20)" fg:x="479" fg:w="1"/><text x="77.3837%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="77.1337%" y="373" width="0.1610%" height="15" fill="rgb(212,17,46)" fg:x="479" fg:w="1"/><text x="77.3837%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="77.1337%" y="357" width="0.1610%" height="15" fill="rgb(216,101,39)" fg:x="479" fg:w="1"/><text x="77.3837%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="77.1337%" y="341" width="0.1610%" height="15" fill="rgb(212,228,48)" fg:x="479" fg:w="1"/><text x="77.3837%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="77.1337%" y="325" width="0.1610%" height="15" fill="rgb(250,6,50)" fg:x="479" fg:w="1"/><text x="77.3837%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="77.1337%" y="309" width="0.1610%" height="15" fill="rgb(250,160,48)" fg:x="479" fg:w="1"/><text x="77.3837%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="77.1337%" y="437" width="0.3221%" height="15" fill="rgb(244,216,33)" fg:x="479" fg:w="2"/><text x="77.3837%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="77.1337%" y="421" width="0.3221%" height="15" fill="rgb(207,157,5)" fg:x="479" fg:w="2"/><text x="77.3837%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.16%)</title><rect x="77.2947%" y="405" width="0.1610%" height="15" fill="rgb(228,199,8)" fg:x="480" fg:w="1"/><text x="77.5447%" y="415.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.16%)</title><rect x="77.2947%" y="389" width="0.1610%" height="15" fill="rgb(227,80,20)" fg:x="480" fg:w="1"/><text x="77.5447%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.16%)</title><rect x="77.2947%" y="373" width="0.1610%" height="15" fill="rgb(222,9,33)" fg:x="480" fg:w="1"/><text x="77.5447%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="77.2947%" y="357" width="0.1610%" height="15" fill="rgb(239,44,28)" fg:x="480" fg:w="1"/><text x="77.5447%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="77.2947%" y="341" width="0.1610%" height="15" fill="rgb(249,187,43)" fg:x="480" fg:w="1"/><text x="77.5447%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="77.2947%" y="325" width="0.1610%" height="15" fill="rgb(216,141,28)" fg:x="480" fg:w="1"/><text x="77.5447%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="77.4557%" y="389" width="0.3221%" height="15" fill="rgb(230,154,53)" fg:x="481" fg:w="2"/><text x="77.7057%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="77.4557%" y="373" width="0.3221%" height="15" fill="rgb(227,82,4)" fg:x="481" fg:w="2"/><text x="77.7057%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="77.4557%" y="357" width="0.3221%" height="15" fill="rgb(220,107,16)" fg:x="481" fg:w="2"/><text x="77.7057%" y="367.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (5 samples, 0.81%)</title><rect x="77.1337%" y="501" width="0.8052%" height="15" fill="rgb(207,187,2)" fg:x="479" fg:w="5"/><text x="77.3837%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (5 samples, 0.81%)</title><rect x="77.1337%" y="485" width="0.8052%" height="15" fill="rgb(210,162,52)" fg:x="479" fg:w="5"/><text x="77.3837%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (5 samples, 0.81%)</title><rect x="77.1337%" y="469" width="0.8052%" height="15" fill="rgb(217,216,49)" fg:x="479" fg:w="5"/><text x="77.3837%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (5 samples, 0.81%)</title><rect x="77.1337%" y="453" width="0.8052%" height="15" fill="rgb(218,146,49)" fg:x="479" fg:w="5"/><text x="77.3837%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.48%)</title><rect x="77.4557%" y="437" width="0.4831%" height="15" fill="rgb(216,55,40)" fg:x="481" fg:w="3"/><text x="77.7057%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="77.4557%" y="421" width="0.4831%" height="15" fill="rgb(208,196,21)" fg:x="481" fg:w="3"/><text x="77.7057%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="77.4557%" y="405" width="0.4831%" height="15" fill="rgb(242,117,42)" fg:x="481" fg:w="3"/><text x="77.7057%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="77.7778%" y="389" width="0.1610%" height="15" fill="rgb(210,11,23)" fg:x="483" fg:w="1"/><text x="78.0278%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="77.7778%" y="373" width="0.1610%" height="15" fill="rgb(217,110,2)" fg:x="483" fg:w="1"/><text x="78.0278%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="77.7778%" y="357" width="0.1610%" height="15" fill="rgb(229,77,54)" fg:x="483" fg:w="1"/><text x="78.0278%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="77.7778%" y="341" width="0.1610%" height="15" fill="rgb(218,53,16)" fg:x="483" fg:w="1"/><text x="78.0278%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="77.9388%" y="373" width="0.1610%" height="15" fill="rgb(215,38,13)" fg:x="484" fg:w="1"/><text x="78.1888%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="77.9388%" y="357" width="0.1610%" height="15" fill="rgb(235,42,18)" fg:x="484" fg:w="1"/><text x="78.1888%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="77.9388%" y="341" width="0.1610%" height="15" fill="rgb(219,66,54)" fg:x="484" fg:w="1"/><text x="78.1888%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="77.9388%" y="325" width="0.1610%" height="15" fill="rgb(222,205,4)" fg:x="484" fg:w="1"/><text x="78.1888%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="77.9388%" y="421" width="0.3221%" height="15" fill="rgb(227,213,46)" fg:x="484" fg:w="2"/><text x="78.1888%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="77.9388%" y="405" width="0.3221%" height="15" fill="rgb(250,145,42)" fg:x="484" fg:w="2"/><text x="78.1888%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="77.9388%" y="389" width="0.3221%" height="15" fill="rgb(219,15,2)" fg:x="484" fg:w="2"/><text x="78.1888%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="78.0998%" y="373" width="0.1610%" height="15" fill="rgb(231,181,52)" fg:x="485" fg:w="1"/><text x="78.3498%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="78.0998%" y="357" width="0.1610%" height="15" fill="rgb(235,1,42)" fg:x="485" fg:w="1"/><text x="78.3498%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="78.0998%" y="341" width="0.1610%" height="15" fill="rgb(249,88,27)" fg:x="485" fg:w="1"/><text x="78.3498%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="78.0998%" y="325" width="0.1610%" height="15" fill="rgb(235,145,16)" fg:x="485" fg:w="1"/><text x="78.3498%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="77.9388%" y="453" width="0.4831%" height="15" fill="rgb(237,114,19)" fg:x="484" fg:w="3"/><text x="78.1888%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="77.9388%" y="437" width="0.4831%" height="15" fill="rgb(238,51,50)" fg:x="484" fg:w="3"/><text x="78.1888%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="78.2609%" y="421" width="0.1610%" height="15" fill="rgb(205,194,25)" fg:x="486" fg:w="1"/><text x="78.5109%" y="431.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="78.2609%" y="405" width="0.1610%" height="15" fill="rgb(215,203,17)" fg:x="486" fg:w="1"/><text x="78.5109%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="78.2609%" y="389" width="0.1610%" height="15" fill="rgb(233,112,49)" fg:x="486" fg:w="1"/><text x="78.5109%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="78.2609%" y="373" width="0.1610%" height="15" fill="rgb(241,130,26)" fg:x="486" fg:w="1"/><text x="78.5109%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="78.2609%" y="357" width="0.1610%" height="15" fill="rgb(252,223,19)" fg:x="486" fg:w="1"/><text x="78.5109%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="78.2609%" y="341" width="0.1610%" height="15" fill="rgb(211,95,25)" fg:x="486" fg:w="1"/><text x="78.5109%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="78.2609%" y="325" width="0.1610%" height="15" fill="rgb(251,182,27)" fg:x="486" fg:w="1"/><text x="78.5109%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="78.4219%" y="421" width="0.1610%" height="15" fill="rgb(238,24,4)" fg:x="487" fg:w="1"/><text x="78.6719%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="78.4219%" y="405" width="0.1610%" height="15" fill="rgb(224,220,25)" fg:x="487" fg:w="1"/><text x="78.6719%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.16%)</title><rect x="78.4219%" y="389" width="0.1610%" height="15" fill="rgb(239,133,26)" fg:x="487" fg:w="1"/><text x="78.6719%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="78.4219%" y="373" width="0.1610%" height="15" fill="rgb(211,94,48)" fg:x="487" fg:w="1"/><text x="78.6719%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="78.4219%" y="357" width="0.1610%" height="15" fill="rgb(239,87,6)" fg:x="487" fg:w="1"/><text x="78.6719%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="78.4219%" y="341" width="0.1610%" height="15" fill="rgb(227,62,0)" fg:x="487" fg:w="1"/><text x="78.6719%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (1 samples, 0.16%)</title><rect x="78.5829%" y="405" width="0.1610%" height="15" fill="rgb(211,226,4)" fg:x="488" fg:w="1"/><text x="78.8329%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.16%)</title><rect x="78.5829%" y="389" width="0.1610%" height="15" fill="rgb(253,38,52)" fg:x="488" fg:w="1"/><text x="78.8329%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="78.5829%" y="373" width="0.1610%" height="15" fill="rgb(229,126,40)" fg:x="488" fg:w="1"/><text x="78.8329%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="78.5829%" y="357" width="0.1610%" height="15" fill="rgb(229,165,44)" fg:x="488" fg:w="1"/><text x="78.8329%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="78.5829%" y="341" width="0.1610%" height="15" fill="rgb(247,95,47)" fg:x="488" fg:w="1"/><text x="78.8329%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="78.5829%" y="325" width="0.1610%" height="15" fill="rgb(216,140,30)" fg:x="488" fg:w="1"/><text x="78.8329%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="78.7440%" y="389" width="0.1610%" height="15" fill="rgb(246,214,8)" fg:x="489" fg:w="1"/><text x="78.9940%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="78.7440%" y="373" width="0.1610%" height="15" fill="rgb(227,224,15)" fg:x="489" fg:w="1"/><text x="78.9940%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="78.7440%" y="357" width="0.1610%" height="15" fill="rgb(233,175,4)" fg:x="489" fg:w="1"/><text x="78.9940%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="78.7440%" y="341" width="0.1610%" height="15" fill="rgb(221,66,45)" fg:x="489" fg:w="1"/><text x="78.9940%" y="351.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_value_for_node (69 samples, 11.11%)</title><rect x="67.9549%" y="517" width="11.1111%" height="15" fill="rgb(221,178,18)" fg:x="422" fg:w="69"/><text x="68.2049%" y="527.50">micrograd_rs::en..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 1.13%)</title><rect x="77.9388%" y="501" width="1.1272%" height="15" fill="rgb(213,81,29)" fg:x="484" fg:w="7"/><text x="78.1888%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 1.13%)</title><rect x="77.9388%" y="485" width="1.1272%" height="15" fill="rgb(220,89,49)" fg:x="484" fg:w="7"/><text x="78.1888%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 1.13%)</title><rect x="77.9388%" y="469" width="1.1272%" height="15" fill="rgb(227,60,33)" fg:x="484" fg:w="7"/><text x="78.1888%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.64%)</title><rect x="78.4219%" y="453" width="0.6441%" height="15" fill="rgb(205,113,12)" fg:x="487" fg:w="4"/><text x="78.6719%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.64%)</title><rect x="78.4219%" y="437" width="0.6441%" height="15" fill="rgb(211,32,1)" fg:x="487" fg:w="4"/><text x="78.6719%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="78.5829%" y="421" width="0.4831%" height="15" fill="rgb(246,2,12)" fg:x="488" fg:w="3"/><text x="78.8329%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="78.7440%" y="405" width="0.3221%" height="15" fill="rgb(243,37,27)" fg:x="489" fg:w="2"/><text x="78.9940%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="78.9050%" y="389" width="0.1610%" height="15" fill="rgb(248,211,31)" fg:x="490" fg:w="1"/><text x="79.1550%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="78.9050%" y="373" width="0.1610%" height="15" fill="rgb(242,146,47)" fg:x="490" fg:w="1"/><text x="79.1550%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="78.9050%" y="357" width="0.1610%" height="15" fill="rgb(206,70,20)" fg:x="490" fg:w="1"/><text x="79.1550%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="78.9050%" y="341" width="0.1610%" height="15" fill="rgb(215,10,51)" fg:x="490" fg:w="1"/><text x="79.1550%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="78.9050%" y="325" width="0.1610%" height="15" fill="rgb(243,178,53)" fg:x="490" fg:w="1"/><text x="79.1550%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="79.0660%" y="373" width="0.1610%" height="15" fill="rgb(233,221,20)" fg:x="491" fg:w="1"/><text x="79.3160%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.16%)</title><rect x="79.0660%" y="357" width="0.1610%" height="15" fill="rgb(218,95,35)" fg:x="491" fg:w="1"/><text x="79.3160%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="79.0660%" y="341" width="0.1610%" height="15" fill="rgb(229,13,5)" fg:x="491" fg:w="1"/><text x="79.3160%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="79.0660%" y="325" width="0.1610%" height="15" fill="rgb(252,164,30)" fg:x="491" fg:w="1"/><text x="79.3160%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="79.0660%" y="309" width="0.1610%" height="15" fill="rgb(232,68,36)" fg:x="491" fg:w="1"/><text x="79.3160%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="79.0660%" y="421" width="0.3221%" height="15" fill="rgb(219,59,54)" fg:x="491" fg:w="2"/><text x="79.3160%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="79.0660%" y="405" width="0.3221%" height="15" fill="rgb(250,92,33)" fg:x="491" fg:w="2"/><text x="79.3160%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="79.0660%" y="389" width="0.3221%" height="15" fill="rgb(229,162,54)" fg:x="491" fg:w="2"/><text x="79.3160%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="79.2271%" y="373" width="0.1610%" height="15" fill="rgb(244,114,52)" fg:x="492" fg:w="1"/><text x="79.4771%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="79.2271%" y="357" width="0.1610%" height="15" fill="rgb(212,211,43)" fg:x="492" fg:w="1"/><text x="79.4771%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="79.2271%" y="341" width="0.1610%" height="15" fill="rgb(226,147,8)" fg:x="492" fg:w="1"/><text x="79.4771%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="79.2271%" y="325" width="0.1610%" height="15" fill="rgb(226,23,13)" fg:x="492" fg:w="1"/><text x="79.4771%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="79.0660%" y="453" width="0.4831%" height="15" fill="rgb(240,63,4)" fg:x="491" fg:w="3"/><text x="79.3160%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="79.0660%" y="437" width="0.4831%" height="15" fill="rgb(221,1,32)" fg:x="491" fg:w="3"/><text x="79.3160%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="79.3881%" y="421" width="0.1610%" height="15" fill="rgb(242,117,10)" fg:x="493" fg:w="1"/><text x="79.6381%" y="431.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="79.3881%" y="405" width="0.1610%" height="15" fill="rgb(249,172,44)" fg:x="493" fg:w="1"/><text x="79.6381%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="79.3881%" y="389" width="0.1610%" height="15" fill="rgb(244,46,45)" fg:x="493" fg:w="1"/><text x="79.6381%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="79.3881%" y="373" width="0.1610%" height="15" fill="rgb(206,43,17)" fg:x="493" fg:w="1"/><text x="79.6381%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="79.3881%" y="357" width="0.1610%" height="15" fill="rgb(239,218,39)" fg:x="493" fg:w="1"/><text x="79.6381%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="79.3881%" y="341" width="0.1610%" height="15" fill="rgb(208,169,54)" fg:x="493" fg:w="1"/><text x="79.6381%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="79.3881%" y="325" width="0.1610%" height="15" fill="rgb(247,25,42)" fg:x="493" fg:w="1"/><text x="79.6381%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="79.3881%" y="309" width="0.1610%" height="15" fill="rgb(226,23,31)" fg:x="493" fg:w="1"/><text x="79.6381%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="79.3881%" y="293" width="0.1610%" height="15" fill="rgb(247,16,28)" fg:x="493" fg:w="1"/><text x="79.6381%" y="303.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="79.3881%" y="277" width="0.1610%" height="15" fill="rgb(231,147,38)" fg:x="493" fg:w="1"/><text x="79.6381%" y="287.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="79.3881%" y="261" width="0.1610%" height="15" fill="rgb(253,81,48)" fg:x="493" fg:w="1"/><text x="79.6381%" y="271.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="79.5491%" y="437" width="0.1610%" height="15" fill="rgb(249,222,43)" fg:x="494" fg:w="1"/><text x="79.7991%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="79.5491%" y="421" width="0.1610%" height="15" fill="rgb(221,3,27)" fg:x="494" fg:w="1"/><text x="79.7991%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="79.5491%" y="405" width="0.1610%" height="15" fill="rgb(228,180,5)" fg:x="494" fg:w="1"/><text x="79.7991%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="79.7101%" y="421" width="0.1610%" height="15" fill="rgb(227,131,42)" fg:x="495" fg:w="1"/><text x="79.9601%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="79.7101%" y="405" width="0.1610%" height="15" fill="rgb(212,3,39)" fg:x="495" fg:w="1"/><text x="79.9601%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="79.7101%" y="389" width="0.1610%" height="15" fill="rgb(226,45,5)" fg:x="495" fg:w="1"/><text x="79.9601%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="79.7101%" y="373" width="0.1610%" height="15" fill="rgb(215,167,45)" fg:x="495" fg:w="1"/><text x="79.9601%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="79.7101%" y="357" width="0.1610%" height="15" fill="rgb(250,218,53)" fg:x="495" fg:w="1"/><text x="79.9601%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="79.8712%" y="389" width="0.1610%" height="15" fill="rgb(207,140,0)" fg:x="496" fg:w="1"/><text x="80.1212%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="79.8712%" y="373" width="0.1610%" height="15" fill="rgb(238,133,51)" fg:x="496" fg:w="1"/><text x="80.1212%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="79.8712%" y="357" width="0.1610%" height="15" fill="rgb(218,203,53)" fg:x="496" fg:w="1"/><text x="80.1212%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.32%)</title><rect x="79.8712%" y="405" width="0.3221%" height="15" fill="rgb(226,184,25)" fg:x="496" fg:w="2"/><text x="80.1212%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="80.0322%" y="389" width="0.1610%" height="15" fill="rgb(231,121,21)" fg:x="497" fg:w="1"/><text x="80.2822%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="80.0322%" y="373" width="0.1610%" height="15" fill="rgb(251,14,34)" fg:x="497" fg:w="1"/><text x="80.2822%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="80.0322%" y="357" width="0.1610%" height="15" fill="rgb(249,193,11)" fg:x="497" fg:w="1"/><text x="80.2822%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="80.0322%" y="341" width="0.1610%" height="15" fill="rgb(220,172,37)" fg:x="497" fg:w="1"/><text x="80.2822%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="80.0322%" y="325" width="0.1610%" height="15" fill="rgb(231,229,43)" fg:x="497" fg:w="1"/><text x="80.2822%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="80.1932%" y="389" width="0.1610%" height="15" fill="rgb(250,161,5)" fg:x="498" fg:w="1"/><text x="80.4432%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="80.1932%" y="373" width="0.1610%" height="15" fill="rgb(218,225,18)" fg:x="498" fg:w="1"/><text x="80.4432%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="80.1932%" y="357" width="0.1610%" height="15" fill="rgb(245,45,42)" fg:x="498" fg:w="1"/><text x="80.4432%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="80.1932%" y="341" width="0.1610%" height="15" fill="rgb(211,115,1)" fg:x="498" fg:w="1"/><text x="80.4432%" y="351.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (10 samples, 1.61%)</title><rect x="79.0660%" y="517" width="1.6103%" height="15" fill="rgb(248,133,52)" fg:x="491" fg:w="10"/><text x="79.3160%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (10 samples, 1.61%)</title><rect x="79.0660%" y="501" width="1.6103%" height="15" fill="rgb(238,100,21)" fg:x="491" fg:w="10"/><text x="79.3160%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (10 samples, 1.61%)</title><rect x="79.0660%" y="485" width="1.6103%" height="15" fill="rgb(247,144,11)" fg:x="491" fg:w="10"/><text x="79.3160%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (10 samples, 1.61%)</title><rect x="79.0660%" y="469" width="1.6103%" height="15" fill="rgb(206,164,16)" fg:x="491" fg:w="10"/><text x="79.3160%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 1.13%)</title><rect x="79.5491%" y="453" width="1.1272%" height="15" fill="rgb(222,34,3)" fg:x="494" fg:w="7"/><text x="79.7991%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.97%)</title><rect x="79.7101%" y="437" width="0.9662%" height="15" fill="rgb(248,82,4)" fg:x="495" fg:w="6"/><text x="79.9601%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.81%)</title><rect x="79.8712%" y="421" width="0.8052%" height="15" fill="rgb(228,81,46)" fg:x="496" fg:w="5"/><text x="80.1212%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.48%)</title><rect x="80.1932%" y="405" width="0.4831%" height="15" fill="rgb(227,67,47)" fg:x="498" fg:w="3"/><text x="80.4432%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.32%)</title><rect x="80.3543%" y="389" width="0.3221%" height="15" fill="rgb(215,93,53)" fg:x="499" fg:w="2"/><text x="80.6043%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.32%)</title><rect x="80.3543%" y="373" width="0.3221%" height="15" fill="rgb(248,194,39)" fg:x="499" fg:w="2"/><text x="80.6043%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="80.3543%" y="357" width="0.3221%" height="15" fill="rgb(215,5,19)" fg:x="499" fg:w="2"/><text x="80.6043%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="80.3543%" y="341" width="0.3221%" height="15" fill="rgb(226,215,51)" fg:x="499" fg:w="2"/><text x="80.6043%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="80.3543%" y="325" width="0.3221%" height="15" fill="rgb(225,56,26)" fg:x="499" fg:w="2"/><text x="80.6043%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="80.6763%" y="437" width="0.1610%" height="15" fill="rgb(222,75,29)" fg:x="501" fg:w="1"/><text x="80.9263%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="80.6763%" y="421" width="0.1610%" height="15" fill="rgb(236,139,6)" fg:x="501" fg:w="1"/><text x="80.9263%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="80.6763%" y="405" width="0.1610%" height="15" fill="rgb(223,137,36)" fg:x="501" fg:w="1"/><text x="80.9263%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="80.6763%" y="389" width="0.1610%" height="15" fill="rgb(226,99,2)" fg:x="501" fg:w="1"/><text x="80.9263%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="80.6763%" y="373" width="0.1610%" height="15" fill="rgb(206,133,23)" fg:x="501" fg:w="1"/><text x="80.9263%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="80.6763%" y="357" width="0.1610%" height="15" fill="rgb(243,173,15)" fg:x="501" fg:w="1"/><text x="80.9263%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="80.6763%" y="341" width="0.1610%" height="15" fill="rgb(228,69,28)" fg:x="501" fg:w="1"/><text x="80.9263%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="80.8374%" y="325" width="0.1610%" height="15" fill="rgb(212,51,22)" fg:x="502" fg:w="1"/><text x="81.0874%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="80.8374%" y="309" width="0.1610%" height="15" fill="rgb(227,113,0)" fg:x="502" fg:w="1"/><text x="81.0874%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="80.8374%" y="293" width="0.1610%" height="15" fill="rgb(252,84,27)" fg:x="502" fg:w="1"/><text x="81.0874%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="80.6763%" y="469" width="0.4831%" height="15" fill="rgb(223,145,39)" fg:x="501" fg:w="3"/><text x="80.9263%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="80.6763%" y="453" width="0.4831%" height="15" fill="rgb(239,219,30)" fg:x="501" fg:w="3"/><text x="80.9263%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.32%)</title><rect x="80.8374%" y="437" width="0.3221%" height="15" fill="rgb(224,196,39)" fg:x="502" fg:w="2"/><text x="81.0874%" y="447.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (2 samples, 0.32%)</title><rect x="80.8374%" y="421" width="0.3221%" height="15" fill="rgb(205,35,43)" fg:x="502" fg:w="2"/><text x="81.0874%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.32%)</title><rect x="80.8374%" y="405" width="0.3221%" height="15" fill="rgb(228,201,21)" fg:x="502" fg:w="2"/><text x="81.0874%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.32%)</title><rect x="80.8374%" y="389" width="0.3221%" height="15" fill="rgb(237,118,16)" fg:x="502" fg:w="2"/><text x="81.0874%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="80.8374%" y="373" width="0.3221%" height="15" fill="rgb(241,17,19)" fg:x="502" fg:w="2"/><text x="81.0874%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="80.8374%" y="357" width="0.3221%" height="15" fill="rgb(214,10,25)" fg:x="502" fg:w="2"/><text x="81.0874%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="80.8374%" y="341" width="0.3221%" height="15" fill="rgb(238,37,29)" fg:x="502" fg:w="2"/><text x="81.0874%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.16%)</title><rect x="80.9984%" y="325" width="0.1610%" height="15" fill="rgb(253,83,25)" fg:x="503" fg:w="1"/><text x="81.2484%" y="335.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="80.9984%" y="309" width="0.1610%" height="15" fill="rgb(234,192,12)" fg:x="503" fg:w="1"/><text x="81.2484%" y="319.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="80.9984%" y="293" width="0.1610%" height="15" fill="rgb(241,216,45)" fg:x="503" fg:w="1"/><text x="81.2484%" y="303.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="80.9984%" y="277" width="0.1610%" height="15" fill="rgb(242,22,33)" fg:x="503" fg:w="1"/><text x="81.2484%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (1 samples, 0.16%)</title><rect x="81.1594%" y="421" width="0.1610%" height="15" fill="rgb(231,105,49)" fg:x="504" fg:w="1"/><text x="81.4094%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.16%)</title><rect x="81.1594%" y="405" width="0.1610%" height="15" fill="rgb(218,204,15)" fg:x="504" fg:w="1"/><text x="81.4094%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="81.1594%" y="389" width="0.1610%" height="15" fill="rgb(235,138,41)" fg:x="504" fg:w="1"/><text x="81.4094%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="81.1594%" y="373" width="0.1610%" height="15" fill="rgb(246,0,9)" fg:x="504" fg:w="1"/><text x="81.4094%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="81.1594%" y="357" width="0.1610%" height="15" fill="rgb(210,74,4)" fg:x="504" fg:w="1"/><text x="81.4094%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="81.1594%" y="341" width="0.1610%" height="15" fill="rgb(250,60,41)" fg:x="504" fg:w="1"/><text x="81.4094%" y="351.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.16%)</title><rect x="81.3205%" y="421" width="0.1610%" height="15" fill="rgb(220,115,12)" fg:x="505" fg:w="1"/><text x="81.5705%" y="431.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.16%)</title><rect x="81.3205%" y="405" width="0.1610%" height="15" fill="rgb(237,100,13)" fg:x="505" fg:w="1"/><text x="81.5705%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.16%)</title><rect x="81.3205%" y="389" width="0.1610%" height="15" fill="rgb(213,55,26)" fg:x="505" fg:w="1"/><text x="81.5705%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="81.3205%" y="373" width="0.1610%" height="15" fill="rgb(216,17,4)" fg:x="505" fg:w="1"/><text x="81.5705%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="81.3205%" y="357" width="0.1610%" height="15" fill="rgb(220,153,47)" fg:x="505" fg:w="1"/><text x="81.5705%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="81.3205%" y="341" width="0.1610%" height="15" fill="rgb(215,131,9)" fg:x="505" fg:w="1"/><text x="81.5705%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="81.4815%" y="421" width="0.1610%" height="15" fill="rgb(233,46,42)" fg:x="506" fg:w="1"/><text x="81.7315%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.16%)</title><rect x="81.4815%" y="405" width="0.1610%" height="15" fill="rgb(226,86,7)" fg:x="506" fg:w="1"/><text x="81.7315%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="81.4815%" y="389" width="0.1610%" height="15" fill="rgb(239,226,21)" fg:x="506" fg:w="1"/><text x="81.7315%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="81.4815%" y="373" width="0.1610%" height="15" fill="rgb(244,137,22)" fg:x="506" fg:w="1"/><text x="81.7315%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="81.4815%" y="357" width="0.1610%" height="15" fill="rgb(211,139,35)" fg:x="506" fg:w="1"/><text x="81.7315%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="81.4815%" y="341" width="0.1610%" height="15" fill="rgb(214,62,50)" fg:x="506" fg:w="1"/><text x="81.7315%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="81.6425%" y="405" width="0.1610%" height="15" fill="rgb(212,113,44)" fg:x="507" fg:w="1"/><text x="81.8925%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="81.6425%" y="389" width="0.1610%" height="15" fill="rgb(226,150,43)" fg:x="507" fg:w="1"/><text x="81.8925%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="81.6425%" y="373" width="0.1610%" height="15" fill="rgb(250,71,37)" fg:x="507" fg:w="1"/><text x="81.8925%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (3 samples, 0.48%)</title><rect x="81.8035%" y="405" width="0.4831%" height="15" fill="rgb(219,76,19)" fg:x="508" fg:w="3"/><text x="82.0535%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="81.8035%" y="389" width="0.4831%" height="15" fill="rgb(250,39,11)" fg:x="508" fg:w="3"/><text x="82.0535%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="81.8035%" y="373" width="0.4831%" height="15" fill="rgb(230,64,31)" fg:x="508" fg:w="3"/><text x="82.0535%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="81.8035%" y="357" width="0.4831%" height="15" fill="rgb(208,222,23)" fg:x="508" fg:w="3"/><text x="82.0535%" y="367.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_node_value (92 samples, 14.81%)</title><rect x="67.7939%" y="533" width="14.8148%" height="15" fill="rgb(227,125,18)" fg:x="421" fg:w="92"/><text x="68.0439%" y="543.50">micrograd_rs::engine::R..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 1.93%)</title><rect x="80.6763%" y="517" width="1.9324%" height="15" fill="rgb(234,210,9)" fg:x="501" fg:w="12"/><text x="80.9263%" y="527.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 1.93%)</title><rect x="80.6763%" y="501" width="1.9324%" height="15" fill="rgb(217,127,24)" fg:x="501" fg:w="12"/><text x="80.9263%" y="511.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 1.93%)</title><rect x="80.6763%" y="485" width="1.9324%" height="15" fill="rgb(239,141,48)" fg:x="501" fg:w="12"/><text x="80.9263%" y="495.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 1.45%)</title><rect x="81.1594%" y="469" width="1.4493%" height="15" fill="rgb(227,109,8)" fg:x="504" fg:w="9"/><text x="81.4094%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 1.45%)</title><rect x="81.1594%" y="453" width="1.4493%" height="15" fill="rgb(235,184,23)" fg:x="504" fg:w="9"/><text x="81.4094%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 1.45%)</title><rect x="81.1594%" y="437" width="1.4493%" height="15" fill="rgb(227,226,48)" fg:x="504" fg:w="9"/><text x="81.4094%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.97%)</title><rect x="81.6425%" y="421" width="0.9662%" height="15" fill="rgb(206,150,11)" fg:x="507" fg:w="6"/><text x="81.8925%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.32%)</title><rect x="82.2866%" y="405" width="0.3221%" height="15" fill="rgb(254,2,33)" fg:x="511" fg:w="2"/><text x="82.5366%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.32%)</title><rect x="82.2866%" y="389" width="0.3221%" height="15" fill="rgb(243,160,20)" fg:x="511" fg:w="2"/><text x="82.5366%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="82.2866%" y="373" width="0.3221%" height="15" fill="rgb(218,208,30)" fg:x="511" fg:w="2"/><text x="82.5366%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="82.2866%" y="357" width="0.3221%" height="15" fill="rgb(224,120,49)" fg:x="511" fg:w="2"/><text x="82.5366%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="82.2866%" y="341" width="0.3221%" height="15" fill="rgb(246,12,2)" fg:x="511" fg:w="2"/><text x="82.5366%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="82.6087%" y="437" width="0.1610%" height="15" fill="rgb(236,117,3)" fg:x="513" fg:w="1"/><text x="82.8587%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="82.6087%" y="421" width="0.1610%" height="15" fill="rgb(216,128,52)" fg:x="513" fg:w="1"/><text x="82.8587%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="82.6087%" y="405" width="0.1610%" height="15" fill="rgb(246,145,19)" fg:x="513" fg:w="1"/><text x="82.8587%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="82.7697%" y="437" width="0.1610%" height="15" fill="rgb(222,11,46)" fg:x="514" fg:w="1"/><text x="83.0197%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="82.7697%" y="421" width="0.1610%" height="15" fill="rgb(245,82,36)" fg:x="514" fg:w="1"/><text x="83.0197%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="82.7697%" y="405" width="0.1610%" height="15" fill="rgb(250,73,51)" fg:x="514" fg:w="1"/><text x="83.0197%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="82.7697%" y="389" width="0.1610%" height="15" fill="rgb(221,189,23)" fg:x="514" fg:w="1"/><text x="83.0197%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="82.7697%" y="373" width="0.1610%" height="15" fill="rgb(210,33,7)" fg:x="514" fg:w="1"/><text x="83.0197%" y="383.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="82.7697%" y="357" width="0.1610%" height="15" fill="rgb(210,107,22)" fg:x="514" fg:w="1"/><text x="83.0197%" y="367.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="82.7697%" y="341" width="0.1610%" height="15" fill="rgb(222,116,37)" fg:x="514" fg:w="1"/><text x="83.0197%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="82.6087%" y="469" width="0.4831%" height="15" fill="rgb(254,17,48)" fg:x="513" fg:w="3"/><text x="82.8587%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="82.6087%" y="453" width="0.4831%" height="15" fill="rgb(224,36,32)" fg:x="513" fg:w="3"/><text x="82.8587%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="82.9308%" y="437" width="0.1610%" height="15" fill="rgb(232,90,46)" fg:x="515" fg:w="1"/><text x="83.1808%" y="447.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="82.9308%" y="421" width="0.1610%" height="15" fill="rgb(241,66,40)" fg:x="515" fg:w="1"/><text x="83.1808%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="82.9308%" y="405" width="0.1610%" height="15" fill="rgb(249,184,29)" fg:x="515" fg:w="1"/><text x="83.1808%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="82.9308%" y="389" width="0.1610%" height="15" fill="rgb(231,181,1)" fg:x="515" fg:w="1"/><text x="83.1808%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="82.9308%" y="373" width="0.1610%" height="15" fill="rgb(224,94,2)" fg:x="515" fg:w="1"/><text x="83.1808%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="82.9308%" y="357" width="0.1610%" height="15" fill="rgb(229,170,15)" fg:x="515" fg:w="1"/><text x="83.1808%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="82.9308%" y="341" width="0.1610%" height="15" fill="rgb(240,127,35)" fg:x="515" fg:w="1"/><text x="83.1808%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="82.9308%" y="325" width="0.1610%" height="15" fill="rgb(248,196,34)" fg:x="515" fg:w="1"/><text x="83.1808%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="82.9308%" y="309" width="0.1610%" height="15" fill="rgb(236,137,7)" fg:x="515" fg:w="1"/><text x="83.1808%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="82.9308%" y="293" width="0.1610%" height="15" fill="rgb(235,127,16)" fg:x="515" fg:w="1"/><text x="83.1808%" y="303.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (4 samples, 0.64%)</title><rect x="82.6087%" y="533" width="0.6441%" height="15" fill="rgb(250,192,54)" fg:x="513" fg:w="4"/><text x="82.8587%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4 samples, 0.64%)</title><rect x="82.6087%" y="517" width="0.6441%" height="15" fill="rgb(218,98,20)" fg:x="513" fg:w="4"/><text x="82.8587%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.64%)</title><rect x="82.6087%" y="501" width="0.6441%" height="15" fill="rgb(230,176,47)" fg:x="513" fg:w="4"/><text x="82.8587%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.64%)</title><rect x="82.6087%" y="485" width="0.6441%" height="15" fill="rgb(244,2,33)" fg:x="513" fg:w="4"/><text x="82.8587%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.16%)</title><rect x="83.0918%" y="469" width="0.1610%" height="15" fill="rgb(231,100,17)" fg:x="516" fg:w="1"/><text x="83.3418%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="83.0918%" y="453" width="0.1610%" height="15" fill="rgb(245,23,12)" fg:x="516" fg:w="1"/><text x="83.3418%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="83.0918%" y="437" width="0.1610%" height="15" fill="rgb(249,55,22)" fg:x="516" fg:w="1"/><text x="83.3418%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="83.0918%" y="421" width="0.1610%" height="15" fill="rgb(207,134,9)" fg:x="516" fg:w="1"/><text x="83.3418%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.16%)</title><rect x="83.0918%" y="405" width="0.1610%" height="15" fill="rgb(218,134,0)" fg:x="516" fg:w="1"/><text x="83.3418%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="83.0918%" y="389" width="0.1610%" height="15" fill="rgb(213,212,33)" fg:x="516" fg:w="1"/><text x="83.3418%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="83.0918%" y="373" width="0.1610%" height="15" fill="rgb(252,106,18)" fg:x="516" fg:w="1"/><text x="83.3418%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="83.0918%" y="357" width="0.1610%" height="15" fill="rgb(208,126,42)" fg:x="516" fg:w="1"/><text x="83.3418%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="83.2528%" y="469" width="0.1610%" height="15" fill="rgb(246,175,29)" fg:x="517" fg:w="1"/><text x="83.5028%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="83.2528%" y="453" width="0.1610%" height="15" fill="rgb(215,13,50)" fg:x="517" fg:w="1"/><text x="83.5028%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="83.2528%" y="437" width="0.1610%" height="15" fill="rgb(216,172,15)" fg:x="517" fg:w="1"/><text x="83.5028%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="83.2528%" y="485" width="0.3221%" height="15" fill="rgb(212,103,13)" fg:x="517" fg:w="2"/><text x="83.5028%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="83.4138%" y="469" width="0.1610%" height="15" fill="rgb(231,171,36)" fg:x="518" fg:w="1"/><text x="83.6638%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="83.4138%" y="453" width="0.1610%" height="15" fill="rgb(250,123,20)" fg:x="518" fg:w="1"/><text x="83.6638%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="83.4138%" y="437" width="0.1610%" height="15" fill="rgb(212,53,50)" fg:x="518" fg:w="1"/><text x="83.6638%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="83.4138%" y="421" width="0.1610%" height="15" fill="rgb(243,54,12)" fg:x="518" fg:w="1"/><text x="83.6638%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="83.4138%" y="405" width="0.1610%" height="15" fill="rgb(234,101,34)" fg:x="518" fg:w="1"/><text x="83.6638%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="83.5749%" y="437" width="0.3221%" height="15" fill="rgb(254,67,22)" fg:x="519" fg:w="2"/><text x="83.8249%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="83.5749%" y="421" width="0.3221%" height="15" fill="rgb(250,35,47)" fg:x="519" fg:w="2"/><text x="83.8249%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="83.5749%" y="405" width="0.3221%" height="15" fill="rgb(226,126,38)" fg:x="519" fg:w="2"/><text x="83.8249%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (2 samples, 0.32%)</title><rect x="83.8969%" y="421" width="0.3221%" height="15" fill="rgb(216,138,53)" fg:x="521" fg:w="2"/><text x="84.1469%" y="431.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (2 samples, 0.32%)</title><rect x="83.8969%" y="405" width="0.3221%" height="15" fill="rgb(246,199,43)" fg:x="521" fg:w="2"/><text x="84.1469%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="83.8969%" y="389" width="0.3221%" height="15" fill="rgb(232,125,11)" fg:x="521" fg:w="2"/><text x="84.1469%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="83.8969%" y="373" width="0.3221%" height="15" fill="rgb(218,219,45)" fg:x="521" fg:w="2"/><text x="84.1469%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="83.8969%" y="357" width="0.3221%" height="15" fill="rgb(216,102,54)" fg:x="521" fg:w="2"/><text x="84.1469%" y="367.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_value_for_node (103 samples, 16.59%)</title><rect x="67.7939%" y="549" width="16.5862%" height="15" fill="rgb(250,228,7)" fg:x="421" fg:w="103"/><text x="68.0439%" y="559.50">micrograd_rs::engine::Runn..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 1.13%)</title><rect x="83.2528%" y="533" width="1.1272%" height="15" fill="rgb(226,125,25)" fg:x="517" fg:w="7"/><text x="83.5028%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 1.13%)</title><rect x="83.2528%" y="517" width="1.1272%" height="15" fill="rgb(224,165,27)" fg:x="517" fg:w="7"/><text x="83.5028%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 1.13%)</title><rect x="83.2528%" y="501" width="1.1272%" height="15" fill="rgb(233,86,3)" fg:x="517" fg:w="7"/><text x="83.5028%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.81%)</title><rect x="83.5749%" y="485" width="0.8052%" height="15" fill="rgb(228,116,20)" fg:x="519" fg:w="5"/><text x="83.8249%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.81%)</title><rect x="83.5749%" y="469" width="0.8052%" height="15" fill="rgb(209,192,17)" fg:x="519" fg:w="5"/><text x="83.8249%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.81%)</title><rect x="83.5749%" y="453" width="0.8052%" height="15" fill="rgb(224,88,34)" fg:x="519" fg:w="5"/><text x="83.8249%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.48%)</title><rect x="83.8969%" y="437" width="0.4831%" height="15" fill="rgb(233,38,6)" fg:x="521" fg:w="3"/><text x="84.1469%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="84.2190%" y="421" width="0.1610%" height="15" fill="rgb(212,59,30)" fg:x="523" fg:w="1"/><text x="84.4690%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="84.2190%" y="405" width="0.1610%" height="15" fill="rgb(213,80,3)" fg:x="523" fg:w="1"/><text x="84.4690%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="84.2190%" y="389" width="0.1610%" height="15" fill="rgb(251,178,7)" fg:x="523" fg:w="1"/><text x="84.4690%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="84.2190%" y="373" width="0.1610%" height="15" fill="rgb(213,154,26)" fg:x="523" fg:w="1"/><text x="84.4690%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="84.2190%" y="357" width="0.1610%" height="15" fill="rgb(238,165,49)" fg:x="523" fg:w="1"/><text x="84.4690%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="84.3800%" y="501" width="0.1610%" height="15" fill="rgb(248,91,46)" fg:x="524" fg:w="1"/><text x="84.6300%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="84.3800%" y="485" width="0.1610%" height="15" fill="rgb(244,21,52)" fg:x="524" fg:w="1"/><text x="84.6300%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="84.3800%" y="469" width="0.1610%" height="15" fill="rgb(247,122,20)" fg:x="524" fg:w="1"/><text x="84.6300%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="84.5411%" y="341" width="0.1610%" height="15" fill="rgb(218,27,9)" fg:x="525" fg:w="1"/><text x="84.7911%" y="351.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="84.5411%" y="325" width="0.1610%" height="15" fill="rgb(246,7,6)" fg:x="525" fg:w="1"/><text x="84.7911%" y="335.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="84.5411%" y="309" width="0.1610%" height="15" fill="rgb(227,135,54)" fg:x="525" fg:w="1"/><text x="84.7911%" y="319.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="84.5411%" y="293" width="0.1610%" height="15" fill="rgb(247,14,11)" fg:x="525" fg:w="1"/><text x="84.7911%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="84.5411%" y="485" width="0.3221%" height="15" fill="rgb(206,149,34)" fg:x="525" fg:w="2"/><text x="84.7911%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="84.5411%" y="469" width="0.3221%" height="15" fill="rgb(227,228,4)" fg:x="525" fg:w="2"/><text x="84.7911%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.32%)</title><rect x="84.5411%" y="453" width="0.3221%" height="15" fill="rgb(238,218,28)" fg:x="525" fg:w="2"/><text x="84.7911%" y="463.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (2 samples, 0.32%)</title><rect x="84.5411%" y="437" width="0.3221%" height="15" fill="rgb(252,86,40)" fg:x="525" fg:w="2"/><text x="84.7911%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.32%)</title><rect x="84.5411%" y="421" width="0.3221%" height="15" fill="rgb(251,225,11)" fg:x="525" fg:w="2"/><text x="84.7911%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.32%)</title><rect x="84.5411%" y="405" width="0.3221%" height="15" fill="rgb(206,46,49)" fg:x="525" fg:w="2"/><text x="84.7911%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="84.5411%" y="389" width="0.3221%" height="15" fill="rgb(245,128,24)" fg:x="525" fg:w="2"/><text x="84.7911%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="84.5411%" y="373" width="0.3221%" height="15" fill="rgb(219,177,34)" fg:x="525" fg:w="2"/><text x="84.7911%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="84.5411%" y="357" width="0.3221%" height="15" fill="rgb(218,60,48)" fg:x="525" fg:w="2"/><text x="84.7911%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="84.7021%" y="341" width="0.1610%" height="15" fill="rgb(221,11,5)" fg:x="526" fg:w="1"/><text x="84.9521%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="84.7021%" y="325" width="0.1610%" height="15" fill="rgb(220,148,13)" fg:x="526" fg:w="1"/><text x="84.9521%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="84.7021%" y="309" width="0.1610%" height="15" fill="rgb(210,16,3)" fg:x="526" fg:w="1"/><text x="84.9521%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="84.8631%" y="437" width="0.1610%" height="15" fill="rgb(236,80,2)" fg:x="527" fg:w="1"/><text x="85.1131%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="84.8631%" y="421" width="0.1610%" height="15" fill="rgb(239,129,19)" fg:x="527" fg:w="1"/><text x="85.1131%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="84.8631%" y="405" width="0.1610%" height="15" fill="rgb(220,106,35)" fg:x="527" fg:w="1"/><text x="85.1131%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="84.8631%" y="389" width="0.1610%" height="15" fill="rgb(252,139,45)" fg:x="527" fg:w="1"/><text x="85.1131%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="85.0242%" y="421" width="0.1610%" height="15" fill="rgb(229,8,36)" fg:x="528" fg:w="1"/><text x="85.2742%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="85.0242%" y="405" width="0.1610%" height="15" fill="rgb(230,126,33)" fg:x="528" fg:w="1"/><text x="85.2742%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="85.0242%" y="389" width="0.1610%" height="15" fill="rgb(239,140,21)" fg:x="528" fg:w="1"/><text x="85.2742%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (2 samples, 0.32%)</title><rect x="85.1852%" y="421" width="0.3221%" height="15" fill="rgb(254,104,9)" fg:x="529" fg:w="2"/><text x="85.4352%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="85.1852%" y="405" width="0.3221%" height="15" fill="rgb(239,52,14)" fg:x="529" fg:w="2"/><text x="85.4352%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="85.1852%" y="389" width="0.3221%" height="15" fill="rgb(208,227,44)" fg:x="529" fg:w="2"/><text x="85.4352%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="85.1852%" y="373" width="0.3221%" height="15" fill="rgb(246,18,19)" fg:x="529" fg:w="2"/><text x="85.4352%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="85.5072%" y="405" width="0.1610%" height="15" fill="rgb(235,228,25)" fg:x="531" fg:w="1"/><text x="85.7572%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="85.5072%" y="389" width="0.1610%" height="15" fill="rgb(240,156,20)" fg:x="531" fg:w="1"/><text x="85.7572%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="85.5072%" y="373" width="0.1610%" height="15" fill="rgb(224,8,20)" fg:x="531" fg:w="1"/><text x="85.7572%" y="383.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (9 samples, 1.45%)</title><rect x="84.3800%" y="549" width="1.4493%" height="15" fill="rgb(214,12,52)" fg:x="524" fg:w="9"/><text x="84.6300%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (9 samples, 1.45%)</title><rect x="84.3800%" y="533" width="1.4493%" height="15" fill="rgb(211,220,47)" fg:x="524" fg:w="9"/><text x="84.6300%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (9 samples, 1.45%)</title><rect x="84.3800%" y="517" width="1.4493%" height="15" fill="rgb(250,173,5)" fg:x="524" fg:w="9"/><text x="84.6300%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (8 samples, 1.29%)</title><rect x="84.5411%" y="501" width="1.2882%" height="15" fill="rgb(250,125,52)" fg:x="525" fg:w="8"/><text x="84.7911%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.97%)</title><rect x="84.8631%" y="485" width="0.9662%" height="15" fill="rgb(209,133,18)" fg:x="527" fg:w="6"/><text x="85.1131%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.97%)</title><rect x="84.8631%" y="469" width="0.9662%" height="15" fill="rgb(216,173,22)" fg:x="527" fg:w="6"/><text x="85.1131%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.97%)</title><rect x="84.8631%" y="453" width="0.9662%" height="15" fill="rgb(205,3,22)" fg:x="527" fg:w="6"/><text x="85.1131%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.81%)</title><rect x="85.0242%" y="437" width="0.8052%" height="15" fill="rgb(248,22,20)" fg:x="528" fg:w="5"/><text x="85.2742%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.32%)</title><rect x="85.5072%" y="421" width="0.3221%" height="15" fill="rgb(233,6,29)" fg:x="531" fg:w="2"/><text x="85.7572%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="85.6683%" y="405" width="0.1610%" height="15" fill="rgb(240,22,54)" fg:x="532" fg:w="1"/><text x="85.9183%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="85.6683%" y="389" width="0.1610%" height="15" fill="rgb(231,133,32)" fg:x="532" fg:w="1"/><text x="85.9183%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="85.6683%" y="373" width="0.1610%" height="15" fill="rgb(248,193,4)" fg:x="532" fg:w="1"/><text x="85.9183%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="85.6683%" y="357" width="0.1610%" height="15" fill="rgb(211,178,46)" fg:x="532" fg:w="1"/><text x="85.9183%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="85.8293%" y="469" width="0.1610%" height="15" fill="rgb(224,5,42)" fg:x="533" fg:w="1"/><text x="86.0793%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="85.8293%" y="453" width="0.1610%" height="15" fill="rgb(239,176,25)" fg:x="533" fg:w="1"/><text x="86.0793%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="85.8293%" y="437" width="0.1610%" height="15" fill="rgb(245,187,50)" fg:x="533" fg:w="1"/><text x="86.0793%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="85.8293%" y="421" width="0.1610%" height="15" fill="rgb(248,24,15)" fg:x="533" fg:w="1"/><text x="86.0793%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="85.8293%" y="405" width="0.1610%" height="15" fill="rgb(205,166,13)" fg:x="533" fg:w="1"/><text x="86.0793%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="85.8293%" y="389" width="0.1610%" height="15" fill="rgb(208,114,23)" fg:x="533" fg:w="1"/><text x="86.0793%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="85.8293%" y="373" width="0.1610%" height="15" fill="rgb(239,127,18)" fg:x="533" fg:w="1"/><text x="86.0793%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="85.8293%" y="501" width="0.4831%" height="15" fill="rgb(219,154,28)" fg:x="533" fg:w="3"/><text x="86.0793%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="85.8293%" y="485" width="0.4831%" height="15" fill="rgb(225,157,23)" fg:x="533" fg:w="3"/><text x="86.0793%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.32%)</title><rect x="85.9903%" y="469" width="0.3221%" height="15" fill="rgb(219,8,6)" fg:x="534" fg:w="2"/><text x="86.2403%" y="479.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (2 samples, 0.32%)</title><rect x="85.9903%" y="453" width="0.3221%" height="15" fill="rgb(212,47,6)" fg:x="534" fg:w="2"/><text x="86.2403%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.32%)</title><rect x="85.9903%" y="437" width="0.3221%" height="15" fill="rgb(224,190,4)" fg:x="534" fg:w="2"/><text x="86.2403%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.32%)</title><rect x="85.9903%" y="421" width="0.3221%" height="15" fill="rgb(239,183,29)" fg:x="534" fg:w="2"/><text x="86.2403%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="85.9903%" y="405" width="0.3221%" height="15" fill="rgb(213,57,7)" fg:x="534" fg:w="2"/><text x="86.2403%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="85.9903%" y="389" width="0.3221%" height="15" fill="rgb(216,148,1)" fg:x="534" fg:w="2"/><text x="86.2403%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="85.9903%" y="373" width="0.3221%" height="15" fill="rgb(236,182,29)" fg:x="534" fg:w="2"/><text x="86.2403%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.32%)</title><rect x="85.9903%" y="357" width="0.3221%" height="15" fill="rgb(244,120,48)" fg:x="534" fg:w="2"/><text x="86.2403%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="85.9903%" y="341" width="0.3221%" height="15" fill="rgb(206,71,34)" fg:x="534" fg:w="2"/><text x="86.2403%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="85.9903%" y="325" width="0.3221%" height="15" fill="rgb(242,32,6)" fg:x="534" fg:w="2"/><text x="86.2403%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="85.9903%" y="309" width="0.3221%" height="15" fill="rgb(241,35,3)" fg:x="534" fg:w="2"/><text x="86.2403%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="86.3124%" y="453" width="0.1610%" height="15" fill="rgb(222,62,19)" fg:x="536" fg:w="1"/><text x="86.5624%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="86.3124%" y="437" width="0.1610%" height="15" fill="rgb(223,110,41)" fg:x="536" fg:w="1"/><text x="86.5624%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="86.3124%" y="421" width="0.1610%" height="15" fill="rgb(208,224,4)" fg:x="536" fg:w="1"/><text x="86.5624%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="86.3124%" y="405" width="0.1610%" height="15" fill="rgb(241,137,19)" fg:x="536" fg:w="1"/><text x="86.5624%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="86.3124%" y="389" width="0.1610%" height="15" fill="rgb(244,24,17)" fg:x="536" fg:w="1"/><text x="86.5624%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="86.4734%" y="453" width="0.1610%" height="15" fill="rgb(245,178,49)" fg:x="537" fg:w="1"/><text x="86.7234%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="86.4734%" y="437" width="0.1610%" height="15" fill="rgb(219,160,38)" fg:x="537" fg:w="1"/><text x="86.7234%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="86.4734%" y="421" width="0.1610%" height="15" fill="rgb(228,137,14)" fg:x="537" fg:w="1"/><text x="86.7234%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="86.4734%" y="405" width="0.1610%" height="15" fill="rgb(237,134,11)" fg:x="537" fg:w="1"/><text x="86.7234%" y="415.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_node_value (118 samples, 19.00%)</title><rect x="67.7939%" y="565" width="19.0016%" height="15" fill="rgb(211,126,44)" fg:x="421" fg:w="118"/><text x="68.0439%" y="575.50">micrograd_rs::engine::Runnable..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.97%)</title><rect x="85.8293%" y="549" width="0.9662%" height="15" fill="rgb(226,171,33)" fg:x="533" fg:w="6"/><text x="86.0793%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.97%)</title><rect x="85.8293%" y="533" width="0.9662%" height="15" fill="rgb(253,99,13)" fg:x="533" fg:w="6"/><text x="86.0793%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.97%)</title><rect x="85.8293%" y="517" width="0.9662%" height="15" fill="rgb(244,48,7)" fg:x="533" fg:w="6"/><text x="86.0793%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.48%)</title><rect x="86.3124%" y="501" width="0.4831%" height="15" fill="rgb(244,217,54)" fg:x="536" fg:w="3"/><text x="86.5624%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="86.3124%" y="485" width="0.4831%" height="15" fill="rgb(224,15,18)" fg:x="536" fg:w="3"/><text x="86.5624%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="86.3124%" y="469" width="0.4831%" height="15" fill="rgb(244,99,12)" fg:x="536" fg:w="3"/><text x="86.5624%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="86.6345%" y="453" width="0.1610%" height="15" fill="rgb(233,226,8)" fg:x="538" fg:w="1"/><text x="86.8845%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="86.6345%" y="437" width="0.1610%" height="15" fill="rgb(229,211,3)" fg:x="538" fg:w="1"/><text x="86.8845%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="86.6345%" y="421" width="0.1610%" height="15" fill="rgb(216,140,21)" fg:x="538" fg:w="1"/><text x="86.8845%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="86.6345%" y="405" width="0.1610%" height="15" fill="rgb(234,122,30)" fg:x="538" fg:w="1"/><text x="86.8845%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="86.7955%" y="421" width="0.1610%" height="15" fill="rgb(236,25,46)" fg:x="539" fg:w="1"/><text x="87.0455%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="86.7955%" y="405" width="0.1610%" height="15" fill="rgb(217,52,54)" fg:x="539" fg:w="1"/><text x="87.0455%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="86.7955%" y="389" width="0.1610%" height="15" fill="rgb(222,29,26)" fg:x="539" fg:w="1"/><text x="87.0455%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="86.7955%" y="373" width="0.1610%" height="15" fill="rgb(216,177,29)" fg:x="539" fg:w="1"/><text x="87.0455%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="86.7955%" y="437" width="0.4831%" height="15" fill="rgb(247,136,51)" fg:x="539" fg:w="3"/><text x="87.0455%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="86.9565%" y="421" width="0.3221%" height="15" fill="rgb(231,47,47)" fg:x="540" fg:w="2"/><text x="87.2065%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="86.9565%" y="405" width="0.3221%" height="15" fill="rgb(211,192,36)" fg:x="540" fg:w="2"/><text x="87.2065%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="86.9565%" y="389" width="0.3221%" height="15" fill="rgb(229,156,32)" fg:x="540" fg:w="2"/><text x="87.2065%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="86.9565%" y="373" width="0.3221%" height="15" fill="rgb(248,213,20)" fg:x="540" fg:w="2"/><text x="87.2065%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="86.7955%" y="469" width="0.6441%" height="15" fill="rgb(217,64,7)" fg:x="539" fg:w="4"/><text x="87.0455%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="86.7955%" y="453" width="0.6441%" height="15" fill="rgb(232,142,8)" fg:x="539" fg:w="4"/><text x="87.0455%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="87.2786%" y="437" width="0.1610%" height="15" fill="rgb(224,92,44)" fg:x="542" fg:w="1"/><text x="87.5286%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="87.2786%" y="421" width="0.1610%" height="15" fill="rgb(214,169,17)" fg:x="542" fg:w="1"/><text x="87.5286%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="87.2786%" y="405" width="0.1610%" height="15" fill="rgb(210,59,37)" fg:x="542" fg:w="1"/><text x="87.5286%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.81%)</title><rect x="86.7955%" y="501" width="0.8052%" height="15" fill="rgb(214,116,48)" fg:x="539" fg:w="5"/><text x="87.0455%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.81%)</title><rect x="86.7955%" y="485" width="0.8052%" height="15" fill="rgb(244,191,6)" fg:x="539" fg:w="5"/><text x="87.0455%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="87.4396%" y="469" width="0.1610%" height="15" fill="rgb(241,50,52)" fg:x="543" fg:w="1"/><text x="87.6896%" y="479.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="87.4396%" y="453" width="0.1610%" height="15" fill="rgb(236,75,39)" fg:x="543" fg:w="1"/><text x="87.6896%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="87.4396%" y="437" width="0.1610%" height="15" fill="rgb(236,99,0)" fg:x="543" fg:w="1"/><text x="87.6896%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="87.4396%" y="421" width="0.1610%" height="15" fill="rgb(207,202,15)" fg:x="543" fg:w="1"/><text x="87.6896%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="87.4396%" y="405" width="0.1610%" height="15" fill="rgb(233,207,14)" fg:x="543" fg:w="1"/><text x="87.6896%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="87.4396%" y="389" width="0.1610%" height="15" fill="rgb(226,27,51)" fg:x="543" fg:w="1"/><text x="87.6896%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="87.4396%" y="373" width="0.1610%" height="15" fill="rgb(206,104,42)" fg:x="543" fg:w="1"/><text x="87.6896%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="87.4396%" y="357" width="0.1610%" height="15" fill="rgb(212,225,4)" fg:x="543" fg:w="1"/><text x="87.6896%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="87.4396%" y="341" width="0.1610%" height="15" fill="rgb(233,96,42)" fg:x="543" fg:w="1"/><text x="87.6896%" y="351.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="87.4396%" y="325" width="0.1610%" height="15" fill="rgb(229,21,32)" fg:x="543" fg:w="1"/><text x="87.6896%" y="335.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="87.4396%" y="309" width="0.1610%" height="15" fill="rgb(226,216,24)" fg:x="543" fg:w="1"/><text x="87.6896%" y="319.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="87.6006%" y="437" width="0.1610%" height="15" fill="rgb(221,163,17)" fg:x="544" fg:w="1"/><text x="87.8506%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="87.6006%" y="421" width="0.1610%" height="15" fill="rgb(216,216,42)" fg:x="544" fg:w="1"/><text x="87.8506%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="87.6006%" y="405" width="0.1610%" height="15" fill="rgb(240,118,7)" fg:x="544" fg:w="1"/><text x="87.8506%" y="415.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (7 samples, 1.13%)</title><rect x="86.7955%" y="565" width="1.1272%" height="15" fill="rgb(221,67,37)" fg:x="539" fg:w="7"/><text x="87.0455%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (7 samples, 1.13%)</title><rect x="86.7955%" y="549" width="1.1272%" height="15" fill="rgb(241,32,44)" fg:x="539" fg:w="7"/><text x="87.0455%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (7 samples, 1.13%)</title><rect x="86.7955%" y="533" width="1.1272%" height="15" fill="rgb(235,204,43)" fg:x="539" fg:w="7"/><text x="87.0455%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (7 samples, 1.13%)</title><rect x="86.7955%" y="517" width="1.1272%" height="15" fill="rgb(213,116,10)" fg:x="539" fg:w="7"/><text x="87.0455%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.32%)</title><rect x="87.6006%" y="501" width="0.3221%" height="15" fill="rgb(239,15,48)" fg:x="544" fg:w="2"/><text x="87.8506%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="87.6006%" y="485" width="0.3221%" height="15" fill="rgb(207,123,36)" fg:x="544" fg:w="2"/><text x="87.8506%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="87.6006%" y="469" width="0.3221%" height="15" fill="rgb(209,103,30)" fg:x="544" fg:w="2"/><text x="87.8506%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.32%)</title><rect x="87.6006%" y="453" width="0.3221%" height="15" fill="rgb(238,100,19)" fg:x="544" fg:w="2"/><text x="87.8506%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.16%)</title><rect x="87.7617%" y="437" width="0.1610%" height="15" fill="rgb(244,30,14)" fg:x="545" fg:w="1"/><text x="88.0117%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="87.7617%" y="421" width="0.1610%" height="15" fill="rgb(249,174,6)" fg:x="545" fg:w="1"/><text x="88.0117%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="87.7617%" y="405" width="0.1610%" height="15" fill="rgb(235,213,41)" fg:x="545" fg:w="1"/><text x="88.0117%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="87.7617%" y="389" width="0.1610%" height="15" fill="rgb(213,118,6)" fg:x="545" fg:w="1"/><text x="88.0117%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="87.7617%" y="373" width="0.1610%" height="15" fill="rgb(235,44,51)" fg:x="545" fg:w="1"/><text x="88.0117%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="87.9227%" y="517" width="0.1610%" height="15" fill="rgb(217,9,53)" fg:x="546" fg:w="1"/><text x="88.1727%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="87.9227%" y="501" width="0.1610%" height="15" fill="rgb(237,172,34)" fg:x="546" fg:w="1"/><text x="88.1727%" y="511.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="87.9227%" y="485" width="0.1610%" height="15" fill="rgb(206,206,11)" fg:x="546" fg:w="1"/><text x="88.1727%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="87.9227%" y="469" width="0.1610%" height="15" fill="rgb(214,149,29)" fg:x="546" fg:w="1"/><text x="88.1727%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="87.9227%" y="453" width="0.1610%" height="15" fill="rgb(208,123,3)" fg:x="546" fg:w="1"/><text x="88.1727%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.32%)</title><rect x="88.0837%" y="469" width="0.3221%" height="15" fill="rgb(229,126,4)" fg:x="547" fg:w="2"/><text x="88.3337%" y="479.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="88.0837%" y="453" width="0.3221%" height="15" fill="rgb(222,92,36)" fg:x="547" fg:w="2"/><text x="88.3337%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="88.0837%" y="437" width="0.3221%" height="15" fill="rgb(216,39,41)" fg:x="547" fg:w="2"/><text x="88.3337%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="88.0837%" y="421" width="0.3221%" height="15" fill="rgb(253,127,28)" fg:x="547" fg:w="2"/><text x="88.3337%" y="431.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_value_for_node (133 samples, 21.42%)</title><rect x="67.1498%" y="581" width="21.4171%" height="15" fill="rgb(249,152,51)" fg:x="417" fg:w="133"/><text x="67.3998%" y="591.50">micrograd_rs::engine::RunnableGrap..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.64%)</title><rect x="87.9227%" y="565" width="0.6441%" height="15" fill="rgb(209,123,42)" fg:x="546" fg:w="4"/><text x="88.1727%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.64%)</title><rect x="87.9227%" y="549" width="0.6441%" height="15" fill="rgb(241,118,22)" fg:x="546" fg:w="4"/><text x="88.1727%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.64%)</title><rect x="87.9227%" y="533" width="0.6441%" height="15" fill="rgb(208,25,7)" fg:x="546" fg:w="4"/><text x="88.1727%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.48%)</title><rect x="88.0837%" y="517" width="0.4831%" height="15" fill="rgb(243,144,39)" fg:x="547" fg:w="3"/><text x="88.3337%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="88.0837%" y="501" width="0.4831%" height="15" fill="rgb(250,50,5)" fg:x="547" fg:w="3"/><text x="88.3337%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="88.0837%" y="485" width="0.4831%" height="15" fill="rgb(207,67,11)" fg:x="547" fg:w="3"/><text x="88.3337%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="88.4058%" y="469" width="0.1610%" height="15" fill="rgb(245,204,40)" fg:x="549" fg:w="1"/><text x="88.6558%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="88.4058%" y="453" width="0.1610%" height="15" fill="rgb(238,228,24)" fg:x="549" fg:w="1"/><text x="88.6558%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="88.4058%" y="437" width="0.1610%" height="15" fill="rgb(217,116,22)" fg:x="549" fg:w="1"/><text x="88.6558%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.16%)</title><rect x="88.4058%" y="421" width="0.1610%" height="15" fill="rgb(234,98,12)" fg:x="549" fg:w="1"/><text x="88.6558%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="88.4058%" y="405" width="0.1610%" height="15" fill="rgb(242,170,50)" fg:x="549" fg:w="1"/><text x="88.6558%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="88.4058%" y="389" width="0.1610%" height="15" fill="rgb(235,7,5)" fg:x="549" fg:w="1"/><text x="88.6558%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="88.4058%" y="373" width="0.1610%" height="15" fill="rgb(241,114,28)" fg:x="549" fg:w="1"/><text x="88.6558%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="88.5668%" y="517" width="0.1610%" height="15" fill="rgb(246,112,42)" fg:x="550" fg:w="1"/><text x="88.8168%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="88.5668%" y="501" width="0.1610%" height="15" fill="rgb(248,228,14)" fg:x="550" fg:w="1"/><text x="88.8168%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="88.5668%" y="485" width="0.1610%" height="15" fill="rgb(208,133,18)" fg:x="550" fg:w="1"/><text x="88.8168%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="88.5668%" y="469" width="0.1610%" height="15" fill="rgb(207,35,49)" fg:x="550" fg:w="1"/><text x="88.8168%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="88.5668%" y="453" width="0.1610%" height="15" fill="rgb(205,68,36)" fg:x="550" fg:w="1"/><text x="88.8168%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="88.5668%" y="437" width="0.1610%" height="15" fill="rgb(245,62,40)" fg:x="550" fg:w="1"/><text x="88.8168%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="88.5668%" y="421" width="0.1610%" height="15" fill="rgb(228,27,24)" fg:x="550" fg:w="1"/><text x="88.8168%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="88.5668%" y="405" width="0.1610%" height="15" fill="rgb(253,19,12)" fg:x="550" fg:w="1"/><text x="88.8168%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="88.5668%" y="389" width="0.1610%" height="15" fill="rgb(232,28,20)" fg:x="550" fg:w="1"/><text x="88.8168%" y="399.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="88.7279%" y="469" width="0.4831%" height="15" fill="rgb(218,35,51)" fg:x="551" fg:w="3"/><text x="88.9779%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="88.7279%" y="453" width="0.4831%" height="15" fill="rgb(212,90,40)" fg:x="551" fg:w="3"/><text x="88.9779%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="88.7279%" y="437" width="0.4831%" height="15" fill="rgb(220,172,12)" fg:x="551" fg:w="3"/><text x="88.9779%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="89.2110%" y="469" width="0.1610%" height="15" fill="rgb(226,159,20)" fg:x="554" fg:w="1"/><text x="89.4610%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.16%)</title><rect x="89.2110%" y="453" width="0.1610%" height="15" fill="rgb(234,205,16)" fg:x="554" fg:w="1"/><text x="89.4610%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.16%)</title><rect x="89.2110%" y="437" width="0.1610%" height="15" fill="rgb(207,9,39)" fg:x="554" fg:w="1"/><text x="89.4610%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.16%)</title><rect x="89.2110%" y="421" width="0.1610%" height="15" fill="rgb(249,143,15)" fg:x="554" fg:w="1"/><text x="89.4610%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.16%)</title><rect x="89.2110%" y="405" width="0.1610%" height="15" fill="rgb(253,133,29)" fg:x="554" fg:w="1"/><text x="89.4610%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="89.2110%" y="389" width="0.1610%" height="15" fill="rgb(221,187,0)" fg:x="554" fg:w="1"/><text x="89.4610%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="89.2110%" y="373" width="0.1610%" height="15" fill="rgb(205,204,26)" fg:x="554" fg:w="1"/><text x="89.4610%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="89.2110%" y="357" width="0.1610%" height="15" fill="rgb(224,68,54)" fg:x="554" fg:w="1"/><text x="89.4610%" y="367.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (6 samples, 0.97%)</title><rect x="88.5668%" y="581" width="0.9662%" height="15" fill="rgb(209,67,4)" fg:x="550" fg:w="6"/><text x="88.8168%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (6 samples, 0.97%)</title><rect x="88.5668%" y="565" width="0.9662%" height="15" fill="rgb(228,229,18)" fg:x="550" fg:w="6"/><text x="88.8168%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (6 samples, 0.97%)</title><rect x="88.5668%" y="549" width="0.9662%" height="15" fill="rgb(231,89,13)" fg:x="550" fg:w="6"/><text x="88.8168%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (6 samples, 0.97%)</title><rect x="88.5668%" y="533" width="0.9662%" height="15" fill="rgb(210,182,18)" fg:x="550" fg:w="6"/><text x="88.8168%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (5 samples, 0.81%)</title><rect x="88.7279%" y="517" width="0.8052%" height="15" fill="rgb(240,105,2)" fg:x="551" fg:w="5"/><text x="88.9779%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.81%)</title><rect x="88.7279%" y="501" width="0.8052%" height="15" fill="rgb(207,170,50)" fg:x="551" fg:w="5"/><text x="88.9779%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.81%)</title><rect x="88.7279%" y="485" width="0.8052%" height="15" fill="rgb(232,133,24)" fg:x="551" fg:w="5"/><text x="88.9779%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="89.3720%" y="469" width="0.1610%" height="15" fill="rgb(235,166,27)" fg:x="555" fg:w="1"/><text x="89.6220%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="89.3720%" y="453" width="0.1610%" height="15" fill="rgb(209,19,13)" fg:x="555" fg:w="1"/><text x="89.6220%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="89.3720%" y="437" width="0.1610%" height="15" fill="rgb(226,79,39)" fg:x="555" fg:w="1"/><text x="89.6220%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="89.3720%" y="421" width="0.1610%" height="15" fill="rgb(222,163,10)" fg:x="555" fg:w="1"/><text x="89.6220%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="89.3720%" y="405" width="0.1610%" height="15" fill="rgb(214,44,19)" fg:x="555" fg:w="1"/><text x="89.6220%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.32%)</title><rect x="89.5330%" y="453" width="0.3221%" height="15" fill="rgb(210,217,13)" fg:x="556" fg:w="2"/><text x="89.7830%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="89.5330%" y="437" width="0.3221%" height="15" fill="rgb(237,61,54)" fg:x="556" fg:w="2"/><text x="89.7830%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="89.5330%" y="421" width="0.3221%" height="15" fill="rgb(226,184,24)" fg:x="556" fg:w="2"/><text x="89.7830%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="89.5330%" y="405" width="0.3221%" height="15" fill="rgb(223,226,4)" fg:x="556" fg:w="2"/><text x="89.7830%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="89.5330%" y="501" width="0.6441%" height="15" fill="rgb(210,26,41)" fg:x="556" fg:w="4"/><text x="89.7830%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="89.5330%" y="485" width="0.6441%" height="15" fill="rgb(220,221,6)" fg:x="556" fg:w="4"/><text x="89.7830%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.64%)</title><rect x="89.5330%" y="469" width="0.6441%" height="15" fill="rgb(225,89,49)" fg:x="556" fg:w="4"/><text x="89.7830%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="89.8551%" y="453" width="0.3221%" height="15" fill="rgb(218,70,45)" fg:x="558" fg:w="2"/><text x="90.1051%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.32%)</title><rect x="89.8551%" y="437" width="0.3221%" height="15" fill="rgb(238,166,21)" fg:x="558" fg:w="2"/><text x="90.1051%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="89.8551%" y="421" width="0.3221%" height="15" fill="rgb(224,141,44)" fg:x="558" fg:w="2"/><text x="90.1051%" y="431.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="89.8551%" y="405" width="0.3221%" height="15" fill="rgb(230,12,49)" fg:x="558" fg:w="2"/><text x="90.1051%" y="415.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="89.8551%" y="389" width="0.3221%" height="15" fill="rgb(212,174,12)" fg:x="558" fg:w="2"/><text x="90.1051%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="90.1771%" y="389" width="0.1610%" height="15" fill="rgb(246,67,9)" fg:x="560" fg:w="1"/><text x="90.4271%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.16%)</title><rect x="90.1771%" y="373" width="0.1610%" height="15" fill="rgb(239,35,23)" fg:x="560" fg:w="1"/><text x="90.4271%" y="383.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="90.1771%" y="357" width="0.1610%" height="15" fill="rgb(211,167,0)" fg:x="560" fg:w="1"/><text x="90.4271%" y="367.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="90.1771%" y="341" width="0.1610%" height="15" fill="rgb(225,119,45)" fg:x="560" fg:w="1"/><text x="90.4271%" y="351.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="90.1771%" y="325" width="0.1610%" height="15" fill="rgb(210,162,6)" fg:x="560" fg:w="1"/><text x="90.4271%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.97%)</title><rect x="89.5330%" y="533" width="0.9662%" height="15" fill="rgb(208,118,35)" fg:x="556" fg:w="6"/><text x="89.7830%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.97%)</title><rect x="89.5330%" y="517" width="0.9662%" height="15" fill="rgb(239,4,53)" fg:x="556" fg:w="6"/><text x="89.7830%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.32%)</title><rect x="90.1771%" y="501" width="0.3221%" height="15" fill="rgb(213,130,21)" fg:x="560" fg:w="2"/><text x="90.4271%" y="511.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (2 samples, 0.32%)</title><rect x="90.1771%" y="485" width="0.3221%" height="15" fill="rgb(235,148,0)" fg:x="560" fg:w="2"/><text x="90.4271%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.32%)</title><rect x="90.1771%" y="469" width="0.3221%" height="15" fill="rgb(244,224,18)" fg:x="560" fg:w="2"/><text x="90.4271%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.32%)</title><rect x="90.1771%" y="453" width="0.3221%" height="15" fill="rgb(211,214,4)" fg:x="560" fg:w="2"/><text x="90.4271%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="90.1771%" y="437" width="0.3221%" height="15" fill="rgb(206,119,25)" fg:x="560" fg:w="2"/><text x="90.4271%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="90.1771%" y="421" width="0.3221%" height="15" fill="rgb(243,93,47)" fg:x="560" fg:w="2"/><text x="90.4271%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="90.1771%" y="405" width="0.3221%" height="15" fill="rgb(224,194,6)" fg:x="560" fg:w="2"/><text x="90.4271%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="90.3382%" y="389" width="0.1610%" height="15" fill="rgb(243,229,6)" fg:x="561" fg:w="1"/><text x="90.5882%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="90.3382%" y="373" width="0.1610%" height="15" fill="rgb(207,23,50)" fg:x="561" fg:w="1"/><text x="90.5882%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="90.3382%" y="357" width="0.1610%" height="15" fill="rgb(253,192,32)" fg:x="561" fg:w="1"/><text x="90.5882%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="90.4992%" y="501" width="0.1610%" height="15" fill="rgb(213,21,6)" fg:x="562" fg:w="1"/><text x="90.7492%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="90.4992%" y="485" width="0.1610%" height="15" fill="rgb(243,151,13)" fg:x="562" fg:w="1"/><text x="90.7492%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.16%)</title><rect x="90.4992%" y="469" width="0.1610%" height="15" fill="rgb(233,165,41)" fg:x="562" fg:w="1"/><text x="90.7492%" y="479.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="90.4992%" y="453" width="0.1610%" height="15" fill="rgb(246,176,45)" fg:x="562" fg:w="1"/><text x="90.7492%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="90.4992%" y="437" width="0.1610%" height="15" fill="rgb(217,170,52)" fg:x="562" fg:w="1"/><text x="90.7492%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="90.4992%" y="421" width="0.1610%" height="15" fill="rgb(214,203,54)" fg:x="562" fg:w="1"/><text x="90.7492%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="90.6602%" y="485" width="0.1610%" height="15" fill="rgb(248,215,49)" fg:x="563" fg:w="1"/><text x="90.9102%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="90.6602%" y="469" width="0.1610%" height="15" fill="rgb(208,46,10)" fg:x="563" fg:w="1"/><text x="90.9102%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="90.6602%" y="453" width="0.1610%" height="15" fill="rgb(254,5,31)" fg:x="563" fg:w="1"/><text x="90.9102%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="90.6602%" y="437" width="0.1610%" height="15" fill="rgb(222,104,33)" fg:x="563" fg:w="1"/><text x="90.9102%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="90.6602%" y="421" width="0.1610%" height="15" fill="rgb(248,49,16)" fg:x="563" fg:w="1"/><text x="90.9102%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="90.6602%" y="405" width="0.1610%" height="15" fill="rgb(232,198,41)" fg:x="563" fg:w="1"/><text x="90.9102%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.48%)</title><rect x="90.8213%" y="485" width="0.4831%" height="15" fill="rgb(214,125,3)" fg:x="564" fg:w="3"/><text x="91.0713%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3 samples, 0.48%)</title><rect x="90.8213%" y="469" width="0.4831%" height="15" fill="rgb(229,220,28)" fg:x="564" fg:w="3"/><text x="91.0713%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3 samples, 0.48%)</title><rect x="90.8213%" y="453" width="0.4831%" height="15" fill="rgb(222,64,37)" fg:x="564" fg:w="3"/><text x="91.0713%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3 samples, 0.48%)</title><rect x="90.8213%" y="437" width="0.4831%" height="15" fill="rgb(249,184,13)" fg:x="564" fg:w="3"/><text x="91.0713%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="91.3043%" y="469" width="0.3221%" height="15" fill="rgb(252,176,6)" fg:x="567" fg:w="2"/><text x="91.5543%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="91.3043%" y="453" width="0.3221%" height="15" fill="rgb(228,153,7)" fg:x="567" fg:w="2"/><text x="91.5543%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="91.3043%" y="437" width="0.3221%" height="15" fill="rgb(242,193,5)" fg:x="567" fg:w="2"/><text x="91.5543%" y="447.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_value_for_node (154 samples, 24.80%)</title><rect x="66.9887%" y="613" width="24.7987%" height="15" fill="rgb(232,140,9)" fg:x="416" fg:w="154"/><text x="67.2387%" y="623.50">micrograd_rs::engine::RunnableGraph::get..</text></g><g><title>micrograd_rs::engine::RunnableGraph::get_node_value (153 samples, 24.64%)</title><rect x="67.1498%" y="597" width="24.6377%" height="15" fill="rgb(213,222,16)" fg:x="417" fg:w="153"/><text x="67.3998%" y="607.50">micrograd_rs::engine::RunnableGraph::ge..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 2.25%)</title><rect x="89.5330%" y="581" width="2.2544%" height="15" fill="rgb(222,75,50)" fg:x="556" fg:w="14"/><text x="89.7830%" y="591.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 2.25%)</title><rect x="89.5330%" y="565" width="2.2544%" height="15" fill="rgb(205,180,2)" fg:x="556" fg:w="14"/><text x="89.7830%" y="575.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 2.25%)</title><rect x="89.5330%" y="549" width="2.2544%" height="15" fill="rgb(216,34,7)" fg:x="556" fg:w="14"/><text x="89.7830%" y="559.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 1.29%)</title><rect x="90.4992%" y="533" width="1.2882%" height="15" fill="rgb(253,16,32)" fg:x="562" fg:w="8"/><text x="90.7492%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 1.29%)</title><rect x="90.4992%" y="517" width="1.2882%" height="15" fill="rgb(208,97,28)" fg:x="562" fg:w="8"/><text x="90.7492%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (7 samples, 1.13%)</title><rect x="90.6602%" y="501" width="1.1272%" height="15" fill="rgb(225,92,11)" fg:x="563" fg:w="7"/><text x="90.9102%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.48%)</title><rect x="91.3043%" y="485" width="0.4831%" height="15" fill="rgb(243,38,12)" fg:x="567" fg:w="3"/><text x="91.5543%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="91.6264%" y="469" width="0.1610%" height="15" fill="rgb(208,139,16)" fg:x="569" fg:w="1"/><text x="91.8764%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="91.6264%" y="453" width="0.1610%" height="15" fill="rgb(227,24,9)" fg:x="569" fg:w="1"/><text x="91.8764%" y="463.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="91.6264%" y="437" width="0.1610%" height="15" fill="rgb(206,62,11)" fg:x="569" fg:w="1"/><text x="91.8764%" y="447.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="91.6264%" y="421" width="0.1610%" height="15" fill="rgb(228,134,27)" fg:x="569" fg:w="1"/><text x="91.8764%" y="431.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="91.6264%" y="405" width="0.1610%" height="15" fill="rgb(205,55,33)" fg:x="569" fg:w="1"/><text x="91.8764%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="91.7874%" y="549" width="0.1610%" height="15" fill="rgb(243,75,43)" fg:x="570" fg:w="1"/><text x="92.0374%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="91.7874%" y="533" width="0.1610%" height="15" fill="rgb(223,27,42)" fg:x="570" fg:w="1"/><text x="92.0374%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="91.7874%" y="517" width="0.1610%" height="15" fill="rgb(232,189,33)" fg:x="570" fg:w="1"/><text x="92.0374%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="91.9485%" y="549" width="0.1610%" height="15" fill="rgb(210,9,39)" fg:x="571" fg:w="1"/><text x="92.1985%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="91.9485%" y="533" width="0.1610%" height="15" fill="rgb(242,85,26)" fg:x="571" fg:w="1"/><text x="92.1985%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="91.9485%" y="517" width="0.1610%" height="15" fill="rgb(248,44,4)" fg:x="571" fg:w="1"/><text x="92.1985%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="91.9485%" y="501" width="0.1610%" height="15" fill="rgb(250,96,46)" fg:x="571" fg:w="1"/><text x="92.1985%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="91.9485%" y="485" width="0.1610%" height="15" fill="rgb(229,116,26)" fg:x="571" fg:w="1"/><text x="92.1985%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="91.9485%" y="469" width="0.1610%" height="15" fill="rgb(246,94,34)" fg:x="571" fg:w="1"/><text x="92.1985%" y="479.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="91.9485%" y="453" width="0.1610%" height="15" fill="rgb(251,73,21)" fg:x="571" fg:w="1"/><text x="92.1985%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="91.9485%" y="437" width="0.1610%" height="15" fill="rgb(254,121,25)" fg:x="571" fg:w="1"/><text x="92.1985%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="91.9485%" y="421" width="0.1610%" height="15" fill="rgb(215,161,49)" fg:x="571" fg:w="1"/><text x="92.1985%" y="431.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (3 samples, 0.48%)</title><rect x="91.7874%" y="613" width="0.4831%" height="15" fill="rgb(221,43,13)" fg:x="570" fg:w="3"/><text x="92.0374%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (3 samples, 0.48%)</title><rect x="91.7874%" y="597" width="0.4831%" height="15" fill="rgb(249,5,37)" fg:x="570" fg:w="3"/><text x="92.0374%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (3 samples, 0.48%)</title><rect x="91.7874%" y="581" width="0.4831%" height="15" fill="rgb(226,25,44)" fg:x="570" fg:w="3"/><text x="92.0374%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (3 samples, 0.48%)</title><rect x="91.7874%" y="565" width="0.4831%" height="15" fill="rgb(238,189,16)" fg:x="570" fg:w="3"/><text x="92.0374%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.16%)</title><rect x="92.1095%" y="549" width="0.1610%" height="15" fill="rgb(251,186,8)" fg:x="572" fg:w="1"/><text x="92.3595%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="92.1095%" y="533" width="0.1610%" height="15" fill="rgb(254,34,31)" fg:x="572" fg:w="1"/><text x="92.3595%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="92.1095%" y="517" width="0.1610%" height="15" fill="rgb(225,215,27)" fg:x="572" fg:w="1"/><text x="92.3595%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="92.1095%" y="501" width="0.1610%" height="15" fill="rgb(221,192,48)" fg:x="572" fg:w="1"/><text x="92.3595%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="92.1095%" y="485" width="0.1610%" height="15" fill="rgb(219,137,20)" fg:x="572" fg:w="1"/><text x="92.3595%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="92.1095%" y="469" width="0.1610%" height="15" fill="rgb(219,84,11)" fg:x="572" fg:w="1"/><text x="92.3595%" y="479.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="92.1095%" y="453" width="0.1610%" height="15" fill="rgb(224,10,23)" fg:x="572" fg:w="1"/><text x="92.3595%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="92.1095%" y="437" width="0.1610%" height="15" fill="rgb(248,22,39)" fg:x="572" fg:w="1"/><text x="92.3595%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="92.1095%" y="421" width="0.1610%" height="15" fill="rgb(212,154,20)" fg:x="572" fg:w="1"/><text x="92.3595%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="92.2705%" y="453" width="0.1610%" height="15" fill="rgb(236,199,50)" fg:x="573" fg:w="1"/><text x="92.5205%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="92.2705%" y="437" width="0.1610%" height="15" fill="rgb(211,9,17)" fg:x="573" fg:w="1"/><text x="92.5205%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="92.2705%" y="421" width="0.1610%" height="15" fill="rgb(243,216,36)" fg:x="573" fg:w="1"/><text x="92.5205%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="92.2705%" y="405" width="0.1610%" height="15" fill="rgb(250,2,10)" fg:x="573" fg:w="1"/><text x="92.5205%" y="415.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="92.2705%" y="389" width="0.1610%" height="15" fill="rgb(226,50,48)" fg:x="573" fg:w="1"/><text x="92.5205%" y="399.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="92.2705%" y="373" width="0.1610%" height="15" fill="rgb(243,81,16)" fg:x="573" fg:w="1"/><text x="92.5205%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="92.2705%" y="565" width="0.3221%" height="15" fill="rgb(250,14,2)" fg:x="573" fg:w="2"/><text x="92.5205%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="92.2705%" y="549" width="0.3221%" height="15" fill="rgb(233,135,29)" fg:x="573" fg:w="2"/><text x="92.5205%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.32%)</title><rect x="92.2705%" y="533" width="0.3221%" height="15" fill="rgb(224,64,43)" fg:x="573" fg:w="2"/><text x="92.5205%" y="543.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (2 samples, 0.32%)</title><rect x="92.2705%" y="517" width="0.3221%" height="15" fill="rgb(238,84,13)" fg:x="573" fg:w="2"/><text x="92.5205%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.32%)</title><rect x="92.2705%" y="501" width="0.3221%" height="15" fill="rgb(253,48,26)" fg:x="573" fg:w="2"/><text x="92.5205%" y="511.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.32%)</title><rect x="92.2705%" y="485" width="0.3221%" height="15" fill="rgb(205,223,31)" fg:x="573" fg:w="2"/><text x="92.5205%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.32%)</title><rect x="92.2705%" y="469" width="0.3221%" height="15" fill="rgb(221,41,32)" fg:x="573" fg:w="2"/><text x="92.5205%" y="479.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="92.4316%" y="453" width="0.1610%" height="15" fill="rgb(213,158,31)" fg:x="574" fg:w="1"/><text x="92.6816%" y="463.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="92.4316%" y="437" width="0.1610%" height="15" fill="rgb(245,126,43)" fg:x="574" fg:w="1"/><text x="92.6816%" y="447.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="92.4316%" y="421" width="0.1610%" height="15" fill="rgb(227,7,22)" fg:x="574" fg:w="1"/><text x="92.6816%" y="431.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="92.5926%" y="517" width="0.1610%" height="15" fill="rgb(252,90,44)" fg:x="575" fg:w="1"/><text x="92.8426%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="92.5926%" y="501" width="0.1610%" height="15" fill="rgb(253,91,0)" fg:x="575" fg:w="1"/><text x="92.8426%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="92.5926%" y="485" width="0.1610%" height="15" fill="rgb(252,175,49)" fg:x="575" fg:w="1"/><text x="92.8426%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="92.7536%" y="517" width="0.1610%" height="15" fill="rgb(246,150,1)" fg:x="576" fg:w="1"/><text x="93.0036%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.16%)</title><rect x="92.7536%" y="501" width="0.1610%" height="15" fill="rgb(241,192,25)" fg:x="576" fg:w="1"/><text x="93.0036%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.16%)</title><rect x="92.7536%" y="485" width="0.1610%" height="15" fill="rgb(239,187,11)" fg:x="576" fg:w="1"/><text x="93.0036%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="92.7536%" y="469" width="0.1610%" height="15" fill="rgb(218,202,51)" fg:x="576" fg:w="1"/><text x="93.0036%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="92.7536%" y="453" width="0.1610%" height="15" fill="rgb(225,176,8)" fg:x="576" fg:w="1"/><text x="93.0036%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="92.7536%" y="437" width="0.1610%" height="15" fill="rgb(219,122,41)" fg:x="576" fg:w="1"/><text x="93.0036%" y="447.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_node_value (162 samples, 26.09%)</title><rect x="66.9887%" y="629" width="26.0870%" height="15" fill="rgb(248,140,20)" fg:x="416" fg:w="162"/><text x="67.2387%" y="639.50">micrograd_rs::engine::RunnableGraph::get_n..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.81%)</title><rect x="92.2705%" y="613" width="0.8052%" height="15" fill="rgb(245,41,37)" fg:x="573" fg:w="5"/><text x="92.5205%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.81%)</title><rect x="92.2705%" y="597" width="0.8052%" height="15" fill="rgb(235,82,39)" fg:x="573" fg:w="5"/><text x="92.5205%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.81%)</title><rect x="92.2705%" y="581" width="0.8052%" height="15" fill="rgb(230,108,42)" fg:x="573" fg:w="5"/><text x="92.5205%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.48%)</title><rect x="92.5926%" y="565" width="0.4831%" height="15" fill="rgb(215,150,50)" fg:x="575" fg:w="3"/><text x="92.8426%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="92.5926%" y="549" width="0.4831%" height="15" fill="rgb(233,212,5)" fg:x="575" fg:w="3"/><text x="92.8426%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="92.5926%" y="533" width="0.4831%" height="15" fill="rgb(245,80,22)" fg:x="575" fg:w="3"/><text x="92.8426%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="92.9147%" y="517" width="0.1610%" height="15" fill="rgb(238,129,16)" fg:x="577" fg:w="1"/><text x="93.1647%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="92.9147%" y="501" width="0.1610%" height="15" fill="rgb(240,19,0)" fg:x="577" fg:w="1"/><text x="93.1647%" y="511.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="92.9147%" y="485" width="0.1610%" height="15" fill="rgb(232,42,35)" fg:x="577" fg:w="1"/><text x="93.1647%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="92.9147%" y="469" width="0.1610%" height="15" fill="rgb(223,130,24)" fg:x="577" fg:w="1"/><text x="93.1647%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="92.9147%" y="453" width="0.1610%" height="15" fill="rgb(237,16,22)" fg:x="577" fg:w="1"/><text x="93.1647%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="93.0757%" y="533" width="0.1610%" height="15" fill="rgb(248,192,20)" fg:x="578" fg:w="1"/><text x="93.3257%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="93.0757%" y="517" width="0.1610%" height="15" fill="rgb(233,167,2)" fg:x="578" fg:w="1"/><text x="93.3257%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="93.0757%" y="501" width="0.1610%" height="15" fill="rgb(252,71,44)" fg:x="578" fg:w="1"/><text x="93.3257%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="93.0757%" y="485" width="0.1610%" height="15" fill="rgb(238,37,47)" fg:x="578" fg:w="1"/><text x="93.3257%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="93.0757%" y="469" width="0.1610%" height="15" fill="rgb(214,202,54)" fg:x="578" fg:w="1"/><text x="93.3257%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="93.0757%" y="453" width="0.1610%" height="15" fill="rgb(254,165,40)" fg:x="578" fg:w="1"/><text x="93.3257%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="93.0757%" y="437" width="0.1610%" height="15" fill="rgb(246,173,38)" fg:x="578" fg:w="1"/><text x="93.3257%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="93.0757%" y="565" width="0.3221%" height="15" fill="rgb(215,3,27)" fg:x="578" fg:w="2"/><text x="93.3257%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="93.0757%" y="549" width="0.3221%" height="15" fill="rgb(239,169,51)" fg:x="578" fg:w="2"/><text x="93.3257%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.16%)</title><rect x="93.2367%" y="533" width="0.1610%" height="15" fill="rgb(212,5,25)" fg:x="579" fg:w="1"/><text x="93.4867%" y="543.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.16%)</title><rect x="93.2367%" y="517" width="0.1610%" height="15" fill="rgb(243,45,17)" fg:x="579" fg:w="1"/><text x="93.4867%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.16%)</title><rect x="93.2367%" y="501" width="0.1610%" height="15" fill="rgb(242,97,9)" fg:x="579" fg:w="1"/><text x="93.4867%" y="511.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.16%)</title><rect x="93.2367%" y="485" width="0.1610%" height="15" fill="rgb(228,71,31)" fg:x="579" fg:w="1"/><text x="93.4867%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="93.2367%" y="469" width="0.1610%" height="15" fill="rgb(252,184,16)" fg:x="579" fg:w="1"/><text x="93.4867%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="93.2367%" y="453" width="0.1610%" height="15" fill="rgb(236,169,46)" fg:x="579" fg:w="1"/><text x="93.4867%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="93.2367%" y="437" width="0.1610%" height="15" fill="rgb(207,17,47)" fg:x="579" fg:w="1"/><text x="93.4867%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="93.2367%" y="421" width="0.1610%" height="15" fill="rgb(206,201,28)" fg:x="579" fg:w="1"/><text x="93.4867%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.16%)</title><rect x="93.2367%" y="405" width="0.1610%" height="15" fill="rgb(224,184,23)" fg:x="579" fg:w="1"/><text x="93.4867%" y="415.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="93.2367%" y="389" width="0.1610%" height="15" fill="rgb(208,139,48)" fg:x="579" fg:w="1"/><text x="93.4867%" y="399.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="93.2367%" y="373" width="0.1610%" height="15" fill="rgb(208,130,10)" fg:x="579" fg:w="1"/><text x="93.4867%" y="383.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="93.2367%" y="357" width="0.1610%" height="15" fill="rgb(211,213,45)" fg:x="579" fg:w="1"/><text x="93.4867%" y="367.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="93.3977%" y="517" width="0.1610%" height="15" fill="rgb(235,100,30)" fg:x="580" fg:w="1"/><text x="93.6477%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="93.3977%" y="501" width="0.1610%" height="15" fill="rgb(206,144,31)" fg:x="580" fg:w="1"/><text x="93.6477%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="93.3977%" y="485" width="0.1610%" height="15" fill="rgb(224,200,26)" fg:x="580" fg:w="1"/><text x="93.6477%" y="495.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (4 samples, 0.64%)</title><rect x="93.0757%" y="629" width="0.6441%" height="15" fill="rgb(247,104,53)" fg:x="578" fg:w="4"/><text x="93.3257%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4 samples, 0.64%)</title><rect x="93.0757%" y="613" width="0.6441%" height="15" fill="rgb(220,14,17)" fg:x="578" fg:w="4"/><text x="93.3257%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.64%)</title><rect x="93.0757%" y="597" width="0.6441%" height="15" fill="rgb(230,140,40)" fg:x="578" fg:w="4"/><text x="93.3257%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.64%)</title><rect x="93.0757%" y="581" width="0.6441%" height="15" fill="rgb(229,2,41)" fg:x="578" fg:w="4"/><text x="93.3257%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.32%)</title><rect x="93.3977%" y="565" width="0.3221%" height="15" fill="rgb(232,89,16)" fg:x="580" fg:w="2"/><text x="93.6477%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="93.3977%" y="549" width="0.3221%" height="15" fill="rgb(247,59,52)" fg:x="580" fg:w="2"/><text x="93.6477%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="93.3977%" y="533" width="0.3221%" height="15" fill="rgb(226,110,21)" fg:x="580" fg:w="2"/><text x="93.6477%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="93.5588%" y="517" width="0.1610%" height="15" fill="rgb(224,176,43)" fg:x="581" fg:w="1"/><text x="93.8088%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="93.5588%" y="501" width="0.1610%" height="15" fill="rgb(221,73,6)" fg:x="581" fg:w="1"/><text x="93.8088%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="93.5588%" y="485" width="0.1610%" height="15" fill="rgb(232,78,19)" fg:x="581" fg:w="1"/><text x="93.8088%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="93.5588%" y="469" width="0.1610%" height="15" fill="rgb(233,112,48)" fg:x="581" fg:w="1"/><text x="93.8088%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="93.5588%" y="453" width="0.1610%" height="15" fill="rgb(243,131,47)" fg:x="581" fg:w="1"/><text x="93.8088%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="93.5588%" y="437" width="0.1610%" height="15" fill="rgb(226,51,1)" fg:x="581" fg:w="1"/><text x="93.8088%" y="447.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="93.7198%" y="597" width="0.1610%" height="15" fill="rgb(247,58,7)" fg:x="582" fg:w="1"/><text x="93.9698%" y="607.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="93.7198%" y="581" width="0.1610%" height="15" fill="rgb(209,7,32)" fg:x="582" fg:w="1"/><text x="93.9698%" y="591.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="93.7198%" y="565" width="0.1610%" height="15" fill="rgb(209,39,41)" fg:x="582" fg:w="1"/><text x="93.9698%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="93.8808%" y="581" width="0.1610%" height="15" fill="rgb(226,182,46)" fg:x="583" fg:w="1"/><text x="94.1308%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="93.8808%" y="565" width="0.1610%" height="15" fill="rgb(230,219,10)" fg:x="583" fg:w="1"/><text x="94.1308%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="93.8808%" y="549" width="0.1610%" height="15" fill="rgb(227,175,30)" fg:x="583" fg:w="1"/><text x="94.1308%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="93.8808%" y="533" width="0.1610%" height="15" fill="rgb(217,2,50)" fg:x="583" fg:w="1"/><text x="94.1308%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="93.8808%" y="517" width="0.1610%" height="15" fill="rgb(229,160,0)" fg:x="583" fg:w="1"/><text x="94.1308%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="93.8808%" y="501" width="0.1610%" height="15" fill="rgb(207,78,37)" fg:x="583" fg:w="1"/><text x="94.1308%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="93.8808%" y="485" width="0.1610%" height="15" fill="rgb(225,57,0)" fg:x="583" fg:w="1"/><text x="94.1308%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="93.8808%" y="469" width="0.1610%" height="15" fill="rgb(232,154,2)" fg:x="583" fg:w="1"/><text x="94.1308%" y="479.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_value_for_node (170 samples, 27.38%)</title><rect x="66.8277%" y="645" width="27.3752%" height="15" fill="rgb(241,212,25)" fg:x="415" fg:w="170"/><text x="67.0777%" y="655.50">micrograd_rs::engine::RunnableGraph::get_val..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.48%)</title><rect x="93.7198%" y="629" width="0.4831%" height="15" fill="rgb(226,69,20)" fg:x="582" fg:w="3"/><text x="93.9698%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.48%)</title><rect x="93.7198%" y="613" width="0.4831%" height="15" fill="rgb(247,184,54)" fg:x="582" fg:w="3"/><text x="93.9698%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.32%)</title><rect x="93.8808%" y="597" width="0.3221%" height="15" fill="rgb(210,145,0)" fg:x="583" fg:w="2"/><text x="94.1308%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.16%)</title><rect x="94.0419%" y="581" width="0.1610%" height="15" fill="rgb(253,82,12)" fg:x="584" fg:w="1"/><text x="94.2919%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="94.0419%" y="565" width="0.1610%" height="15" fill="rgb(245,42,11)" fg:x="584" fg:w="1"/><text x="94.2919%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="94.0419%" y="549" width="0.1610%" height="15" fill="rgb(219,147,32)" fg:x="584" fg:w="1"/><text x="94.2919%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="94.0419%" y="533" width="0.1610%" height="15" fill="rgb(246,12,7)" fg:x="584" fg:w="1"/><text x="94.2919%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="94.0419%" y="517" width="0.1610%" height="15" fill="rgb(243,50,9)" fg:x="584" fg:w="1"/><text x="94.2919%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="94.0419%" y="501" width="0.1610%" height="15" fill="rgb(219,149,6)" fg:x="584" fg:w="1"/><text x="94.2919%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="94.0419%" y="485" width="0.1610%" height="15" fill="rgb(241,51,42)" fg:x="584" fg:w="1"/><text x="94.2919%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="94.0419%" y="469" width="0.1610%" height="15" fill="rgb(226,128,27)" fg:x="584" fg:w="1"/><text x="94.2919%" y="479.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="94.2029%" y="629" width="0.1610%" height="15" fill="rgb(244,144,4)" fg:x="585" fg:w="1"/><text x="94.4529%" y="639.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="94.2029%" y="613" width="0.1610%" height="15" fill="rgb(221,4,13)" fg:x="585" fg:w="1"/><text x="94.4529%" y="623.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="94.2029%" y="597" width="0.1610%" height="15" fill="rgb(208,170,28)" fg:x="585" fg:w="1"/><text x="94.4529%" y="607.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="94.3639%" y="581" width="0.1610%" height="15" fill="rgb(226,131,13)" fg:x="586" fg:w="1"/><text x="94.6139%" y="591.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="94.3639%" y="565" width="0.1610%" height="15" fill="rgb(215,72,41)" fg:x="586" fg:w="1"/><text x="94.6139%" y="575.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="94.3639%" y="549" width="0.1610%" height="15" fill="rgb(243,108,20)" fg:x="586" fg:w="1"/><text x="94.6139%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="94.5250%" y="549" width="0.1610%" height="15" fill="rgb(230,189,17)" fg:x="587" fg:w="1"/><text x="94.7750%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="94.5250%" y="533" width="0.1610%" height="15" fill="rgb(220,50,17)" fg:x="587" fg:w="1"/><text x="94.7750%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="94.5250%" y="517" width="0.1610%" height="15" fill="rgb(248,152,48)" fg:x="587" fg:w="1"/><text x="94.7750%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="94.6860%" y="501" width="0.1610%" height="15" fill="rgb(244,91,11)" fg:x="588" fg:w="1"/><text x="94.9360%" y="511.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="94.6860%" y="485" width="0.1610%" height="15" fill="rgb(220,157,5)" fg:x="588" fg:w="1"/><text x="94.9360%" y="495.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="94.6860%" y="469" width="0.1610%" height="15" fill="rgb(253,137,8)" fg:x="588" fg:w="1"/><text x="94.9360%" y="479.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="94.6860%" y="453" width="0.1610%" height="15" fill="rgb(217,137,51)" fg:x="588" fg:w="1"/><text x="94.9360%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="94.5250%" y="581" width="0.4831%" height="15" fill="rgb(218,209,53)" fg:x="587" fg:w="3"/><text x="94.7750%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="94.5250%" y="565" width="0.4831%" height="15" fill="rgb(249,137,25)" fg:x="587" fg:w="3"/><text x="94.7750%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="94.6860%" y="549" width="0.3221%" height="15" fill="rgb(239,155,26)" fg:x="588" fg:w="2"/><text x="94.9360%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="94.6860%" y="533" width="0.3221%" height="15" fill="rgb(227,85,46)" fg:x="588" fg:w="2"/><text x="94.9360%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="94.6860%" y="517" width="0.3221%" height="15" fill="rgb(251,107,43)" fg:x="588" fg:w="2"/><text x="94.9360%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="94.8470%" y="501" width="0.1610%" height="15" fill="rgb(234,170,33)" fg:x="589" fg:w="1"/><text x="95.0970%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="94.8470%" y="485" width="0.1610%" height="15" fill="rgb(206,29,35)" fg:x="589" fg:w="1"/><text x="95.0970%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="94.8470%" y="469" width="0.1610%" height="15" fill="rgb(227,138,25)" fg:x="589" fg:w="1"/><text x="95.0970%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="95.0081%" y="533" width="0.1610%" height="15" fill="rgb(249,131,35)" fg:x="590" fg:w="1"/><text x="95.2581%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="95.0081%" y="517" width="0.1610%" height="15" fill="rgb(239,6,40)" fg:x="590" fg:w="1"/><text x="95.2581%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="95.0081%" y="501" width="0.1610%" height="15" fill="rgb(246,136,47)" fg:x="590" fg:w="1"/><text x="95.2581%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="95.0081%" y="485" width="0.1610%" height="15" fill="rgb(253,58,26)" fg:x="590" fg:w="1"/><text x="95.2581%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.16%)</title><rect x="95.1691%" y="517" width="0.1610%" height="15" fill="rgb(237,141,10)" fg:x="591" fg:w="1"/><text x="95.4191%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="95.1691%" y="501" width="0.1610%" height="15" fill="rgb(234,156,12)" fg:x="591" fg:w="1"/><text x="95.4191%" y="511.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="95.1691%" y="485" width="0.1610%" height="15" fill="rgb(243,224,36)" fg:x="591" fg:w="1"/><text x="95.4191%" y="495.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="95.1691%" y="469" width="0.1610%" height="15" fill="rgb(205,229,51)" fg:x="591" fg:w="1"/><text x="95.4191%" y="479.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (8 samples, 1.29%)</title><rect x="94.2029%" y="645" width="1.2882%" height="15" fill="rgb(223,189,4)" fg:x="585" fg:w="8"/><text x="94.4529%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (7 samples, 1.13%)</title><rect x="94.3639%" y="629" width="1.1272%" height="15" fill="rgb(249,167,54)" fg:x="586" fg:w="7"/><text x="94.6139%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (7 samples, 1.13%)</title><rect x="94.3639%" y="613" width="1.1272%" height="15" fill="rgb(218,34,28)" fg:x="586" fg:w="7"/><text x="94.6139%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (7 samples, 1.13%)</title><rect x="94.3639%" y="597" width="1.1272%" height="15" fill="rgb(232,109,42)" fg:x="586" fg:w="7"/><text x="94.6139%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.48%)</title><rect x="95.0081%" y="581" width="0.4831%" height="15" fill="rgb(248,214,46)" fg:x="590" fg:w="3"/><text x="95.2581%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="95.0081%" y="565" width="0.4831%" height="15" fill="rgb(244,216,40)" fg:x="590" fg:w="3"/><text x="95.2581%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="95.0081%" y="549" width="0.4831%" height="15" fill="rgb(231,226,31)" fg:x="590" fg:w="3"/><text x="95.2581%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.32%)</title><rect x="95.1691%" y="533" width="0.3221%" height="15" fill="rgb(238,38,43)" fg:x="591" fg:w="2"/><text x="95.4191%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.16%)</title><rect x="95.3301%" y="517" width="0.1610%" height="15" fill="rgb(208,88,43)" fg:x="592" fg:w="1"/><text x="95.5801%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.16%)</title><rect x="95.3301%" y="501" width="0.1610%" height="15" fill="rgb(205,136,37)" fg:x="592" fg:w="1"/><text x="95.5801%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.16%)</title><rect x="95.3301%" y="485" width="0.1610%" height="15" fill="rgb(237,34,14)" fg:x="592" fg:w="1"/><text x="95.5801%" y="495.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="95.3301%" y="469" width="0.1610%" height="15" fill="rgb(236,193,44)" fg:x="592" fg:w="1"/><text x="95.5801%" y="479.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="95.3301%" y="453" width="0.1610%" height="15" fill="rgb(231,48,10)" fg:x="592" fg:w="1"/><text x="95.5801%" y="463.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="95.3301%" y="437" width="0.1610%" height="15" fill="rgb(213,141,34)" fg:x="592" fg:w="1"/><text x="95.5801%" y="447.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_node_value (179 samples, 28.82%)</title><rect x="66.8277%" y="661" width="28.8245%" height="15" fill="rgb(249,130,34)" fg:x="415" fg:w="179"/><text x="67.0777%" y="671.50">micrograd_rs::engine::RunnableGraph::get_node_..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.16%)</title><rect x="95.4911%" y="645" width="0.1610%" height="15" fill="rgb(219,42,41)" fg:x="593" fg:w="1"/><text x="95.7411%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.16%)</title><rect x="95.4911%" y="629" width="0.1610%" height="15" fill="rgb(224,100,54)" fg:x="593" fg:w="1"/><text x="95.7411%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.16%)</title><rect x="95.4911%" y="613" width="0.1610%" height="15" fill="rgb(229,200,27)" fg:x="593" fg:w="1"/><text x="95.7411%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.16%)</title><rect x="95.4911%" y="597" width="0.1610%" height="15" fill="rgb(217,118,10)" fg:x="593" fg:w="1"/><text x="95.7411%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="95.4911%" y="581" width="0.1610%" height="15" fill="rgb(206,22,3)" fg:x="593" fg:w="1"/><text x="95.7411%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="95.4911%" y="565" width="0.1610%" height="15" fill="rgb(232,163,46)" fg:x="593" fg:w="1"/><text x="95.7411%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="95.4911%" y="549" width="0.1610%" height="15" fill="rgb(206,95,13)" fg:x="593" fg:w="1"/><text x="95.7411%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="95.4911%" y="533" width="0.1610%" height="15" fill="rgb(253,154,18)" fg:x="593" fg:w="1"/><text x="95.7411%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="95.4911%" y="517" width="0.1610%" height="15" fill="rgb(219,32,23)" fg:x="593" fg:w="1"/><text x="95.7411%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="95.4911%" y="501" width="0.1610%" height="15" fill="rgb(230,191,45)" fg:x="593" fg:w="1"/><text x="95.7411%" y="511.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (1 samples, 0.16%)</title><rect x="95.6522%" y="661" width="0.1610%" height="15" fill="rgb(229,64,36)" fg:x="594" fg:w="1"/><text x="95.9022%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.16%)</title><rect x="95.6522%" y="645" width="0.1610%" height="15" fill="rgb(205,129,25)" fg:x="594" fg:w="1"/><text x="95.9022%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.16%)</title><rect x="95.6522%" y="629" width="0.1610%" height="15" fill="rgb(254,112,7)" fg:x="594" fg:w="1"/><text x="95.9022%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.16%)</title><rect x="95.6522%" y="613" width="0.1610%" height="15" fill="rgb(226,53,48)" fg:x="594" fg:w="1"/><text x="95.9022%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.16%)</title><rect x="95.6522%" y="597" width="0.1610%" height="15" fill="rgb(214,153,38)" fg:x="594" fg:w="1"/><text x="95.9022%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.16%)</title><rect x="95.6522%" y="581" width="0.1610%" height="15" fill="rgb(243,101,7)" fg:x="594" fg:w="1"/><text x="95.9022%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.16%)</title><rect x="95.6522%" y="565" width="0.1610%" height="15" fill="rgb(240,140,22)" fg:x="594" fg:w="1"/><text x="95.9022%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="95.6522%" y="549" width="0.1610%" height="15" fill="rgb(235,114,2)" fg:x="594" fg:w="1"/><text x="95.9022%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="95.6522%" y="533" width="0.1610%" height="15" fill="rgb(242,59,12)" fg:x="594" fg:w="1"/><text x="95.9022%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="95.6522%" y="517" width="0.1610%" height="15" fill="rgb(252,134,9)" fg:x="594" fg:w="1"/><text x="95.9022%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="95.8132%" y="613" width="0.1610%" height="15" fill="rgb(236,4,44)" fg:x="595" fg:w="1"/><text x="96.0632%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.16%)</title><rect x="95.8132%" y="597" width="0.1610%" height="15" fill="rgb(254,172,41)" fg:x="595" fg:w="1"/><text x="96.0632%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="95.8132%" y="581" width="0.1610%" height="15" fill="rgb(244,63,20)" fg:x="595" fg:w="1"/><text x="96.0632%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.16%)</title><rect x="95.8132%" y="565" width="0.1610%" height="15" fill="rgb(250,73,31)" fg:x="595" fg:w="1"/><text x="96.0632%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="95.8132%" y="549" width="0.1610%" height="15" fill="rgb(241,38,36)" fg:x="595" fg:w="1"/><text x="96.0632%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="95.8132%" y="533" width="0.1610%" height="15" fill="rgb(245,211,2)" fg:x="595" fg:w="1"/><text x="96.0632%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="95.8132%" y="517" width="0.1610%" height="15" fill="rgb(206,120,28)" fg:x="595" fg:w="1"/><text x="96.0632%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="95.9742%" y="565" width="0.1610%" height="15" fill="rgb(211,59,34)" fg:x="596" fg:w="1"/><text x="96.2242%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="95.9742%" y="549" width="0.1610%" height="15" fill="rgb(233,168,5)" fg:x="596" fg:w="1"/><text x="96.2242%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="95.9742%" y="533" width="0.1610%" height="15" fill="rgb(234,33,13)" fg:x="596" fg:w="1"/><text x="96.2242%" y="543.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_value_for_node (183 samples, 29.47%)</title><rect x="66.8277%" y="677" width="29.4686%" height="15" fill="rgb(231,150,26)" fg:x="415" fg:w="183"/><text x="67.0777%" y="687.50">micrograd_rs::engine::RunnableGraph::get_value_..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.48%)</title><rect x="95.8132%" y="661" width="0.4831%" height="15" fill="rgb(217,191,4)" fg:x="595" fg:w="3"/><text x="96.0632%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.48%)</title><rect x="95.8132%" y="645" width="0.4831%" height="15" fill="rgb(246,198,38)" fg:x="595" fg:w="3"/><text x="96.0632%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.48%)</title><rect x="95.8132%" y="629" width="0.4831%" height="15" fill="rgb(245,64,37)" fg:x="595" fg:w="3"/><text x="96.0632%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.32%)</title><rect x="95.9742%" y="613" width="0.3221%" height="15" fill="rgb(250,30,36)" fg:x="596" fg:w="2"/><text x="96.2242%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="95.9742%" y="597" width="0.3221%" height="15" fill="rgb(217,86,53)" fg:x="596" fg:w="2"/><text x="96.2242%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="95.9742%" y="581" width="0.3221%" height="15" fill="rgb(228,157,16)" fg:x="596" fg:w="2"/><text x="96.2242%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="96.1353%" y="565" width="0.1610%" height="15" fill="rgb(217,59,31)" fg:x="597" fg:w="1"/><text x="96.3853%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.16%)</title><rect x="96.1353%" y="549" width="0.1610%" height="15" fill="rgb(237,138,41)" fg:x="597" fg:w="1"/><text x="96.3853%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="96.1353%" y="533" width="0.1610%" height="15" fill="rgb(227,91,49)" fg:x="597" fg:w="1"/><text x="96.3853%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="96.1353%" y="517" width="0.1610%" height="15" fill="rgb(247,21,44)" fg:x="597" fg:w="1"/><text x="96.3853%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="96.1353%" y="501" width="0.1610%" height="15" fill="rgb(219,210,51)" fg:x="597" fg:w="1"/><text x="96.3853%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="96.2963%" y="581" width="0.3221%" height="15" fill="rgb(209,140,6)" fg:x="598" fg:w="2"/><text x="96.5463%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="96.2963%" y="565" width="0.3221%" height="15" fill="rgb(221,188,24)" fg:x="598" fg:w="2"/><text x="96.5463%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="96.2963%" y="549" width="0.3221%" height="15" fill="rgb(232,154,20)" fg:x="598" fg:w="2"/><text x="96.5463%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.32%)</title><rect x="96.2963%" y="533" width="0.3221%" height="15" fill="rgb(244,137,50)" fg:x="598" fg:w="2"/><text x="96.5463%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="96.2963%" y="517" width="0.3221%" height="15" fill="rgb(225,185,43)" fg:x="598" fg:w="2"/><text x="96.5463%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="96.2963%" y="501" width="0.3221%" height="15" fill="rgb(213,205,38)" fg:x="598" fg:w="2"/><text x="96.5463%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="96.2963%" y="485" width="0.3221%" height="15" fill="rgb(236,73,12)" fg:x="598" fg:w="2"/><text x="96.5463%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="96.2963%" y="613" width="0.4831%" height="15" fill="rgb(235,219,13)" fg:x="598" fg:w="3"/><text x="96.5463%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="96.2963%" y="597" width="0.4831%" height="15" fill="rgb(218,59,36)" fg:x="598" fg:w="3"/><text x="96.5463%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.16%)</title><rect x="96.6184%" y="581" width="0.1610%" height="15" fill="rgb(205,110,39)" fg:x="600" fg:w="1"/><text x="96.8684%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.16%)</title><rect x="96.6184%" y="565" width="0.1610%" height="15" fill="rgb(218,206,42)" fg:x="600" fg:w="1"/><text x="96.8684%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.16%)</title><rect x="96.6184%" y="549" width="0.1610%" height="15" fill="rgb(248,125,24)" fg:x="600" fg:w="1"/><text x="96.8684%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.16%)</title><rect x="96.6184%" y="533" width="0.1610%" height="15" fill="rgb(242,28,27)" fg:x="600" fg:w="1"/><text x="96.8684%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="96.6184%" y="517" width="0.1610%" height="15" fill="rgb(216,228,15)" fg:x="600" fg:w="1"/><text x="96.8684%" y="527.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="96.6184%" y="501" width="0.1610%" height="15" fill="rgb(235,116,46)" fg:x="600" fg:w="1"/><text x="96.8684%" y="511.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="96.6184%" y="485" width="0.1610%" height="15" fill="rgb(224,18,32)" fg:x="600" fg:w="1"/><text x="96.8684%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="96.7794%" y="565" width="0.1610%" height="15" fill="rgb(252,5,12)" fg:x="601" fg:w="1"/><text x="97.0294%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="96.7794%" y="549" width="0.1610%" height="15" fill="rgb(251,36,5)" fg:x="601" fg:w="1"/><text x="97.0294%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="96.7794%" y="533" width="0.1610%" height="15" fill="rgb(217,53,14)" fg:x="601" fg:w="1"/><text x="97.0294%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="96.7794%" y="517" width="0.1610%" height="15" fill="rgb(215,86,45)" fg:x="601" fg:w="1"/><text x="97.0294%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="96.9404%" y="565" width="0.1610%" height="15" fill="rgb(242,169,11)" fg:x="602" fg:w="1"/><text x="97.1904%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="96.9404%" y="549" width="0.1610%" height="15" fill="rgb(211,213,45)" fg:x="602" fg:w="1"/><text x="97.1904%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="96.9404%" y="533" width="0.1610%" height="15" fill="rgb(205,88,11)" fg:x="602" fg:w="1"/><text x="97.1904%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="96.9404%" y="517" width="0.1610%" height="15" fill="rgb(252,69,26)" fg:x="602" fg:w="1"/><text x="97.1904%" y="527.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::update_data_value (6 samples, 0.97%)</title><rect x="96.2963%" y="677" width="0.9662%" height="15" fill="rgb(246,123,37)" fg:x="598" fg:w="6"/><text x="96.5463%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (6 samples, 0.97%)</title><rect x="96.2963%" y="661" width="0.9662%" height="15" fill="rgb(212,205,5)" fg:x="598" fg:w="6"/><text x="96.5463%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (6 samples, 0.97%)</title><rect x="96.2963%" y="645" width="0.9662%" height="15" fill="rgb(253,148,0)" fg:x="598" fg:w="6"/><text x="96.5463%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (6 samples, 0.97%)</title><rect x="96.2963%" y="629" width="0.9662%" height="15" fill="rgb(239,22,4)" fg:x="598" fg:w="6"/><text x="96.5463%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.48%)</title><rect x="96.7794%" y="613" width="0.4831%" height="15" fill="rgb(226,26,53)" fg:x="601" fg:w="3"/><text x="97.0294%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.48%)</title><rect x="96.7794%" y="597" width="0.4831%" height="15" fill="rgb(225,229,45)" fg:x="601" fg:w="3"/><text x="97.0294%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.48%)</title><rect x="96.7794%" y="581" width="0.4831%" height="15" fill="rgb(220,60,37)" fg:x="601" fg:w="3"/><text x="97.0294%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="97.1014%" y="565" width="0.1610%" height="15" fill="rgb(217,180,35)" fg:x="603" fg:w="1"/><text x="97.3514%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="97.1014%" y="549" width="0.1610%" height="15" fill="rgb(229,7,53)" fg:x="603" fg:w="1"/><text x="97.3514%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="97.1014%" y="533" width="0.1610%" height="15" fill="rgb(254,137,3)" fg:x="603" fg:w="1"/><text x="97.3514%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="97.1014%" y="517" width="0.1610%" height="15" fill="rgb(215,140,41)" fg:x="603" fg:w="1"/><text x="97.3514%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.16%)</title><rect x="97.2625%" y="549" width="0.1610%" height="15" fill="rgb(250,80,15)" fg:x="604" fg:w="1"/><text x="97.5125%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="97.2625%" y="533" width="0.1610%" height="15" fill="rgb(252,191,6)" fg:x="604" fg:w="1"/><text x="97.5125%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="97.2625%" y="517" width="0.1610%" height="15" fill="rgb(246,217,18)" fg:x="604" fg:w="1"/><text x="97.5125%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="97.2625%" y="501" width="0.1610%" height="15" fill="rgb(223,93,7)" fg:x="604" fg:w="1"/><text x="97.5125%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.16%)</title><rect x="97.4235%" y="549" width="0.1610%" height="15" fill="rgb(225,55,52)" fg:x="605" fg:w="1"/><text x="97.6735%" y="559.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="97.4235%" y="533" width="0.1610%" height="15" fill="rgb(240,31,24)" fg:x="605" fg:w="1"/><text x="97.6735%" y="543.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="97.4235%" y="517" width="0.1610%" height="15" fill="rgb(205,56,52)" fg:x="605" fg:w="1"/><text x="97.6735%" y="527.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="97.4235%" y="501" width="0.1610%" height="15" fill="rgb(246,146,12)" fg:x="605" fg:w="1"/><text x="97.6735%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.48%)</title><rect x="97.2625%" y="629" width="0.4831%" height="15" fill="rgb(239,84,36)" fg:x="604" fg:w="3"/><text x="97.5125%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.48%)</title><rect x="97.2625%" y="613" width="0.4831%" height="15" fill="rgb(207,41,40)" fg:x="604" fg:w="3"/><text x="97.5125%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="97.2625%" y="597" width="0.4831%" height="15" fill="rgb(241,179,25)" fg:x="604" fg:w="3"/><text x="97.5125%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="97.2625%" y="581" width="0.4831%" height="15" fill="rgb(210,0,34)" fg:x="604" fg:w="3"/><text x="97.5125%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.48%)</title><rect x="97.2625%" y="565" width="0.4831%" height="15" fill="rgb(225,217,29)" fg:x="604" fg:w="3"/><text x="97.5125%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="97.5845%" y="549" width="0.1610%" height="15" fill="rgb(216,191,38)" fg:x="606" fg:w="1"/><text x="97.8345%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="97.5845%" y="533" width="0.1610%" height="15" fill="rgb(232,140,52)" fg:x="606" fg:w="1"/><text x="97.8345%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="97.5845%" y="517" width="0.1610%" height="15" fill="rgb(223,158,51)" fg:x="606" fg:w="1"/><text x="97.8345%" y="527.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="97.7456%" y="613" width="0.1610%" height="15" fill="rgb(235,29,51)" fg:x="607" fg:w="1"/><text x="97.9956%" y="623.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="97.7456%" y="597" width="0.1610%" height="15" fill="rgb(215,181,18)" fg:x="607" fg:w="1"/><text x="97.9956%" y="607.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="97.7456%" y="581" width="0.1610%" height="15" fill="rgb(227,125,34)" fg:x="607" fg:w="1"/><text x="97.9956%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.16%)</title><rect x="97.9066%" y="581" width="0.1610%" height="15" fill="rgb(230,197,49)" fg:x="608" fg:w="1"/><text x="98.1566%" y="591.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="97.9066%" y="565" width="0.1610%" height="15" fill="rgb(239,141,16)" fg:x="608" fg:w="1"/><text x="98.1566%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="97.9066%" y="549" width="0.1610%" height="15" fill="rgb(225,105,43)" fg:x="608" fg:w="1"/><text x="98.1566%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="97.9066%" y="533" width="0.1610%" height="15" fill="rgb(214,131,14)" fg:x="608" fg:w="1"/><text x="98.1566%" y="543.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="98.0676%" y="565" width="0.1610%" height="15" fill="rgb(229,177,11)" fg:x="609" fg:w="1"/><text x="98.3176%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="98.0676%" y="549" width="0.1610%" height="15" fill="rgb(231,180,14)" fg:x="609" fg:w="1"/><text x="98.3176%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="98.0676%" y="533" width="0.1610%" height="15" fill="rgb(232,88,2)" fg:x="609" fg:w="1"/><text x="98.3176%" y="543.50"></text></g><g><title>micrograd_rs::engine::RunnableGraph::get_value_for_node (197 samples, 31.72%)</title><rect x="66.8277%" y="709" width="31.7230%" height="15" fill="rgb(205,220,8)" fg:x="415" fg:w="197"/><text x="67.0777%" y="719.50">micrograd_rs::engine::RunnableGraph::get_value_for_..</text></g><g><title>micrograd_rs::engine::RunnableGraph::get_node_value (197 samples, 31.72%)</title><rect x="66.8277%" y="693" width="31.7230%" height="15" fill="rgb(225,23,53)" fg:x="415" fg:w="197"/><text x="67.0777%" y="703.50">micrograd_rs::engine::RunnableGraph::get_node_value</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 1.29%)</title><rect x="97.2625%" y="677" width="1.2882%" height="15" fill="rgb(213,62,29)" fg:x="604" fg:w="8"/><text x="97.5125%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 1.29%)</title><rect x="97.2625%" y="661" width="1.2882%" height="15" fill="rgb(227,75,7)" fg:x="604" fg:w="8"/><text x="97.5125%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 1.29%)</title><rect x="97.2625%" y="645" width="1.2882%" height="15" fill="rgb(207,105,14)" fg:x="604" fg:w="8"/><text x="97.5125%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.81%)</title><rect x="97.7456%" y="629" width="0.8052%" height="15" fill="rgb(245,62,29)" fg:x="607" fg:w="5"/><text x="97.9956%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.64%)</title><rect x="97.9066%" y="613" width="0.6441%" height="15" fill="rgb(236,202,4)" fg:x="608" fg:w="4"/><text x="98.1566%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.64%)</title><rect x="97.9066%" y="597" width="0.6441%" height="15" fill="rgb(250,67,1)" fg:x="608" fg:w="4"/><text x="98.1566%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.48%)</title><rect x="98.0676%" y="581" width="0.4831%" height="15" fill="rgb(253,115,44)" fg:x="609" fg:w="3"/><text x="98.3176%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.32%)</title><rect x="98.2287%" y="565" width="0.3221%" height="15" fill="rgb(251,139,18)" fg:x="610" fg:w="2"/><text x="98.4787%" y="575.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="98.2287%" y="549" width="0.3221%" height="15" fill="rgb(218,22,32)" fg:x="610" fg:w="2"/><text x="98.4787%" y="559.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="98.2287%" y="533" width="0.3221%" height="15" fill="rgb(243,53,5)" fg:x="610" fg:w="2"/><text x="98.4787%" y="543.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="98.2287%" y="517" width="0.3221%" height="15" fill="rgb(227,56,16)" fg:x="610" fg:w="2"/><text x="98.4787%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.32%)</title><rect x="98.5507%" y="661" width="0.3221%" height="15" fill="rgb(245,53,0)" fg:x="612" fg:w="2"/><text x="98.8007%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.32%)</title><rect x="98.5507%" y="645" width="0.3221%" height="15" fill="rgb(216,170,35)" fg:x="612" fg:w="2"/><text x="98.8007%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="98.5507%" y="629" width="0.3221%" height="15" fill="rgb(211,200,8)" fg:x="612" fg:w="2"/><text x="98.8007%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="98.5507%" y="613" width="0.3221%" height="15" fill="rgb(228,204,44)" fg:x="612" fg:w="2"/><text x="98.8007%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.32%)</title><rect x="98.5507%" y="597" width="0.3221%" height="15" fill="rgb(214,121,17)" fg:x="612" fg:w="2"/><text x="98.8007%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.32%)</title><rect x="98.5507%" y="581" width="0.3221%" height="15" fill="rgb(233,64,38)" fg:x="612" fg:w="2"/><text x="98.8007%" y="591.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="98.5507%" y="565" width="0.3221%" height="15" fill="rgb(253,54,19)" fg:x="612" fg:w="2"/><text x="98.8007%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="98.5507%" y="549" width="0.3221%" height="15" fill="rgb(253,94,18)" fg:x="612" fg:w="2"/><text x="98.8007%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="98.5507%" y="533" width="0.3221%" height="15" fill="rgb(227,57,52)" fg:x="612" fg:w="2"/><text x="98.8007%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.16%)</title><rect x="98.8728%" y="613" width="0.1610%" height="15" fill="rgb(230,228,50)" fg:x="614" fg:w="1"/><text x="99.1228%" y="623.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.16%)</title><rect x="98.8728%" y="597" width="0.1610%" height="15" fill="rgb(217,205,27)" fg:x="614" fg:w="1"/><text x="99.1228%" y="607.50"></text></g><g><title>&lt;micrograd_rs::engine::NodeId as core::cmp::PartialEq&gt;::eq (1 samples, 0.16%)</title><rect x="98.8728%" y="581" width="0.1610%" height="15" fill="rgb(252,71,50)" fg:x="614" fg:w="1"/><text x="99.1228%" y="591.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="98.8728%" y="565" width="0.1610%" height="15" fill="rgb(209,86,4)" fg:x="614" fg:w="1"/><text x="99.1228%" y="575.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="98.8728%" y="549" width="0.1610%" height="15" fill="rgb(229,94,0)" fg:x="614" fg:w="1"/><text x="99.1228%" y="559.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="98.8728%" y="533" width="0.1610%" height="15" fill="rgb(252,223,21)" fg:x="614" fg:w="1"/><text x="99.1228%" y="543.50"></text></g><g><title>micrograd_rs::nn::MultiLayerPerceptron::forward (208 samples, 33.49%)</title><rect x="65.7005%" y="757" width="33.4944%" height="15" fill="rgb(230,210,4)" fg:x="408" fg:w="208"/><text x="65.9505%" y="767.50">micrograd_rs::nn::MultiLayerPerceptron::forward</text></g><g><title>micrograd_rs::engine::RunnableGraph::forward (201 samples, 32.37%)</title><rect x="66.8277%" y="741" width="32.3671%" height="15" fill="rgb(240,149,38)" fg:x="415" fg:w="201"/><text x="67.0777%" y="751.50">micrograd_rs::engine::RunnableGraph::forward</text></g><g><title>micrograd_rs::engine::RunnableGraph::get_node_value (201 samples, 32.37%)</title><rect x="66.8277%" y="725" width="32.3671%" height="15" fill="rgb(254,105,20)" fg:x="415" fg:w="201"/><text x="67.0777%" y="735.50">micrograd_rs::engine::RunnableGraph::get_node_value</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.64%)</title><rect x="98.5507%" y="709" width="0.6441%" height="15" fill="rgb(253,87,46)" fg:x="612" fg:w="4"/><text x="98.8007%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.64%)</title><rect x="98.5507%" y="693" width="0.6441%" height="15" fill="rgb(253,116,33)" fg:x="612" fg:w="4"/><text x="98.8007%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.64%)</title><rect x="98.5507%" y="677" width="0.6441%" height="15" fill="rgb(229,198,5)" fg:x="612" fg:w="4"/><text x="98.8007%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.32%)</title><rect x="98.8728%" y="661" width="0.3221%" height="15" fill="rgb(242,38,37)" fg:x="614" fg:w="2"/><text x="99.1228%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.32%)</title><rect x="98.8728%" y="645" width="0.3221%" height="15" fill="rgb(242,69,53)" fg:x="614" fg:w="2"/><text x="99.1228%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.32%)</title><rect x="98.8728%" y="629" width="0.3221%" height="15" fill="rgb(249,80,16)" fg:x="614" fg:w="2"/><text x="99.1228%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.16%)</title><rect x="99.0338%" y="613" width="0.1610%" height="15" fill="rgb(206,128,11)" fg:x="615" fg:w="1"/><text x="99.2838%" y="623.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="99.0338%" y="597" width="0.1610%" height="15" fill="rgb(212,35,20)" fg:x="615" fg:w="1"/><text x="99.2838%" y="607.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="99.0338%" y="581" width="0.1610%" height="15" fill="rgb(236,79,13)" fg:x="615" fg:w="1"/><text x="99.2838%" y="591.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="99.0338%" y="565" width="0.1610%" height="15" fill="rgb(233,123,3)" fg:x="615" fg:w="1"/><text x="99.2838%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (605 samples, 97.42%)</title><rect x="2.0934%" y="821" width="97.4235%" height="15" fill="rgb(214,93,52)" fg:x="13" fg:w="605"/><text x="2.3434%" y="831.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (605 samples, 97.42%)</title><rect x="2.0934%" y="805" width="97.4235%" height="15" fill="rgb(251,37,40)" fg:x="13" fg:w="605"/><text x="2.3434%" y="815.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (604 samples, 97.26%)</title><rect x="2.2544%" y="789" width="97.2625%" height="15" fill="rgb(227,80,54)" fg:x="14" fg:w="604"/><text x="2.5044%" y="799.50">core::iter::adapters::map::map_fold::{{closure}}</text></g><g><title>micrograd_rs::main::{{closure}} (603 samples, 97.10%)</title><rect x="2.4155%" y="773" width="97.1014%" height="15" fill="rgb(254,48,11)" fg:x="15" fg:w="603"/><text x="2.6655%" y="783.50">micrograd_rs::main::{{closure}}</text></g><g><title>std::f64::&lt;impl f64&gt;::powf (2 samples, 0.32%)</title><rect x="99.1948%" y="757" width="0.3221%" height="15" fill="rgb(235,193,26)" fg:x="616" fg:w="2"/><text x="99.4448%" y="767.50"></text></g><g><title>__pow (2 samples, 0.32%)</title><rect x="99.1948%" y="741" width="0.3221%" height="15" fill="rgb(229,99,21)" fg:x="616" fg:w="2"/><text x="99.4448%" y="751.50"></text></g><g><title>__ieee754_pow_fma (2 samples, 0.32%)</title><rect x="99.1948%" y="725" width="0.3221%" height="15" fill="rgb(211,140,41)" fg:x="616" fg:w="2"/><text x="99.4448%" y="735.50"></text></g><g><title>exp_inline (2 samples, 0.32%)</title><rect x="99.1948%" y="709" width="0.3221%" height="15" fill="rgb(240,227,30)" fg:x="616" fg:w="2"/><text x="99.4448%" y="719.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (2 samples, 0.32%)</title><rect x="99.1948%" y="693" width="0.3221%" height="15" fill="rgb(215,224,45)" fg:x="616" fg:w="2"/><text x="99.4448%" y="703.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 0.32%)</title><rect x="99.1948%" y="677" width="0.3221%" height="15" fill="rgb(206,123,31)" fg:x="616" fg:w="2"/><text x="99.4448%" y="687.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 0.32%)</title><rect x="99.1948%" y="661" width="0.3221%" height="15" fill="rgb(210,138,16)" fg:x="616" fg:w="2"/><text x="99.4448%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::unzip (608 samples, 97.91%)</title><rect x="1.7713%" y="853" width="97.9066%" height="15" fill="rgb(228,57,28)" fg:x="11" fg:w="608"/><text x="2.0213%" y="863.50">core::iter::traits::iterator::Iterator::unzip</text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (608 samples, 97.91%)</title><rect x="1.7713%" y="837" width="97.9066%" height="15" fill="rgb(242,170,10)" fg:x="11" fg:w="608"/><text x="2.0213%" y="847.50">&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend</text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="99.5169%" y="821" width="0.1610%" height="15" fill="rgb(228,214,39)" fg:x="618" fg:w="1"/><text x="99.7669%" y="831.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="99.5169%" y="805" width="0.1610%" height="15" fill="rgb(218,179,33)" fg:x="618" fg:w="1"/><text x="99.7669%" y="815.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="99.5169%" y="789" width="0.1610%" height="15" fill="rgb(235,193,39)" fg:x="618" fg:w="1"/><text x="99.7669%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (1 samples, 0.16%)</title><rect x="99.6779%" y="853" width="0.1610%" height="15" fill="rgb(219,221,36)" fg:x="619" fg:w="1"/><text x="99.9279%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (1 samples, 0.16%)</title><rect x="99.6779%" y="837" width="0.1610%" height="15" fill="rgb(248,218,19)" fg:x="619" fg:w="1"/><text x="99.9279%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="99.6779%" y="821" width="0.1610%" height="15" fill="rgb(205,50,9)" fg:x="619" fg:w="1"/><text x="99.9279%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.16%)</title><rect x="99.6779%" y="805" width="0.1610%" height="15" fill="rgb(238,81,28)" fg:x="619" fg:w="1"/><text x="99.9279%" y="815.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="99.6779%" y="789" width="0.1610%" height="15" fill="rgb(235,110,19)" fg:x="619" fg:w="1"/><text x="99.9279%" y="799.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="99.6779%" y="773" width="0.1610%" height="15" fill="rgb(214,7,14)" fg:x="619" fg:w="1"/><text x="99.9279%" y="783.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="99.6779%" y="757" width="0.1610%" height="15" fill="rgb(211,77,3)" fg:x="619" fg:w="1"/><text x="99.9279%" y="767.50"></text></g><g><title>all (621 samples, 100%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(229,5,9)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1167.50"></text></g><g><title>micrograd-rs (621 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(225,90,11)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1151.50">micrograd-rs</text></g><g><title>_start (621 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(242,56,8)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1135.50">_start</text></g><g><title>__libc_start_main (621 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(249,212,39)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1119.50">__libc_start_main</text></g><g><title>main (621 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(236,90,9)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1103.50">main</text></g><g><title>std::rt::lang_start (621 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(206,88,35)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1087.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (621 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(205,126,30)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1071.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (621 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(230,176,12)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (621 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(243,19,9)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (621 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(245,171,17)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1023.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (621 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(227,52,21)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1007.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (621 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(238,69,14)" fg:x="0" fg:w="621"/><text x="0.2500%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (621 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(241,156,39)" fg:x="0" fg:w="621"/><text x="0.2500%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (621 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(212,227,28)" fg:x="0" fg:w="621"/><text x="0.2500%" y="959.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (621 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(209,118,27)" fg:x="0" fg:w="621"/><text x="0.2500%" y="943.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (621 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(226,102,5)" fg:x="0" fg:w="621"/><text x="0.2500%" y="927.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (621 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(223,34,3)" fg:x="0" fg:w="621"/><text x="0.2500%" y="911.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (621 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(221,81,38)" fg:x="0" fg:w="621"/><text x="0.2500%" y="895.50">core::ops::function::FnOnce::call_once</text></g><g><title>micrograd_rs::main (621 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(236,219,28)" fg:x="0" fg:w="621"/><text x="0.2500%" y="879.50">micrograd_rs::main</text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.16%)</title><rect x="99.8390%" y="853" width="0.1610%" height="15" fill="rgb(213,200,14)" fg:x="620" fg:w="1"/><text x="100.0890%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.16%)</title><rect x="99.8390%" y="837" width="0.1610%" height="15" fill="rgb(240,33,19)" fg:x="620" fg:w="1"/><text x="100.0890%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.16%)</title><rect x="99.8390%" y="821" width="0.1610%" height="15" fill="rgb(233,113,27)" fg:x="620" fg:w="1"/><text x="100.0890%" y="831.50"></text></g><g><title>rand::rngs::thread::thread_rng::{{closure}} (1 samples, 0.16%)</title><rect x="99.8390%" y="805" width="0.1610%" height="15" fill="rgb(220,221,18)" fg:x="620" fg:w="1"/><text x="100.0890%" y="815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.16%)</title><rect x="99.8390%" y="789" width="0.1610%" height="15" fill="rgb(238,92,8)" fg:x="620" fg:w="1"/><text x="100.0890%" y="799.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1 samples, 0.16%)</title><rect x="99.8390%" y="773" width="0.1610%" height="15" fill="rgb(222,164,16)" fg:x="620" fg:w="1"/><text x="100.0890%" y="783.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 0.16%)</title><rect x="99.8390%" y="757" width="0.1610%" height="15" fill="rgb(241,119,3)" fg:x="620" fg:w="1"/><text x="100.0890%" y="767.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 0.16%)</title><rect x="99.8390%" y="741" width="0.1610%" height="15" fill="rgb(241,44,8)" fg:x="620" fg:w="1"/><text x="100.0890%" y="751.50"></text></g></svg></svg>